{"version":3,"sources":["C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/$_gendir lazy","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/address.module.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/components/address-overview.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/components/address-overview.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/components/address-save.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/components/address-save.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/models/address-location-model.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/models/address-model.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/models/address-row-viewmodel.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/services/address.service.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/app-routing.module.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/app.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/app.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/app.module.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/authentication.module.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/components/login.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/components/login.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/components/register.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/components/register.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/guard/auth-guard.service.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/services/authentication.observer.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/services/authentication.service.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/viewmodels/application-user.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/layouts/admin/app-layout.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/layouts/admin/app-layout.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/layouts/auth/auth-layout.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/layouts/auth/auth-layout.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/common-app.module.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/address-availability-slider.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/address-availability-slider.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/error.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/error.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/pageNotFound.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/pageNotFound.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/constants.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/helper/component-state-type.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/models/entity/availability-entity-model.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/models/entity/facility-entity-model.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/models/entity/requirement-entity-model.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/models/parameter/pack-type-parameter-model.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/models/parameter/truck-parameter-model.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/globalErrorHandler.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/helperService.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/httpService.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/localization/translate.service.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/notification.service.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/pager.service.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/parameters-data.service.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/footer/footer.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/footer/footer.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/footer/footer.module.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/md/md-table/md-table.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/md/md-table/md-table.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/md/md.module.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/navbar/navbar.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/navbar/navbar.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/navbar/navbar.module.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/sidebar/sidebar-routes.config.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/sidebar/sidebar.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/sidebar/sidebar.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/sidebar/sidebar.module.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/packtype-save.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/packtype-save.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/shipment-overview.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/shipment-overview.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/shipment-save.component.html","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/shipment-save.component.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/models/shipment-detail-model.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/models/shipment-model.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/models/shipment-row-viewmodel.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/models/shipment-transporter-status.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/services/shipment.service.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/shipment.module.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/environments/environment.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/main.ts","C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/node_modules/moment/locale ^\\.\\/.*$"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { NgModule }       from '@angular/core';\r\nimport { FormControl, FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { CommonModule }   from '@angular/common';\r\nimport { HttpModule } from \"@angular/http\";\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {AgmCoreModule} from '@agm/core';\r\n\r\nimport { MdModule } from \"app/shared/md/md.module\";\r\nimport { AddressOverviewComponent } from \"app/address/components/address-overview.component\";\r\nimport { AddressSaveComponent } from \"app/address/components/address-save.component\";\r\nimport { AddressService } from \"app/address/services/address.service\";\r\nimport { AddressAvailabilitySliderComponent } from \"app/shared/common/components/address-availability-slider.component\";\r\nimport { CommonAppModule } from \"app/shared/common/common-app.module\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpModule,\r\n        RouterModule,\r\n        MdModule,\r\n        AgmCoreModule.forRoot({    libraries: [\"places\"],\r\n            apiKey: 'AIzaSyChUim14iXhf6riJ73R3qxNxnMls2SGZDA'\r\n        }),\r\n        CommonAppModule\r\n    ],\r\n    exports: [\r\n    ],\r\n    declarations: [\r\n        AddressSaveComponent,\r\n        AddressOverviewComponent\r\n    ],\r\n    providers: [\r\n        AddressService\r\n    ]\r\n})\r\nexport class AddressModule {}\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/address.module.ts","module.exports = \"<div #maincontent class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n                <div class=\\\"form-group label-floating is-empty\\\">\\r\\n                    <label class=\\\"control-label\\\"></label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"searchTerm\\\" placeholder=\\\"Search address\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-info\\\" [routerLink]=\\\"['/address-add']\\\">(+) Create a new address</button>\\r\\n\\r\\n\\r\\n        <div *ngIf=\\\"showLoader\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\"></div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n                <br>\\r\\n                <mat-spinner></mat-spinner>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-5\\\"></div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!showLoader\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <!-- <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"rose\\\">\\r\\n                        <i class=\\\"material-icons\\\">assignment</i>\\r\\n                    </div> -->\\r\\n                    <div *ngIf=\\\"componentModel && componentModel.length > 0\\\" class=\\\"card-content table-full-width\\\">\\r\\n                        <!--<h4 class=\\\"card-title\\\">Regular Table with Colors</h4>-->\\r\\n                        <div class=\\\"table-responsive\\\" id=\\\"addresseGrid\\\" *ngIf=\\\"componentModel && componentModel.length > 0\\\">\\r\\n                            <table class=\\\"table table-hover\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Name</th>\\r\\n                                        <th>Street, Number, Zipcode, City</th>\\r\\n                                        <th>Country code</th>\\r\\n                                        <th>Contact person</th>\\r\\n                                        <th>Phone</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <ng-container *ngFor=\\\"let addressRow of componentModel; let rowindex = index\\\">\\r\\n                                        <tr (click)=\\\"onClickShowActions(addressRow, rowindex)\\\" [ngClass]=\\\"(addressRow.viewActions ||addressRow.viewEdit   ? 'danger' : (rowindex%2==0?'info':''))\\\">\\r\\n                                            <td>{{addressRow.address.name}}</td>\\r\\n                                            <td>{{addressRow.address.location.street + ', ' + addressRow.address.location.streetNumber + ', ' + addressRow.address.location.zipCode + ', ' + addressRow.address.location.city}}</td>\\r\\n                                            <td>{{addressRow.address.location.countryCode}}</td>\\r\\n                                            <td>{{addressRow.address.contactPerson}}</td>\\r\\n                                            <td>{{addressRow.address.phone}}</td>\\r\\n                                        </tr>\\r\\n\\r\\n                                        <tr id=\\\"actionsRow\\\" *ngIf=\\\"addressRow.viewActions\\\">\\r\\n                                            <td id=\\\"actionsRowContent\\\" colspan=\\\"5\\\" align=\\\"center\\\">\\r\\n                                                <button class=\\\"btn btn-warning\\\" (click)=\\\"onClickEditAddress(addressRow)\\\">\\r\\n                                                            <span class=\\\"btn-label\\\">\\r\\n                                                                <i class=\\\"material-icons\\\">border_color</i>\\r\\n                                                            </span>\\r\\n                                                            Edit address\\r\\n                                                        </button>\\r\\n                                                <button class=\\\"btn btn-danger\\\" (click)=\\\"onClickDeleteAddress(addressRow.address.id)\\\">\\r\\n                                                            <span class=\\\"btn-label\\\">\\r\\n                                                                <i class=\\\"material-icons\\\">delete_forever</i>\\r\\n                                                            </span>\\r\\n                                                            Delete address\\r\\n                                                        </button>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n\\r\\n                                        <tr id=\\\"editAddressRowProgress\\\" *ngIf=\\\"addressRow.showViewLoader\\\">\\r\\n                                            <td colspan=\\\"7\\\">\\r\\n                                                <div>\\r\\n                                                    <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n\\r\\n                                        <tr id=\\\"editAddressRow\\\" *ngIf=\\\"addressRow.viewEdit\\\">\\r\\n                                            <td colspan=\\\"4\\\">\\r\\n                                                <router-outlet></router-outlet>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </ng-container>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n\\r\\n                        </div>\\r\\n                        <ul *ngIf=\\\"pagesCollection && pagesCollection.length > 0\\\" class=\\\"pagination pagination-info\\\">\\r\\n                            <li>\\r\\n                                <a href=\\\"javascript:void(0);\\\" (click)=\\\"paginate((currentPage -1 < 0 ? 0 : currentPage -1))\\\"> prev</a>\\r\\n                            </li>\\r\\n                            <li *ngFor=\\\"let page of pagesCollection;  let idx = index\\\" [ngClass]=\\\"currentPage == page ? 'active' : ''\\\">\\r\\n                                <a href=\\\"javascript:void(0);\\\" (click)=\\\"paginate(page)\\\"> {{page + 1}}</a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                                <a href=\\\"javascript:void(0);\\\" (click)=\\\"paginate((currentPage +1 > pagesCollection.length -1 ? pagesCollection.length -1 : currentPage +1))\\\"> next</a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                    <h4 *ngIf=\\\"componentModel && componentModel.length <= 0\\\">\\r\\n                        &nbsp;&nbsp;&nbsp;&nbsp;There are no addresses. You can create a new one by clicking on 'Create new address' button\\r\\n                    </h4>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/components/address-overview.component.html\n// module id = ../../../../../src/app/address/components/address-overview.component.html\n// module chunks = main","import { Component, OnInit, AfterViewInit, OnDestroy } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { TableData } from \"app/shared/md/md-table/md-table.component\";\r\nimport { AddressRowViewModel } from \"app/address/models/address-row-viewmodel\";\r\nimport { AddressModel } from \"app/address/models/address-model\";\r\nimport { AddressService } from \"app/address/services/address.service\";\r\nimport { ApplicationUser } from \"app/authentication/viewmodels/application-user\";\r\nimport { AuthenticationService } from \"app/authentication/services/authentication.service\";\r\nimport { TranslateService } from \"app/shared/common/services/localization/translate.service\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { PagerService } from \"app/shared/common/services/pager.service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { HelperService } from \"app/shared/common/services/helperService\";\r\nimport { GlobalErrorHandler } from \"app/shared/common/services/globalErrorHandler\";\r\nimport { NotificationService } from \"app/shared/common/services/notification.service\";\r\n\r\nconst moment = require(\"moment/moment\");\r\n\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n  selector: \"app-address-overview\",\r\n  templateUrl: \"./address-overview.component.html\"\r\n})\r\nexport class AddressOverviewComponent\r\n  implements OnInit, OnDestroy, AfterViewInit {\r\n  // constructor(private navbarTitleService: NavbarTitleService, private notificationService: NotificationService) { }\r\n  componentModel: AddressRowViewModel[];\r\n  currentUser: ApplicationUser;\r\n  // search term\r\n  searchTerm = new FormControl();\r\n  currentAddressId = -1;\r\n\r\n  currentPage = 0;\r\n  pagesCollection: Array<number>;\r\n  pageSize = 20;\r\n\r\n  showLoader = false;\r\n\r\n  private subscriptionReceiveUpdatedAddress: Subscription;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private addressService: AddressService,\r\n    private helperService: HelperService,\r\n    private notificationService: NotificationService,\r\n    private errorHandler: GlobalErrorHandler,\r\n    private authenticationService: AuthenticationService,\r\n    private translateService: TranslateService\r\n  ) { }\r\n\r\n  /**\r\n   * Initialize data\r\n   */\r\n  public ngOnInit() {\r\n    this.showLoader = true;\r\n    this.currentUser = this.authenticationService.getCurrentUser();\r\n\r\n    this.getNumberOfAddresses(\"\", false);\r\n\r\n    this.getAddresses();\r\n\r\n    this.register_updateSavedModel_handler();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    //  Activate the tooltips\r\n    $('[rel=\"tooltip\"]').tooltip();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscriptionReceiveUpdatedAddress) {\r\n      this.subscriptionReceiveUpdatedAddress.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Move to next/previous page\r\n   * @param page\r\n   */\r\n  paginate(page: number) {\r\n    this.showLoader = true;\r\n    this.currentPage = page;\r\n    this.getAddresses();\r\n\r\n    this.helperService.scrollOnTop();\r\n  }\r\n\r\n  /**\r\n   * Get addresses\r\n   */\r\n  private getAddresses() {\r\n    let searchquery = \"\";\r\n    this.route.queryParams.subscribe(params => {\r\n      searchquery = params[\"searchquery\"]\r\n        ? params[\"searchquery\"].toString()\r\n        : \"\";\r\n    });\r\n    this.searchTerm = new FormControl(searchquery);\r\n    this.initSearchAddresses();\r\n\r\n    if (this.currentUser && this.currentUser.customerId) {\r\n      this.addressService\r\n        .getAll(\r\n        this.currentUser.customerId,\r\n        searchquery,\r\n        this.pageSize * this.currentPage + 1,\r\n        this.pageSize,\r\n        this.translateService.currentLanguage\r\n        )\r\n        .subscribe(\r\n        result => {\r\n          this.componentModel = [];\r\n          if (result && result.length > 0) {\r\n            if (this.route.firstChild) {\r\n              this.currentAddressId = +this.route.firstChild.snapshot.params[\r\n                \"id\"\r\n              ];\r\n            }\r\n            for (let i = 0; i < result.length; i++) {\r\n              const addressRow = new AddressRowViewModel();\r\n              addressRow.address = result[i];\r\n              // if url contains edit then open it by default\r\n              addressRow.viewActions = result[i].id === this.currentAddressId;\r\n              this.componentModel.push(addressRow);\r\n            }\r\n          }\r\n          this.showLoader = false;\r\n        },\r\n        error => {\r\n          this.showLoader = false;\r\n          this.errorHandler.handleError(error);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get addresses count for current filters\r\n   */\r\n  private getNumberOfAddresses(\r\n    searchQueryParam: string,\r\n    ignoreQueryString: boolean\r\n  ) {\r\n    this.pagesCollection = null;\r\n    if (searchQueryParam.length <= 0 && !ignoreQueryString) {\r\n      this.route.queryParams.subscribe(params => {\r\n        searchQueryParam = params[\"searchquery\"]\r\n          ? params[\"searchquery\"].toString()\r\n          : \"\";\r\n      });\r\n    }\r\n    if (this.currentUser && this.currentUser.customerId) {\r\n      this.addressService\r\n        .getCount(\r\n        this.currentUser.customerId,\r\n        searchQueryParam,\r\n        this.translateService.currentLanguage\r\n        )\r\n        .subscribe(\r\n        result => {\r\n          this.pagesCollection = [];\r\n          let numberOfPages = Math.ceil(result / this.pageSize);\r\n          numberOfPages = numberOfPages < 0 ? 1 : numberOfPages;\r\n          const self = this;\r\n          setTimeout(function () {\r\n            for (let i = 0; i < numberOfPages; i++) {\r\n              self.pagesCollection.push(i);\r\n            }\r\n          }, 100);\r\n        },\r\n        error => {\r\n          this.errorHandler.handleError(error);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n  private searchAddresses(searchTerm: string) {\r\n    if (this.currentUser && this.currentUser.customerId) {\r\n      this.currentPage = 0;\r\n      this.addressService\r\n        .getAll(\r\n        this.currentUser.customerId,\r\n        searchTerm,\r\n        this.pageSize * this.currentPage + 1,\r\n        this.pageSize,\r\n        this.translateService.currentLanguage\r\n        )\r\n        .subscribe(\r\n        result => {\r\n          this.componentModel = [];\r\n          if (result && result.length > 0) {\r\n            for (let i = 0; i < result.length; i++) {\r\n              const addressRow = new AddressRowViewModel();\r\n              addressRow.address = result[i];\r\n              // if url contains edit then open it by default\r\n              this.componentModel.push(addressRow);\r\n            }\r\n          }\r\n        },\r\n        error => {\r\n          this.errorHandler.handleError(error);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n  private initSearchAddresses() {\r\n    this.searchTerm.valueChanges.debounceTime(600).subscribe(term => {\r\n      this.router.navigate([\"/address-overview\"], {\r\n        relativeTo: this.route,\r\n        queryParams: {\r\n          searchquery: term ? term : \"\"\r\n        }\r\n      });\r\n      const searchTerm = term && term.length > 0 ? term : \"\";\r\n\r\n      this.getNumberOfAddresses(term, true);\r\n      this.searchAddresses(searchTerm);\r\n    });\r\n  }\r\n\r\n  private register_updateSavedModel_handler() {\r\n    this.subscriptionReceiveUpdatedAddress = this.addressService.addressModelReceivedHandler$.subscribe(\r\n      result => {\r\n        if (result != null) {\r\n          debugger;\r\n          if (this.componentModel) {\r\n            const rowToUpdate = this.componentModel.filter(\r\n              item => item.address.id === result.address.id)[0];\r\n            if (result.operation == 'loaded') {\r\n              rowToUpdate.showViewLoader = false;\r\n            } else if (result.operation == 'saved') {\r\n              rowToUpdate.address = result.address;\r\n              this.helperService.scrollOnTop();\r\n              this.addressService.resetSendAddressModelHandler();\r\n            }\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.errorHandler.handleError(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /** Show row available actions on click */\r\n  onClickShowActions(addressRow: AddressRowViewModel, index: number) {\r\n    for (let i = 0; i < this.componentModel.length; i++) {\r\n      if (i !== index) this.componentModel[i].viewActions = false;\r\n      this.componentModel[i].viewEdit = false;\r\n    }\r\n    addressRow.viewActions = !addressRow.viewActions;\r\n    if (addressRow.viewActions) {\r\n      addressRow.viewEdit = false;\r\n      this.router.navigate([\"/address-overview\"]);\r\n    }\r\n  }\r\n\r\n  /** Show edit address */\r\n  onClickEditAddress(addressRow: AddressRowViewModel) {\r\n    addressRow.showViewLoader = true;\r\n\r\n    addressRow.viewActions = false;\r\n\r\n    this.router.navigate([\"./address-edit/\" + addressRow.address.id], {\r\n      relativeTo: this.route\r\n    });\r\n\r\n    addressRow.viewEdit = !addressRow.viewEdit;\r\n  }\r\n\r\n  /** Show edit address */\r\n  onClickDeleteAddress(addressId: number) {\r\n    const self = this;\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\"\r\n    })\r\n      // delete confirmed\r\n      .then(\r\n      function () {\r\n        self.addressService\r\n          .delete(\r\n          addressId,\r\n          self.currentUser.customerId,\r\n          self.translateService.currentLanguage\r\n          )\r\n          .subscribe(\r\n          result => {\r\n            if (result) {\r\n              swal(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n              // update model\r\n              self.componentModel = self.componentModel.filter(\r\n                item => item.address.id !== addressId\r\n              );\r\n            } else {\r\n              swal(\r\n                \"Not Deleted!\",\r\n                \"An error occured. Your file has not been deleted.  Please contact an administrator.\",\r\n                \"error\"\r\n              );\r\n            }\r\n          },\r\n          error => {\r\n            swal(\r\n              \"Not Deleted!\",\r\n              \"An error occured. Your file has not been deleted.  Please contact an administrator.\",\r\n              \"error\"\r\n            );\r\n            self.errorHandler.handleError(error);\r\n          }\r\n          );\r\n      },\r\n      // delete canceled\r\n      function (dismiss) {\r\n        // dismiss can be 'cancel', 'overlay',\r\n        // 'close', and 'timer'\r\n        if (dismiss === \"cancel\") {\r\n          swal(\"Cancelled\", \"Your address is safe :)\", \"error\");\r\n        }\r\n      }\r\n      );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/components/address-overview.component.ts","module.exports = \"<!-- style=\\\"margin-top:0px!important\\\" -->\\r\\n<div class=\\\"main-content\\\" *ngIf=\\\"componentModel\\\" [style.margin-top]=\\\"componentState > 0 ? '0px':'inherit;'\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <form #formAddress=\\\"ngForm\\\" novalidate class=\\\"form-horizontal\\\" novalidate (ngSubmit)=\\\"save(formAddress.value, formAddress.valid)\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-content\\\">\\r\\n                            <form id=\\\"searchForm\\\" #searchForm=\\\"ngForm\\\" [hidden]=\\\"componentState !== 0\\\">\\r\\n                                <div [ngClass]=\\\"'form-group label-floating ' + ((!searchControl || !searchControl.valid ) && formAddress.submitted ? ' has-error' : '')\\\">\\r\\n                                    <label for=\\\"\\\" class=\\\"control-label\\\">\\r\\n                                            Search by address\\r\\n                                            <span class=\\\"star\\\">*</span>\\r\\n                                        </label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"searchControl\\\" name=\\\"searchControl\\\" type=\\\"text\\\" #searchElement [formControl]=\\\"searchControl\\\" placeholder=\\\"\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"off\\\">\\r\\n                                </div>\\r\\n                            </form>\\r\\n\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + ((componentModel.name  && componentModel.name.length > 0) ? '' : 'is-empty') + (!componentModel.name  && formAddress.submitted ? ' has-error' : '') \\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label\\\">\\r\\n                                        Name\\r\\n                                        <span class=\\\"star\\\">*</span>\\r\\n                                    </label>\\r\\n                                <input type=\\\"text\\\" required class=\\\"form-control\\\" id=\\\"addressName\\\" name=\\\"addressName\\\" [(ngModel)]=\\\"componentModel.name\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-8\\\">\\r\\n                                            <div [ngClass]=\\\"'form-group label-floating is-focused'\\\">\\r\\n                                                <label for=\\\"\\\" class=\\\"\\\">Street <span class=\\\"star\\\">*</span></label>\\r\\n                                                <input type=\\\"text\\\" id=\\\"street\\\" name=\\\"street\\\" [ngClass]=\\\"'form-control nofocusline'\\\" disabled=\\\"\\\" [(ngModel)]=\\\"componentModel.location.street\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <div [ngClass]=\\\"'form-group label-floating is-focused'\\\">\\r\\n                                                <label for=\\\"\\\" class=\\\"\\\">Number<span class=\\\"star\\\">*</span></label>\\r\\n                                                <input type=\\\"text\\\" id=\\\"streetNumber\\\" name=\\\"streetNumber\\\" [ngClass]=\\\"'form-control nofocusline'\\\" disabled=\\\"\\\" [(ngModel)]=\\\"componentModel.location.streetNumber\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div [ngClass]=\\\"'form-group label-floating is-focused'  + ((!componentModel.location || !componentModel.location.zipCode ) && formAddress.submitted ? ' has-error' : '')\\\">\\r\\n                                                <label for=\\\"\\\" class=\\\"\\\">\\r\\n                                                        Zipcode\\r\\n                                                        <span class=\\\"star\\\">*</span>\\r\\n                                                    </label>\\r\\n                                                <input type=\\\"text\\\" id=\\\"zipcode\\\" name=\\\"zipCode\\\" [ngClass]=\\\"'form-control '  + ((!componentModel.location || !componentModel.location.zipCode ) && formAddress.submitted ? ' ' : 'nofocusline') \\\" disabled=\\\"\\\" [(ngModel)]=\\\"componentModel.location.zipCode\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <div [ngClass]=\\\"'form-group label-floating is-focused'  + ((!componentModel.location || !componentModel.location.city ) && formAddress.submitted ? ' has-error' : '')\\\">\\r\\n                                                <label for=\\\"\\\" class=\\\"\\\">City         <span class=\\\"star\\\">*</span></label>\\r\\n                                                <input type=\\\"text\\\" id=\\\"city\\\" name=\\\"city\\\" [ngClass]=\\\"'form-control '  + ((!componentModel.location || !componentModel.location.city ) && formAddress.submitted ? ' ' : 'nofocusline')\\\" disabled=\\\"\\\" [(ngModel)]=\\\"componentModel.location.city\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-4\\\">\\r\\n                                            <div [ngClass]=\\\"'form-group label-floating is-focused'  + ((!componentModel.location || !componentModel.location.country ) && formAddress.submitted ? ' has-error' : '')\\\">\\r\\n                                                <label for=\\\"\\\" class=\\\"\\\">Country         <span class=\\\"star\\\">*</span></label>\\r\\n                                                <input type=\\\"text\\\" id=\\\"country\\\" name=\\\"country\\\" [ngClass]=\\\"'form-control '  + ((!componentModel.location || !componentModel.location.country ) && formAddress.submitted ? ' ' : 'nofocusline')\\\" disabled=\\\"\\\" [(ngModel)]=\\\"componentModel.location.country\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + (componentModel.contactPerson  && componentModel.contactPerson.length > 0 ? '' : 'is-empty ' + ((!componentModel.contactPerson ) && formAddress.submitted ? ' has-error' : '')) \\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label \\\">\\r\\n                                        Contactperson\\r\\n                                        <span class=\\\"star\\\">*</span>\\r\\n                                    </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"componentModel.contactPerson\\\" id=\\\"contactperson\\\" name=\\\"contactPerson\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + (componentModel.email  && componentModel.email.length > 0 ? '' : 'is-empty ' + ((componentModel.email && !emailValidator(componentModel.email)) && formAddress.submitted ? ' has-error' : '')) \\\">\\r\\n                                <label class=\\\"control-label\\\">\\r\\n                                        Email address\\r\\n                                    </label>\\r\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"componentModel.email\\\" id=\\\"email\\\" name=\\\"addressEmail\\\">\\r\\n\\r\\n                                <small *ngIf=\\\"(componentModel.email && !emailValidator(componentModel.email)) && formAddress.submitted\\\" class=\\\"text-danger\\\">\\r\\n                                        Email is required and format should be <i>john@doe.com</i>.\\r\\n                                    </small>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group label-floating\\\" [ngClass]=\\\"'form-group label-floating ' + (componentModel.phone  && componentModel.phone.length > 0 ? '' : 'is-empty' + (((!componentModel.phone) && formAddress.submitted ) ? ' has-error' : '')) \\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label\\\">\\r\\n                                        Phone\\r\\n                                        <span class=\\\"star\\\">*</span>\\r\\n                                    </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"componentModel.phone\\\" id=\\\"phone\\\" name=\\\"phone\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group label-floating\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"control-label\\\">\\r\\n                                        Remarks\\r\\n                                    </label>\\r\\n                                <textarea class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"componentModel.remark\\\" id=\\\"remark\\\" name=\\\"openremarkNow\\\"></textarea>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- Opening hours -->\\r\\n                            <h3>Opening hours</h3>\\r\\n                            <div class=\\\"form-group label-floating\\\">\\r\\n                                <div class=\\\"togglebutton\\\">\\r\\n                                    <label>\\r\\n                                            <input type=\\\"checkbox\\\" (click)=\\\"onCommonAvailabilityClick()\\\" [(ngModel)]=\\\"componentModel.commonAvailability\\\" name=\\\"commonAvailability\\\"> Set the same interval for all week days\\r\\n                                        </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group label-floating\\\" *ngFor=\\\"let availability of componentModel.availabilities\\\">\\r\\n                                <span>\\r\\n                                        {{getDay(availability.day)}}\\r\\n                                    </span>\\r\\n                                <address-availability-slider [sliderid]=\\\"'slider_address'\\\" [availability]=\\\"availability\\\"></address-availability-slider>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <!--  ***************** Right side *************** -->\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-content\\\">\\r\\n                            <!-- Map -->\\r\\n                            <h4 class=\\\"card-title\\\">Map</h4>\\r\\n                            <div id=\\\"regularMap\\\" class=\\\"map\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <!-- Facilities -->\\r\\n                            <h3>Facilities</h3>\\r\\n                            <div class=\\\"input-group\\\" *ngFor=\\\"let facility of componentModel.facilities\\\">\\r\\n                                <span class=\\\"input-group-addon\\\">\\r\\n                                        <i class=\\\"material-icons\\\">{{facility.iconName}}</i>\\r\\n                                    </span>\\r\\n                                <div class=\\\"form-group label-floating\\\">\\r\\n                                    <div class=\\\"togglebutton\\\">\\r\\n                                        <label>\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"facility.active\\\" [checked]=\\\"facility.active\\\" name=\\\"facilityactive_{{facility.facilityId}}\\\"> {{facility.description}}\\r\\n                                            </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- Truck -->\\r\\n                            <h3>Truck</h3>\\r\\n                            <div class=\\\"input-group\\\" *ngFor=\\\"let truck of componentModel.trucks\\\">\\r\\n                                <span class=\\\"input-group-addon\\\">\\r\\n                                        <i class=\\\"material-icons\\\">{{truck.iconName}}</i>\\r\\n                                    </span>\\r\\n                                <div class=\\\"form-group label-floating\\\">\\r\\n                                    <div class=\\\"togglebutton\\\">\\r\\n                                        <label>\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"truck.active\\\" [checked]=\\\"truck.active==true\\\" name=\\\"truckactive_{{truck.truckId}}\\\"> {{truck.description}}\\r\\n                                            </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- Transport requirments -->\\r\\n                            <h3>Transport requirements</h3>\\r\\n                            <div class=\\\"input-group\\\" *ngFor=\\\"let requirement of componentModel.requirements\\\">\\r\\n                                <span class=\\\"input-group-addon\\\">\\r\\n                                        <i class=\\\"material-icons\\\">{{requirement.iconName}}</i>\\r\\n                                    </span>\\r\\n                                <div class=\\\"form-group label-floating\\\">\\r\\n                                    <div class=\\\"togglebutton\\\">\\r\\n                                        <label>\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"requirement.active\\\" [checked]=\\\"requirement.active\\\" name=\\\"requirementactive_{{requirement.requirementId}}\\\"> {{requirement.description}}\\r\\n                                            </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"card-footer text-center\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-rose btn-fill\\\">Save</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/components/address-save.component.html\n// module id = ../../../../../src/app/address/components/address-save.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, ElementRef, NgZone, AfterViewInit } from '@angular/core';\r\nimport { NgForm, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { ActivatedRoute, Params, RouterModule, Router, Routes } from '@angular/router';\r\nimport { AgmCoreModule, MapsAPILoader } from '@agm/core';\r\nimport { AddressModel } from 'app/address/models/address-model';\r\nimport { HelperService } from 'app/shared/common/services/helperService';\r\nimport { AddressService } from 'app/address/services/address.service';\r\nimport { TranslateService } from 'app/shared/common/services/localization/translate.service';\r\nimport { FacilityParameterModel } from 'app/shared/common/models/parameter/facility-parameter-model';\r\nimport { RequirementParameterModel } from 'app/shared/common/models/parameter/requirement-parameter-model';\r\nimport { TruckParameterModel } from 'app/shared/common/models/parameter/truck-parameter-model';\r\nimport { GlobalErrorHandler } from 'app/shared/common/services/globalErrorHandler';\r\nimport { AddressLocationModel } from 'app/address/models/address-location-model';\r\nimport { ParametersDataService } from 'app/shared/common/services/parameters-data.service';\r\nimport { AuthenticationService } from 'app/authentication/services/authentication.service';\r\nimport { ApplicationUser } from 'app/authentication/viewmodels/application-user';\r\nimport { ComponentStateType } from 'app/shared/common/helper/component-state-type';\r\nimport { NotificationService } from 'app/shared/common/services/notification.service';\r\nimport { AvailabilityEntityModel } from 'app/shared/common/models/entity/availability-entity-model';\r\nimport { FacilityEntityModel } from 'app/shared/common/models/entity/facility-entity-model';\r\nimport { RequirementEntityModel } from 'app/shared/common/models/entity/requirement-entity-model';\r\n\r\ndeclare var require: any\r\ndeclare var google: any;\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'app-address-save-component',\r\n  templateUrl: './address-save.component.html'\r\n})\r\n\r\nexport class AddressSaveComponent implements OnInit, AfterViewInit {\r\n  /** main component model */\r\n  componentModel: AddressModel;\r\n  /** component state : display, add or edit */\r\n  componentState: ComponentStateType;\r\n\r\n  public searchControl: FormControl;\r\n\r\n  @ViewChild('searchElement')\r\n  public searchElementRef: ElementRef;\r\n\r\n  currentUser: ApplicationUser;\r\n  /**\r\n   * used to set map zoom mode\r\n   *  1: World\r\n      5: Landmass/continent\r\n      10: City\r\n      15: Streets\r\n      20: Buildings\r\n   *\r\n  */\r\n  private zoomLevel = 15;\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private mapsAPILoader: MapsAPILoader,\r\n    private ngZone: NgZone,\r\n    private authenticationService: AuthenticationService,\r\n    private helperService: HelperService,\r\n    private addressService: AddressService,\r\n    private parametersDataService: ParametersDataService,\r\n    private translateService: TranslateService,\r\n    private errorHandler: GlobalErrorHandler,\r\n    private notificationService: NotificationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.authenticationService.getCurrentUser();\r\n    // create search FormControl\r\n    this.searchControl = new FormControl();\r\n    // get component state\r\n    this.componentState = this.helperService.getComponentStateByUrl(this.router.url) as ComponentStateType;\r\n    // load required data\r\n    this.loadComponentModel(this.componentState).subscribe(modelLoaded => {\r\n      if (modelLoaded) {\r\n        this.loadParamsData().subscribe(paramsDataLoaded => {\r\n          if (paramsDataLoaded) {\r\n            this.register_googleMapsPlaceSearchHandler();\r\n            if (this.componentState > 0) {\r\n              this.addressService.sendAddressModel({\r\n                operation: 'loaded',\r\n                address: this.componentModel\r\n              });\r\n            }\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    const self = this;\r\n    setTimeout(function () {\r\n      self.setCursorToAddressSearch();\r\n    }, 500);\r\n  }\r\n\r\n  save(model: AddressModel, isValid: boolean) {\r\n    console.log(model, isValid);\r\n    if (isValid && this.isModelValid()) {\r\n      this.addressService.save(this.componentModel, this.translateService.currentLanguage).subscribe(result => {\r\n        if (this.componentState === ComponentStateType.add) {\r\n          this.router.navigate(['/address-overview/address-edit/' + result]);\r\n          this.notificationService.show('Address created.', 'success', 'center', 'top');\r\n        } else {\r\n          //// send data to addreess coponent to be updated\r\n          this.addressService.sendAddressModel({\r\n            operation: 'saved',\r\n            address: this.componentModel\r\n          });\r\n          this.notificationService.show('Address saved. ', 'success', 'center', 'top');\r\n        }\r\n      }, error => {\r\n        this.errorHandler.handleError(error);\r\n      });\r\n    } else {\r\n      this.helperService.scrollOnTop();\r\n      this.setCursorToAddressSearch();\r\n    }\r\n  }\r\n\r\n  /**\r\n* When common availability state change\r\n*/\r\n  onCommonAvailabilityClick() {\r\n    this.componentModel.commonAvailability = !this.componentModel.commonAvailability;\r\n    this.generateAvailabilities();\r\n  }\r\n\r\n  /**\r\n   * Load component model, or create a new one if component state is = Add\r\n   * @param componentState\r\n   */\r\n  private loadComponentModel(componentState: ComponentStateType): Observable<boolean> {\r\n    return Observable.create(observer => {\r\n      if (componentState === ComponentStateType.add) {\r\n\r\n        this.createEmptyModel();\r\n        // set current position\r\n        this.createMap(50.89, 4.34);\r\n        observer.next(true);\r\n      } else {\r\n        let addressId = 0;\r\n        this.route.params.forEach((params: Params) => {\r\n          addressId = params['id'];\r\n          this.addressService.get(addressId, this.currentUser.customerId, this.translateService.currentLanguage).subscribe(result => {\r\n            this.componentModel = result as AddressModel;\r\n            console.log(this.componentModel);\r\n            const self = this;\r\n            // settimeout used to let angular template engine to render map element (everything is displayed only when component model )\r\n            setTimeout(function () {\r\n              self.createMap(self.componentModel.location.latitude, self.componentModel.location.longitude);\r\n            }, 500);\r\n\r\n            observer.next(true);\r\n          }, error => {\r\n            this.errorHandler.handleError(error);\r\n            observer.next(false);\r\n          })\r\n        });\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Load required data used to render form\r\n   */\r\n  private loadParamsData(): Observable<boolean> {\r\n    return Observable.create(observer => {\r\n      // return new Promise((resolve, reject) => {\r\n      this.parametersDataService.getAddressRequirementsParameters(this.translateService.currentLanguage)\r\n        .subscribe(data => {\r\n          this.componentModel.facilities = this.parametersDataService.generateFacilityEntitiesList(this.componentModel.id, data['facilities'] as any, this.componentModel.facilities);\r\n          this.componentModel.requirements = this.parametersDataService.generateRequirementsEntitiesList(this.componentModel.id, data['requirements'] as any, this.componentModel.requirements);\r\n          this.componentModel.trucks = this.parametersDataService.generateTruksEntitiesList(this.componentModel.id, data['trucks'] as any, this.componentModel.trucks);\r\n          observer.next(true);\r\n        }, error => {\r\n          this.errorHandler.handleError(error);\r\n          observer.next(false);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Register google maps place handler.\r\n   * When palce is changed, handler to update model is registered\r\n   */\r\n  private register_googleMapsPlaceSearchHandler() {\r\n    // load Places Autocomplete\r\n    this.mapsAPILoader.load().then(() => {\r\n      // create map\r\n      const addressesAutocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\r\n        // types: [\"address\"]\r\n      });\r\n      // init place change listener\r\n      addressesAutocomplete.addListener('place_changed', () => {\r\n        this.ngZone.run(() => {\r\n          // get the place result\r\n          const place = addressesAutocomplete.getPlace();\r\n          // verify result\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          }\r\n          // set latitude, longitude and zoom\r\n          this.updateLocationModel(place);\r\n          this.updateOpeningHours(place);\r\n\r\n          this.createMap(this.componentModel.location.latitude, this.componentModel.location.longitude);\r\n\r\n          if (this.componentState === ComponentStateType.add)\r\n            this.searchElementRef.nativeElement.focus();\r\n        });\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   *Get each component of the address from the place details\r\n    and fill the corresponding field on the form.\r\n   */\r\n  private updateLocationModel(place: any) {\r\n    this.componentModel.location = new AddressLocationModel();\r\n    this.componentModel.phone = '';\r\n    this.componentModel.name = '';\r\n\r\n    this.componentModel.location.latitude = place.geometry.location.lat();\r\n    this.componentModel.location.longitude = place.geometry.location.lng();\r\n\r\n    for (let i = 0; i < place.address_components.length; i++) {\r\n      const addressMember = place.address_components[i].types[0];\r\n      switch (addressMember) {\r\n        case 'country':\r\n          {\r\n            this.componentModel.location.countryCode = place.address_components[i]['short_name'];\r\n            this.componentModel.location.country = place.address_components[i]['long_name'];\r\n          }\r\n          break;\r\n        case 'administrative_area_level_1':\r\n          {\r\n            this.componentModel.location.state = place.address_components[i]['long_name'];\r\n            this.componentModel.location.stateCode = place.address_components[i]['short_name'];\r\n          }\r\n          break;\r\n        case 'locality':\r\n        case \"postal_town\":\r\n          {\r\n            this.componentModel.location.city = place.address_components[i]['long_name'];\r\n            this.componentModel.location.cityCode = place.address_components[i]['short_name'];\r\n          }\r\n          break;\r\n\r\n        case 'route':\r\n          {\r\n            this.componentModel.location.street = place.address_components[i]['short_name'];\r\n\r\n          }\r\n          break;\r\n        case 'street_number':\r\n          {\r\n            this.componentModel.location.streetNumber = place.address_components[i]['short_name'];\r\n\r\n          }\r\n          break;\r\n        case 'postal_code':\r\n          {\r\n            this.componentModel.location.zipCode = place.address_components[i]['short_name'];\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    this.componentModel.name = '';\r\n    if (place.name) {\r\n      this.componentModel.name += place.name;\r\n    }\r\n    if (place.formatted_address) {\r\n      if (this.componentModel.name.length > 0) {\r\n        this.componentModel.name += ', ';\r\n      }\r\n      this.componentModel.name += place.formatted_address;\r\n    }\r\n\r\n    if (place.formatted_phone_number) {\r\n      this.componentModel.location.phone = place.formatted_phone_number;\r\n      this.componentModel.phone = place.formatted_phone_number;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n  -\tOpeninghours\r\n      o\tIf available, we copy the google opening hours\r\n      o\tIf not, by default\r\n          -\tMonday – Friday 8h – 12h and 13h – 16h\r\n          -\tSaturday closed\r\n          -\tSunday closed\r\n*/\r\n  private updateOpeningHours(place: any) {\r\n    this.componentModel.availabilities = [];\r\n    // if is permanently closed then, send common availability = true and closed on day 0  = true\r\n    if (place.permanently_closed) {\r\n      this.componentModel.commonAvailability = true;\r\n      const availability = new AvailabilityEntityModel();\r\n      availability.id = -1;\r\n      availability.day = 0;\r\n      availability.isClosed = true;\r\n      this.componentModel.availabilities.push(availability);\r\n    } else if (place.opening_hours) {\r\n      const availabilitiesList = new Array<AvailabilityEntityModel>();\r\n      /**\r\n       * periods[] is an array of opening periods covering seven days, starting from Sunday, in chronological order. Each period contains:\r\n          -  open contains a pair of day and time objects describing when the place opens:\r\n               - day a number from 0–6, corresponding to the days of the week, starting on Sunday. For example, 2 means Tuesday.\r\n               - time may contain a time of day in 24-hour hhmm format. Values are in the range 0000–2359. The time will be reported in the place’s time zone.\r\n          - close may contain a pair of day and time objects describing when the place closes. Note: If a place is always open, the close section will be missing from the response.\r\n           Clients can rely on always-open being represented as an open period containing day with value 0 and time with value 0000, and no close.\r\n               */\r\n      // if is always open\r\n      if (place.opening_hours.periods && place.opening_hours.periods.length === 1\r\n        && place.opening_hours.periods[0].open && place.opening_hours.periods[0].open.day === 0 && place.opening_hours.periods[0].open.hours === 0\r\n        && place.opening_hours.periods[0].open.minutes === 0 && !place.opening_hours.periods[0].close) {\r\n        this.componentModel.commonAvailability = true;\r\n        const availability = new AvailabilityEntityModel();\r\n\r\n\r\n        availability.id = -1;\r\n        availability.day = 0;\r\n        availability.amStart = '00:00';\r\n        availability.amStop = '24:00';\r\n        availability.pmStart = '24:00';\r\n        availability.pmStop = '24:00';\r\n        this.componentModel.availabilities.push(availability);\r\n      } else {\r\n        for (let day = 1; day <= 7; day++) {\r\n          const googleDayIndex = day === 7 ? 0 : day;\r\n\r\n          const availability = new AvailabilityEntityModel();\r\n          availability.id = -1;\r\n          availability.day = day;\r\n\r\n          const periods = place.opening_hours.periods.filter(item => item.open && item.open.day === googleDayIndex);\r\n          if (periods && periods.length > 0) {\r\n            const periodStart = periods[0];\r\n            if (!periodStart.close) {\r\n              availability.amStart = '00:00';\r\n              availability.amStop = '24:00';\r\n            } else {\r\n              availability.amStart = ('0' + periodStart.open.hours).slice(-2) + ':' + ('0' + periodStart.open.minutes).slice(-2);\r\n              availability.amStop = ('0' + (periodStart.close.hours === 0 ? 24 : periodStart.close.hours)).slice(-2) + ':' + ('0' + periodStart.close.minutes).slice(-2);\r\n            }\r\n\r\n            const periodEnd = periods.length > 1 ? periods[1] : null;\r\n\r\n            if (periodEnd) {\r\n              availability.pmStart = ('0' + periodEnd.open.hours).slice(-2) + ':' + ('0' + periodEnd.open.minutes).slice(-2);\r\n              availability.pmStop = ('0' + (periodEnd.close.hours === 0 ? 24 : periodEnd.close.hours)).slice(-2) + ':' + ('0' + periodEnd.close.minutes).slice(-2);\r\n            } else {\r\n              availability.pmStart = null;\r\n              availability.pmStop = null;\r\n            }\r\n\r\n          } else {\r\n            availability.isClosed = true;\r\n          }\r\n\r\n          availabilitiesList.push(availability);\r\n          this.componentModel.availabilities = availabilitiesList;\r\n\r\n        }\r\n      }\r\n\r\n    } else {\r\n      this.generateAvailabilities();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create map based on address model\r\n   */\r\n  private createMap(latitude: number, longitude: number) {\r\n    this.mapsAPILoader.load().then(() => {\r\n      const myLatlng = new google.maps.LatLng(latitude, longitude);\r\n      const mapOptions = {\r\n        zoom: this.zoomLevel,\r\n        center: myLatlng,\r\n        scrollwheel: false, // we disable de scroll over the map, it is a really annoing when you scroll through page\r\n      }\r\n\r\n      const map = new google.maps.Map(document.getElementById('regularMap'), mapOptions);\r\n\r\n      const marker = new google.maps.Marker({\r\n        position: myLatlng,\r\n        title: 'Map'\r\n      });\r\n\r\n      marker.setMap(map);\r\n    });\r\n  }\r\n\r\n  /**\r\n * Create address initial model, on add\r\n */\r\n  private createEmptyModel() {\r\n    this.componentModel = new AddressModel();\r\n    this.componentModel.id = -1;\r\n    this.componentModel.commonAvailability = false;\r\n    this.generateAvailabilities();\r\n    this.componentModel.customerId = this.currentUser.customerId;\r\n    this.componentModel.location = new AddressLocationModel();\r\n    this.componentModel.facilities = [];\r\n    this.componentModel.requirements = [];\r\n    this.componentModel.trucks = [];\r\n  }\r\n\r\n  private isModelValid(): boolean {\r\n    if (!this.componentModel.name)\r\n      return false;\r\n\r\n    if (!this.componentModel.location)\r\n      return false;\r\n\r\n    if (!this.componentModel.location.zipCode)\r\n      return false;\r\n\r\n    if (!this.componentModel.location.city)\r\n      return false;\r\n\r\n    if (!this.componentModel.location.country)\r\n      return false;\r\n\r\n    if (!this.componentModel.contactPerson)\r\n      return false;\r\n\r\n    if (!this.componentModel.phone)\r\n      return false;\r\n\r\n    if (this.componentModel.email && !this.emailValidator(this.componentModel.email))\r\n      return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  private generateAvailabilities() {\r\n    const availabilitiesList = new Array<AvailabilityEntityModel>();\r\n    if (!this.componentModel.commonAvailability) {\r\n      this.componentModel.availabilities = [];\r\n      if (this.componentModel.availabilities.length < 7) {\r\n        for (let day = 1; day <= 7; day++) {\r\n          const availability = new AvailabilityEntityModel();\r\n          availability.id = -1;\r\n          availability.day = day;\r\n          if (day > 5) {\r\n            availability.isClosed = true;\r\n          }\r\n          availabilitiesList.push(availability);\r\n        }\r\n      }\r\n    } else {\r\n      const availability = new AvailabilityEntityModel();\r\n      availability.id = -1;\r\n      availability.day = 0;\r\n      availabilitiesList.push(availability);\r\n    }\r\n    this.componentModel.availabilities = availabilitiesList;\r\n  }\r\n\r\n  emailValidator(email: string): boolean {\r\n    const EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    if (!EMAIL_REGEXP.test(email)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private getDay(day: number): string {\r\n    const weekdays = [\r\n      'Monday', 'Tuesday',\r\n      'Wednesday', 'Thursday', 'Friday',\r\n      'Saturday', 'Sunday'\r\n    ];\r\n    if (day > 0) {\r\n      return weekdays[day - 1];\r\n    } else {\r\n      return weekdays[0] + ' - ' + weekdays[6];\r\n    }\r\n  }\r\n\r\n  private setCursorToAddressSearch() {\r\n    if (this.componentState === ComponentStateType.add) {\r\n      const element = document.getElementById('searchControl');\r\n      if (element) {\r\n        element.focus();\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/components/address-save.component.ts","export class AddressLocationModel {\r\n    public latitude: number;\r\n    public longitude: number;\r\n    public countryCode: string;\r\n    public country: string;\r\n    public city: string;\r\n    public cityCode: string;\r\n    public state: string;\r\n    public stateCode: string;\r\n    public street: string;\r\n    public streetNumber: string;\r\n    public zipCode: string;\r\n\r\n    public phone: string;\r\n    public openNow: string;\r\n    public openingHours: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/models/address-location-model.ts","import { AddressLocationModel } from 'app/address/models/address-location-model';\r\nimport { FacilityEntityModel } from 'app/shared/common/models/entity/facility-entity-model';\r\nimport { AvailabilityEntityModel } from 'app/shared/common/models/entity/availability-entity-model';\r\nimport { RequirementEntityModel } from 'app/shared/common/models/entity/requirement-entity-model';\r\nimport { TruckEntityModel } from 'app/shared/common/models/entity/truck-entity-model';\r\n\r\nexport class AddressModel {\r\n    public id: number;\r\n    public customerId: number;\r\n    public name: string;\r\n    public location: AddressLocationModel;\r\n    public contactPerson: string;\r\n    public email: string;\r\n    public phone: string;\r\n    public remark: string;\r\n    public userIdCreated: number;\r\n    public dateCreated: Date;\r\n    public userIdModified: number;\r\n    public dateModified: Date;\r\n    public userCreated: string;\r\n    public userModified: string;\r\n    public availabilities: Array<AvailabilityEntityModel>;\r\n    public facilities: Array<FacilityEntityModel>;\r\n    public requirements: Array<RequirementEntityModel>;\r\n    public trucks: Array<TruckEntityModel>;\r\n    public commonAvailability: boolean;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/models/address-model.ts","\r\n\r\nimport { AddressModel } from \"app/address/models/address-model\";\r\n\r\nexport class AddressRowViewModel {\r\n  public viewActions: boolean;\r\n  public viewEdit: boolean;\r\n  public address: AddressModel;\r\n  public showViewLoader: boolean;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/models/address-row-viewmodel.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Headers, Http, Response, RequestOptions } from '@angular/http';\r\nimport { HttpService } from \"app/shared/common/services/httpService\";\r\nimport { Constants } from \"app/shared/common/constants\";\r\nimport { GlobalErrorHandler } from \"app/shared/common/services/globalErrorHandler\";\r\nimport { AddressModel } from \"app/address/models/address-model\";\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\n\r\n\r\n@Injectable()\r\nexport class AddressService {\r\n\r\n  private serviceUrl = Constants.serverUrl + 'api/Addresses/';\r\n\r\n  private addressModel = new BehaviorSubject<any>(null);\r\n  addressModelReceivedHandler$ = this.addressModel.asObservable();\r\n\r\n  constructor(public http: HttpService, private errorHandler: GlobalErrorHandler) { }\r\n\r\n  sendAddressModel(value) {\r\n    this.addressModel.next(value);\r\n  }\r\n  // don't forget to reset handler\r\n  resetSendAddressModelHandler() {\r\n    this.addressModel.next(null);\r\n  }\r\n\r\n  /**\r\n   * get biometrics\r\n   * @param employeeEncryptedData\r\n   * @param language\r\n   */\r\n  get(id: number, customerId: number, language: string): Observable<AddressModel> {\r\n    return this.http.get(this.serviceUrl +\r\n      'get' +\r\n      '/' + id +\r\n      '/' + customerId +\r\n      '/' + language)\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n   * Get all addresses\r\n   * @param customerId\r\n   * @param startItem\r\n   * @param numberOfRetrievedItems\r\n   * @param language\r\n   */\r\n  getAll(customerId: number, searchTerm: string, startItem: number, numberOfRetrievedItems: number, language: string): Observable<AddressModel[]> {\r\n    return this.http.get(this.serviceUrl +\r\n      'getAll' +\r\n      '/' + customerId +\r\n      '/' + startItem +\r\n      '/' + numberOfRetrievedItems +\r\n      '/' + language +\r\n      '?searchTerm=' + searchTerm)\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n* Get number of addresses, used for paging\r\n* @param customerId\r\n* @param startItem\r\n* @param numberOfRetrievedItems\r\n* @param language\r\n*/\r\n  getCount(customerId: number, searchTerm: string, language: string): Observable<number> {\r\n    return this.http.get(this.serviceUrl +\r\n      'getCount' +\r\n      '/' + customerId +\r\n      '/' + language +\r\n      '?searchTerm=' + searchTerm)\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n   * Save address\r\n   * @param medicalEncryptedData\r\n   * @param componentName\r\n   * @param language\r\n   */\r\n  save(model: AddressModel, language: string) {\r\n    const headers = new Headers({ 'Content-Type': 'application/json' });\r\n    const data = JSON.stringify(model);\r\n\r\n    return this.http.post(this.serviceUrl + 'save' + '/' + language,\r\n      data,\r\n      { headers })\r\n      .map(response => (response).json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n  * Delete address\r\n  * @param medicalEncryptedData\r\n  * @param componentName\r\n  * @param language\r\n  */\r\n  delete(addressId: number, customerId: number, language: string) {\r\n    const headers = new Headers({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.delete(this.serviceUrl + 'delete/' + addressId + '/' + customerId + '/' + language)\r\n      .map(response => (response).json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/address/services/address.service.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppLayoutComponent } from \"app/layouts/admin/app-layout.component\";\r\nimport { AuthLayoutComponent } from \"app/layouts/auth/auth-layout.component\";\r\n\r\nimport { ErrorComponent } from \"app/shared/common/components/error.component\";\r\nimport { PageNotFoundComponent } from \"app/shared/common/components/pageNotFound.component\";\r\nimport { LoginComponent } from \"app/authentication/components/login.component\";\r\n\r\nimport { AddressSaveComponent } from \"app/address/components/address-save.component\";\r\nimport { AddressOverviewComponent } from \"app/address/components/address-overview.component\";\r\n\r\nimport { ShipmentSaveComponent } from \"app/shipment/components/shipment-save.component\";\r\nimport { ShipmentOverviewComponent } from \"app/shipment/components/shipment-overview.component\";\r\nimport { AuthGuard } from \"app/authentication/guard/auth-guard.service\";\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'login',\r\n    pathMatch: 'full',\r\n  },\r\n\r\n  {\r\n    path: '',\r\n    component: AuthLayoutComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        children: [{\r\n          path: 'login',\r\n          component: LoginComponent\r\n        }]\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    path: '',\r\n    component: AppLayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: 'shipment-add',\r\n        component: ShipmentSaveComponent\r\n      },\r\n      {\r\n        path: 'shipment-edit/:id',\r\n        component: ShipmentSaveComponent\r\n      },\r\n      {\r\n        path: '',\r\n        children: [{\r\n          path: 'shipment-overview',\r\n          component: ShipmentOverviewComponent,\r\n          children: [{\r\n            path: 'shipment-edit/:id',\r\n            component: ShipmentSaveComponent\r\n          }]\r\n        }]\r\n      },\r\n      {\r\n        path: 'address-add',\r\n        component: AddressSaveComponent\r\n      },\r\n      {\r\n        path: 'address-edit/:id',\r\n        component: AddressSaveComponent\r\n      },\r\n      {\r\n        path: '',\r\n        children: [{\r\n          path: 'address-overview',\r\n          component: AddressOverviewComponent,\r\n          children: [{\r\n            path: 'address-edit/:id',\r\n            component: AddressSaveComponent\r\n          }]\r\n        }]\r\n      },\r\n\r\n\r\n    ]\r\n  },\r\n  {\r\n    path: 'error',\r\n    component: ErrorComponent\r\n  },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/app-routing.module.ts","module.exports = \"<router-outlet>\\r\\n</router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\ndeclare var $:any;\r\n@Component({\r\n    selector: 'my-app',\r\n    templateUrl: './app.component.html'\r\n})\r\n\r\nexport class AppComponent implements OnInit{\r\n    constructor(private elRef:ElementRef) {}\r\n    ngOnInit(){\r\n        let body = document.getElementsByTagName('body')[0];\r\n        var isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\r\n        if (isWindows){\r\n           // if we are on windows OS we activate the perfectScrollbar function\r\n            body.classList.add(\"perfect-scrollbar-on\");\r\n        } else {\r\n            body.classList.add(\"perfect-scrollbar-off\");\r\n        }\r\n        $.material.init();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppRoutingModule } from 'app/app-routing.module';\r\n\r\n// Import the Animations module\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppLayoutComponent } from 'app/layouts/admin/app-layout.component';\r\nimport { AuthLayoutComponent } from 'app/layouts/auth/auth-layout.component';\r\n\r\n\r\nimport { MdModule } from 'app/shared/md/md.module';\r\nimport { CommonAppModule } from 'app/shared/common/common-app.module';\r\n\r\n\r\n\r\nimport { AuthenticationModule } from 'app/authentication/authentication.module';\r\nimport { FooterModule } from 'app/shared/footer/footer.module';\r\nimport { NavbarModule } from 'app/shared/navbar/navbar.module';\r\nimport { SidebarModule } from 'app/shared/sidebar/sidebar.module';\r\n\r\nimport { ShipmentModule } from 'app/shipment/shipment.module';\r\nimport { AddressModule } from 'app/address/address.module';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    MdModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n\r\n    AuthenticationModule,\r\n    FooterModule,\r\n    NavbarModule,\r\n    SidebarModule,\r\n    ShipmentModule,\r\n    AddressModule,\r\n    CommonAppModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    AppLayoutComponent,\r\n    AuthLayoutComponent,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/app.module.ts","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpModule, XHRBackend, RequestOptions } from \"@angular/http\";\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from \"app/authentication/components/login.component\";\r\nimport { RegisterComponent } from \"app/authentication/components/register.component\";\r\nimport { AuthenticationService } from \"app/authentication/services/authentication.service\";\r\nimport { AuthenticationObserver } from \"app/authentication/services/authentication.observer\";\r\nimport { AuthGuard } from \"app/authentication/guard/auth-guard.service\";\r\nimport { HttpService } from \"app/shared/common/services/httpService\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        HttpModule,\r\n        RouterModule,\r\n    ],\r\n    exports: [\r\n    ],\r\n    declarations: [\r\n        LoginComponent,\r\n        RegisterComponent\r\n    ],\r\n    providers: [\r\n        AuthenticationService,\r\n        AuthenticationObserver,\r\n        AuthGuard\r\n    ]\r\n})\r\nexport class AuthenticationModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/authentication.module.ts","module.exports = \"<div class=\\\"wrapper wrapper-full-page\\\">\\r\\n    <nav class=\\\"navbar navbar-primary navbar-transparent navbar-fixed-top\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"navbar-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menu-example\\\">\\r\\n                    <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                    <span class=\\\"icon-bar\\\"></span>\\r\\n                    <span class=\\\"icon-bar\\\"></span>\\r\\n                    <span class=\\\"icon-bar\\\"></span>\\r\\n                </button>\\r\\n                <a class=\\\"navbar-brand\\\" href=\\\"javascript:void(0)\\\">Transapp</a>\\r\\n            </div>\\r\\n            <div class=\\\"collapse navbar-collapse\\\" id=\\\"menu-example\\\">\\r\\n                <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                    <li>\\r\\n                        <a href=\\\"/\\\">\\r\\n                            <i class=\\\"material-icons\\\">dashboard</i> Transapp\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li class=\\\"\\\">\\r\\n                        <a href=\\\"/register\\\">\\r\\n                            <i class=\\\"material-icons\\\">person_add</i> Register\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li class=\\\" active \\\">\\r\\n                        <a href=\\\"/login\\\">\\r\\n                            <i class=\\\"material-icons\\\">fingerprint</i> Login\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li class=\\\"\\\">\\r\\n                        <a href=\\\"/pages/lock\\\">\\r\\n                            <i class=\\\"material-icons\\\">lock_open</i> Lock\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n    <div class=\\\"full-page login-page\\\" filter-color=\\\"black\\\" data-image=\\\"../../../assets/img/login.jpeg\\\">\\r\\n        <!--   you can change the color of the filter page using: data-color=\\\"blue | purple | green | orange | red | rose \\\" -->\\r\\n        <div class=\\\"content\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\">\\r\\n                        <form id=\\\"LoginForm\\\" #loginForm=\\\"ngForm\\\">\\r\\n                            <div class=\\\"card card-login card-hidden\\\">\\r\\n                                <div class=\\\"card-header text-center\\\" data-background-color=\\\"rose\\\">\\r\\n                                    <h4 class=\\\"card-title\\\">Login</h4>\\r\\n                                    <div class=\\\"social-line\\\">\\r\\n                                        <!-- <a href=\\\"#btn\\\" class=\\\"btn btn-just-icon btn-simple\\\">\\r\\n                                            <i class=\\\"fa fa-facebook-square\\\"></i>\\r\\n                                        </a>\\r\\n                                        <a href=\\\"#pablo\\\" class=\\\"btn btn-just-icon btn-simple\\\">\\r\\n                                            <i class=\\\"fa fa-twitter\\\"></i>\\r\\n                                        </a>\\r\\n                                        <a href=\\\"#eugen\\\" class=\\\"btn btn-just-icon btn-simple\\\">\\r\\n                                            <i class=\\\"fa fa-google-plus\\\"></i>\\r\\n                                        </a> -->\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!--  <p class=\\\"category text-center\\\">\\r\\n                                    Or Be Classical\\r\\n                                </p>-->\\r\\n                                <div class=\\\"card-content\\\">\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <span class=\\\"input-group-addon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">email</i>\\r\\n                                        </span>\\r\\n                                        <div class=\\\"form-group label-floating\\\">\\r\\n                                            <label class=\\\"control-label\\\">Email address</label>\\r\\n                                            <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"applicationUser.login\\\" name=\\\"login\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <span class=\\\"input-group-addon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">lock_outline</i>\\r\\n                                        </span>\\r\\n                                        <div class=\\\"form-group label-floating\\\">\\r\\n                                            <label class=\\\"control-label\\\">Password</label>\\r\\n                                            <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"applicationUser.password\\\" name=\\\"password\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"footer text-center\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"onLoginClick()\\\" class=\\\"btn btn-rose btn-simple btn-wd btn-lg\\\">Let's go</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <footer class=\\\"footer\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <nav class=\\\"pull-left\\\">\\r\\n                    <ul>\\r\\n                        <li>\\r\\n                            <a href=\\\"javascript:void(0)\\\">\\r\\n                                Home\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li>\\r\\n                            <a href=\\\"javascript:void(0)\\\">\\r\\n                                Company\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </nav>\\r\\n                <p class=\\\"copyright pull-right\\\">\\r\\n                    &copy; {{pageDate | date: 'yyyy'}}\\r\\n                    <a href=\\\"/\\\">Transapp</a>, transportation application\\r\\n                </p>\\r\\n            </div>\\r\\n        </footer>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/components/login.component.html\n// module id = ../../../../../src/app/authentication/components/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ApplicationUser } from \"app/authentication/viewmodels/application-user\";\r\nimport { AuthenticationService } from \"app/authentication/services/authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\ndeclare var $:any;\r\n\r\n@Component({\r\n    moduleId:module.id,\r\n    selector: 'login-cmp',\r\n    templateUrl: './login.component.html'\r\n})\r\n\r\nexport class LoginComponent implements OnInit{\r\n    pageDate : Date = new Date();\r\n    applicationUser = new ApplicationUser();\r\n    errorMessage = '';\r\n\r\n    constructor(private router: Router, private authenticationService: AuthenticationService){}\r\n\r\n    checkFullPageBackgroundImage(){\r\n        var $page = $('.full-page');\r\n        var image_src = $page.data('image');\r\n\r\n        if(image_src !== undefined){\r\n            var image_container = '<div class=\"full-page-background\" style=\"background-image: url(' + image_src + ') \"/>'\r\n            $page.append(image_container);\r\n        }\r\n    };\r\n    ngOnInit(){\r\n        this.checkFullPageBackgroundImage();\r\n\r\n        setTimeout(function(){\r\n            // after 1000 ms we add the class animated to the login/register card\r\n            $('.card').removeClass('card-hidden');\r\n        }, 700)\r\n\r\n    }\r\n        /**\r\n     * On login click\r\n     * @returns {} \r\n     */\r\n    onLoginClick(): void {\r\n        this.errorMessage = '';\r\n        this.authenticationService.login(this.applicationUser)\r\n            .subscribe(isLoggedIn => {\r\n                    if (isLoggedIn) {\r\n                        //this.authenticationObserver.sendAuthenticationUpdates(true);\r\n                      \r\n                    } else {\r\n                        this.errorMessage = '';\r\n                    }\r\n                },\r\n                error => {\r\n                    this.errorMessage = 'Invalid user or password';\r\n                });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/components/login.component.ts","module.exports = \"<div class=\\\"modal about-modal w3-agileits fade\\\" id=\\\"myModal3\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body login-page \\\">\\r\\n                <div class=\\\"login-top sign-top\\\">\\r\\n                    <div class=\\\"agileits-login\\\">\\r\\n                        <h5>Register</h5>\\r\\n                        <form action=\\\"#\\\" method=\\\"post\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"Username\\\" placeholder=\\\"Username\\\" required=\\\"\\\" />\\r\\n                            <input type=\\\"email\\\" name=\\\"Email\\\" placeholder=\\\"Email\\\" required=\\\"\\\" />\\r\\n                            <input type=\\\"password\\\" name=\\\"Password\\\" placeholder=\\\"Password\\\" required=\\\"\\\" />\\r\\n                            <div class=\\\"wthree-text\\\">\\r\\n                                <ul>\\r\\n                                    <li>\\r\\n                                        <label class=\\\"anim\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span> I accept the terms of use</span> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                                <div class=\\\"clearfix\\\"> </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"trans-submit\\\">\\r\\n                                <input type=\\\"submit\\\" value=\\\"Register\\\">\\r\\n                            </div>\\r\\n                        </form>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/components/register.component.html\n// module id = ../../../../../src/app/authentication/components/register.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'register-component',\r\n  templateUrl: './register.component.html'\r\n})\r\nexport class RegisterComponent {\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/components/register.component.ts","import { Injectable }       from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild } from '@angular/router';\r\nimport { AuthenticationService } from \"app/authentication/services/authentication.service\";\r\nimport { TranslateService } from \"app/shared/common/services/localization/translate.service\";\r\n\r\n\r\n/**\r\n * Guard service, used to check, for each route if user is authenticated.\r\n*/\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n    constructor(private authService: AuthenticationService,\r\n        private router: Router,\r\n        public translateService: TranslateService) {\r\n    }\r\n\r\n    /**\r\n     * Check if user has permission over a route\r\n     * @param route \r\n     * @param state \r\n     * @returns {} \r\n     */\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        let url: string = state.url;\r\n        let hasAccess = this.isLoginValid(url);\r\n\r\n        if (hasAccess) {\r\n            this.loadApplicationTranslations();\r\n        }\r\n        return hasAccess;\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        return this.canActivate(route, state);\r\n    }\r\n\r\n    /**\r\n     * Check if user is authenticated\r\n     * @param url \r\n     * @returns {} \r\n     */\r\n    isLoginValid(url: string): boolean {\r\n        //// get logged in user\r\n        let user = this.authService.getCurrentUser();\r\n        //// get authentication date\r\n        let expirationDate = this.authService.getTokenExpirationDate();\r\n        if (user != null && (expirationDate == null || expirationDate.getTime() >= new Date().getTime())) {\r\n            //// load application translations\r\n           // this.translateService.currentLanguage = user.language.toLowerCase();\r\n            return true;\r\n        }\r\n        // Store the attempted URL for redirecting\r\n        this.authService.redirectUrl = url;\r\n\r\n        // Navigate to the login page with extras\r\n        this.authService.logout();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Load application translations\r\n     * @returns {} \r\n     */\r\n    loadApplicationTranslations(): void {\r\n        try {\r\n            if (\r\n                !this.translateService\r\n                    .applicationTranslations ||\r\n                    this.translateService.applicationTranslations.length <= 0) {\r\n                //// set user language\r\n                let currentUser = this.authService.getCurrentUser();\r\n                //// get translation resources for this module, translations, can be re-used in all other submodules.\r\n          /*      this.translateService.getApplicationTranslations(currentUser.language)\r\n                    .subscribe(\r\n                        translations => {\r\n                            this.translateService.applicationTranslations = translations;\r\n                        },\r\n                        () => {});*/\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Application translations not loaded\");\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/guard/auth-guard.service.ts","import {Injectable} from '@angular/core'\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\n\r\n@Injectable()\r\nexport class AuthenticationObserver {\r\n    // Observable flag source\r\n    private authenticationNotifier = new BehaviorSubject<boolean>(false);\r\n    // Observable flag stream\r\n    authenticationUpdatesEmitter$ = this.authenticationNotifier.asObservable();\r\n\r\n    // service command\r\n    sendAuthenticationUpdates(value) {\r\n        this.authenticationNotifier.next(value);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/services/authentication.observer.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Response, Http, RequestOptions  } from '@angular/http';\r\nimport { Router, RouterModule, Routes } from '@angular/router';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { AuthenticationObserver } from \"app/authentication/services/authentication.observer\";\r\nimport { ApplicationUser } from \"app/authentication/viewmodels/application-user\";\r\nimport { Constants } from \"app/shared/common/constants\";\r\nimport { HttpService } from \"app/shared/common/services/httpService\";\r\nimport { TranslateService } from \"app/shared/common/services/localization/translate.service\";\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n    private getTokenUrl = Constants.serverUrl + 'api/connect/token';\r\n    token: string;\r\n\r\n    private accountServiceUrl = '/api/Account/';\r\n    redirectUrl: string = '';\r\n\r\n    constructor(public http: HttpService,\r\n        private router: Router,\r\n        private translateService: TranslateService,\r\n        private authenticationObserver: AuthenticationObserver) {\r\n        // set token if saved in local storage\r\n        // let currentUser = JSON.parse(localStorage.getItem('id_token'));\r\n        // this.token = currentUser && currentUser.token;\r\n    }\r\n\r\n    /**\r\n     * login user\r\n     * @param user \r\n     * @returns {} \r\n   */\r\n  \r\n    login(user: ApplicationUser) {\r\n        const headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n        const data = this.toUrlEncodedString({ username: user.login, password: user.password });\r\n        return this.http.post(this.getTokenUrl, data, { headers }).map(response => {\r\n                // let token = response.json() && response.json().access_token;\r\n                let user = response.json() && response.json().user;\r\n                let expiresIn = response.json() && response.json().expires_in;\r\n                let access_token = response.json() && response.json().access_token;\r\n                if (user) {\r\n                    // set token property\r\n                    // this.token = token;\r\n                    // store username and jwt token in local storage to keep user logged in between page refreshes\r\n                    //localStorage.setItem('id_token', token);\r\n                    localStorage.setItem('current_user', JSON.stringify(user));\r\n                    //localStorage.setItem('expires_in', expiresIn);\r\n                    localStorage.setItem('id_token', access_token),\r\n\r\n                   // this.translateService.currentLanguage = user.Language.toLowerCase();\r\n                    //this.authenticationObserver.sendAuthenticationUpdates(true);\r\n\r\n                    this.router.navigate(['/shipment-overview']);\r\n                    // return true to indicate successful login\r\n                    return true;\r\n                } else {\r\n                    // return false to indicate failed login\r\n                    return false;\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Log out\r\n     * clear translations\r\n     * inform other components about authentication status\r\n     * @returns {} \r\n     */\r\n    logout(): void {\r\n        // clear token remove user from local storage to log user out\r\n        this.token = null;\r\n        //localStorage.removeItem('id_token');\r\n        localStorage.removeItem('current_user');\r\n        localStorage.removeItem('expires_in');\r\n        localStorage.removeItem('id_token');\r\n\r\n        this.translateService.moduleTranslations = [];\r\n        this.translateService.applicationTranslations = [];\r\n        //this.translateService.anonymousTranslations = [];\r\n        this.authenticationObserver.sendAuthenticationUpdates(false);\r\n\r\n        this.router.navigate(['/login']);\r\n    }\r\n\r\n    /**The tokenNotExpired function can be used to check whether a JWT exists in local storage, and if it does, \r\n     * whether it has expired or not. If the token is valid, tokenNotExpired returns true, otherwise it returns false. \r\n    loggedIn() {\r\n        return tokenNotExpired();\r\n    }*/\r\n\r\n    // get logged in user\r\n    getCurrentUser(): ApplicationUser {\r\n        if (localStorage.getItem('current_user')) {\r\n            let user = new ApplicationUser();\r\n            const userData = JSON.parse(localStorage.getItem('current_user'));\r\n            user.id = userData.Id;\r\n            user.login = userData.Login;\r\n            user.firstName = userData.FirstName;\r\n            user.name = userData.Name;\r\n            user.customerId = userData.CustomerId;\r\n\r\n            return user;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // get logged in user\r\n    getTokenExpirationDate(): Date {\r\n        if (localStorage.getItem('expires_in')) {\r\n            let dateStr = localStorage.getItem('expires_in');\r\n            if (!isNaN(Date.parse(dateStr))) {\r\n                let date = new Date(dateStr);\r\n                return date;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Converts a Json object to urlencoded format\r\n    private toUrlEncodedString(data: any) {\r\n        let body = \"\";\r\n        for (let key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                if (body.length) {\r\n                    body += \"&\";\r\n                }\r\n                body += key + \"=\";\r\n                body += encodeURIComponent(data[key]);\r\n            }\r\n        }\r\n        return body;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/services/authentication.service.ts","export class ApplicationUser {\r\n    public id: number ;\r\n    public login: string;\r\n    public password: string;\r\n    public firstName: string;\r\n    public name: string ;\r\n    public customerId: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/authentication/viewmodels/application-user.ts","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n    <div class=\\\"sidebar\\\" data-active-color=\\\"white\\\" data-background-color=\\\"red\\\" data-image=\\\"assets/img/sidebar-1.jpg\\\">\\r\\n        <sidebar-cmp></sidebar-cmp>\\r\\n        <div class=\\\"sidebar-background\\\" style=\\\"background-image: url(assets/img/sidebar-1.jpg)\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"main-panel\\\" id=\\\"mainPanel\\\">\\r\\n        <app-navbar-cmp></app-navbar-cmp>\\r\\n        <router-outlet></router-outlet>\\r\\n        <div *ngIf=\\\"!isMap()\\\">\\r\\n            <footer-cmp></footer-cmp>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/layouts/admin/app-layout.component.html\n// module id = ../../../../../src/app/layouts/admin/app-layout.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, ViewChild, HostListener, AfterViewInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { LocationStrategy, PlatformLocation, Location } from '@angular/common';\r\nimport 'rxjs/add/operator/filter';\r\nimport { NavbarComponent } from '../../shared/navbar/navbar.component';\r\nimport { NavItem, NavItemType } from 'app/shared/md/md.module';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './app-layout.component.html'\r\n})\r\n\r\nexport class AppLayoutComponent implements OnInit, AfterViewInit {\r\n  public navItems: NavItem[];\r\n  private _router: Subscription;\r\n  url: string;\r\n  location: Location;\r\n\r\n  @ViewChild('sidebar') sidebar: any;\r\n  @ViewChild(NavbarComponent) navbar: NavbarComponent;\r\n  constructor(private router: Router, location: Location) {\r\n    this.location = location;\r\n  }\r\n  ngOnInit() {\r\n    const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n    const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\r\n\r\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n      let ps = new PerfectScrollbar(elemMainPanel, { wheelSpeed: 2, suppressScrollX: true });\r\n      ps = new PerfectScrollbar(elemSidebar, { wheelSpeed: 2, suppressScrollX: true });\r\n    }\r\n\r\n    this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\r\n      this.navbar.sidebarClose();\r\n    });\r\n\r\n    this.navItems = [\r\n      { type: NavItemType.NavbarLeft, title: 'Dashboard', iconClass: 'fa fa-dashboard' },\r\n\r\n      {\r\n        type: NavItemType.NavbarRight,\r\n        title: '',\r\n        iconClass: 'fa fa-bell-o',\r\n        numNotifications: 5,\r\n        dropdownItems: [\r\n          { title: 'Notification 1' },\r\n          { title: 'Notification 2' },\r\n          { title: 'Notification 3' },\r\n          { title: 'Notification 4' },\r\n          { title: 'Another Notification' }\r\n        ]\r\n      },\r\n      {\r\n        type: NavItemType.NavbarRight,\r\n        title: '',\r\n        iconClass: 'fa fa-list',\r\n\r\n        dropdownItems: [\r\n          { iconClass: 'pe-7s-mail', title: 'Messages' },\r\n          { iconClass: 'pe-7s-help1', title: 'Help Center' },\r\n          { iconClass: 'pe-7s-tools', title: 'Settings' },\r\n          'separator',\r\n          { iconClass: 'pe-7s-lock', title: 'Lock Screen' },\r\n          { iconClass: 'pe-7s-close-circle', title: 'Log Out' }\r\n        ]\r\n      },\r\n      { type: NavItemType.NavbarLeft, title: 'Search', iconClass: 'fa fa-search' },\r\n\r\n      { type: NavItemType.NavbarLeft, title: 'Account' },\r\n      {\r\n        type: NavItemType.NavbarLeft,\r\n        title: 'Dropdown',\r\n        dropdownItems: [\r\n          { title: 'Action' },\r\n          { title: 'Another action' },\r\n          { title: 'Something' },\r\n          { title: 'Another action' },\r\n          { title: 'Something' },\r\n          'separator',\r\n          { title: 'Separated link' },\r\n        ]\r\n      },\r\n      { type: NavItemType.NavbarLeft, title: 'Log out' }\r\n    ];\r\n  }\r\n  ngAfterViewInit() {\r\n    this.runOnRouteChange();\r\n  }\r\n  public isMap() {\r\n    if (this.location.prepareExternalUrl(this.location.path()) === '/maps/fullscreen') {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  runOnRouteChange(): void {\r\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const ps = new PerfectScrollbar(elemMainPanel);\r\n      ps.update();\r\n    }\r\n  }\r\n  isMac(): boolean {\r\n    let bool = false;\r\n    if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n      bool = true;\r\n    }\r\n    return bool;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/layouts/admin/app-layout.component.ts","module.exports = \"\\r\\n  <router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/layouts/auth/auth-layout.component.html\n// module id = ../../../../../src/app/layouts/auth/auth-layout.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './auth-layout.component.html'\r\n})\r\nexport class AuthLayoutComponent {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/layouts/auth/auth-layout.component.ts","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpModule, XHRBackend, RequestOptions } from \"@angular/http\";\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ErrorComponent } from \"app/shared/common/components/error.component\";\r\nimport { PageNotFoundComponent } from \"app/shared/common/components/pageNotFound.component\";\r\nimport { HelperService } from \"app/shared/common/services/helperService\";\r\nimport { HttpService } from \"app/shared/common/services/httpService\";\r\nimport { GlobalErrorHandler } from \"app/shared/common/services/globalErrorHandler\";\r\nimport { ParametersDataService } from \"app/shared/common/services/parameters-data.service\";\r\nimport { TranslateService } from \"app/shared/common/services/localization/translate.service\";\r\n\r\nimport { NotificationService } from 'app/shared/common/services/notification.service';\r\nimport { AddressAvailabilitySliderComponent } from \"app/shared/common/components/address-availability-slider.component\";\r\nimport { PagerService } from 'app/shared/common/services/pager.service';\r\n\r\n\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatStepperModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatProgressBarModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule\r\n  ],\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatProgressBarModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    MaterialModule\r\n  ],\r\n  exports: [\r\n    MaterialModule,\r\n    AddressAvailabilitySliderComponent,\r\n\r\n  ],\r\n  declarations: [\r\n    ErrorComponent,\r\n    PageNotFoundComponent,\r\n    AddressAvailabilitySliderComponent,\r\n  ],\r\n  providers: [\r\n    HelperService,\r\n    HttpService,\r\n    GlobalErrorHandler,\r\n    NotificationService,\r\n    ParametersDataService,\r\n    PagerService,\r\n    TranslateService,\r\n    {\r\n      provide: HttpService,\r\n      useFactory: httpFactory,\r\n      deps: [XHRBackend, RequestOptions]\r\n    }\r\n\r\n  ]\r\n})\r\nexport class CommonAppModule { }\r\nexport function httpFactory(backend: XHRBackend, options: RequestOptions) { return new HttpService(backend, options) };\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/common-app.module.ts","module.exports = \"<div class=\\\"togglebutton\\\" style=\\\"padding-bottom: 10px;\\\">\\r\\n    <label>\\r\\n            <input type=\\\"checkbox\\\" (click)=\\\"onClosedDayClick()\\\" [(ngModel)]=\\\"availability.isClosed\\\" [checked]=\\\"availability.isClosed\\\"\\r\\n            name=\\\"availabilityClosedDay\\\"> Is closed on this day\\r\\n       </label>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!availability.isClosed\\\" id=\\\"{{sliderid}}_{{availability.day}}\\\" class=\\\"slider slider-info\\\"></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/address-availability-slider.component.html\n// module id = ../../../../../src/app/shared/common/components/address-availability-slider.component.html\n// module chunks = main","import { Component, OnInit, Input,  OnChanges, SimpleChanges, SimpleChange } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Params, RouterModule, Router, Routes } from '@angular/router';\r\nimport { AvailabilityEntityModel } from 'app/shared/common/models/entity/availability-entity-model';\r\n\r\ndeclare var $: any;\r\nconst moment = require('moment/moment');\r\n\r\n@Component(({\r\n  selector: 'address-availability-slider',\r\n  templateUrl: './address-availability-slider.component.html'\r\n}) as any)\r\nexport class AddressAvailabilitySliderComponent implements OnInit, OnChanges {\r\n  @Input('sliderid')\r\n  sliderid: string;\r\n\r\n  @Input('availability')\r\n  availability: AvailabilityEntityModel;\r\n\r\n  private range_min_timestamp: number;\r\n  private range_max_timestamp: number;\r\n\r\n  private amStart_initial_timestamp: number;\r\n  private amStop_initial_timestamp: number;\r\n  private pmStart_initial_timestamp: number;\r\n  private pmStop_initial_timestamp: number;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const availability: SimpleChange = changes.availability;\r\n    this.availability = availability.currentValue;\r\n    this.initializeData();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeData();\r\n  }\r\n\r\n  onClosedDayClick() {\r\n    this.availability.isClosed = !this.availability.isClosed;\r\n    this.initializeData();\r\n  }\r\n\r\n  initializeData(): void {\r\n    if (this.availability !== null) {\r\n      this.getTimestamps();\r\n      const self = this;\r\n      setTimeout(function () {\r\n        if (self.availability !== null) {\r\n          if (!self.availability.isClosed) {\r\n            self.initSliderControl( self);\r\n          }\r\n        }\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Based on day number get closest date with this day\r\n   * based on this date init initial hours for intervals and for amstart and pmstart\r\n   */\r\n  private getTimestamps() {\r\n    // get closest date by current day\r\n    let date = new Date();\r\n    if (this.availability.day > 0) {\r\n      date = moment().isoWeekday(this.availability.day).toDate();\r\n    }\r\n\r\n    if (this.availability.isClosed) {\r\n      this.availability.amStart = '';\r\n      this.availability.amStop = '';\r\n      this.availability.pmStart = '';\r\n      this.availability.pmStop = '';\r\n    } else {\r\n      this.range_min_timestamp = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0).getTime();\r\n      this.range_max_timestamp = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 24, 0, 0, 0).getTime();\r\n\r\n      this.amStart_initial_timestamp = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 8, 0, 0, 0).getTime();\r\n      this.amStop_initial_timestamp = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 12, 0, 0, 0).getTime();\r\n      this.pmStart_initial_timestamp = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 13, 0, 0, 0).getTime();\r\n      this.pmStop_initial_timestamp = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 16, 0, 0, 0).getTime();\r\n\r\n      if (this.availability.amStart && this.availability.amStart.length > 0) {\r\n        const hoursArray = this.availability.amStart.split(':');\r\n        if (hoursArray.length === 1) {\r\n          hoursArray.push('00');\r\n        }\r\n        this.amStart_initial_timestamp = new Date(date.getFullYear(), date.getMonth(), date.getDate(), +hoursArray[0], +hoursArray[1], 0, 0).getTime();\r\n      } else {\r\n       // this.availability.amStart = null;\r\n      }\r\n\r\n      if (this.availability.amStop && this.availability.amStop.length > 0) {\r\n        const hoursArray = this.availability.amStop.split(':');\r\n        if (hoursArray.length === 1) {\r\n          hoursArray.push('00');\r\n        }\r\n        this.amStop_initial_timestamp = new Date(date.getFullYear(), date.getMonth(), date.getDate(), +hoursArray[0], +hoursArray[1], 0, 0).getTime();\r\n      } else {\r\n       // this.availability.amStop= null;\r\n      }\r\n\r\n      if (this.availability.pmStart && this.availability.pmStart.length > 0) {\r\n        const hoursArray = this.availability.pmStart.split(':');\r\n        if (hoursArray.length === 1) {\r\n          hoursArray.push('00');\r\n        }\r\n        this.pmStart_initial_timestamp = new Date(date.getFullYear(), date.getMonth(), date.getDate(), +hoursArray[0], +hoursArray[1], 0, 0).getTime();\r\n      } else {\r\n        this.pmStart_initial_timestamp =null\r\n      }\r\n\r\n      if (this.availability.pmStop && this.availability.pmStop.length > 0) {\r\n        const hoursArray = this.availability.pmStop.split(':');\r\n        if (hoursArray.length === 1) {\r\n          hoursArray.push('00');\r\n        }\r\n        this.pmStop_initial_timestamp = new Date(date.getFullYear(), date.getMonth(), date.getDate(), +hoursArray[0], +hoursArray[1], 0, 0).getTime();\r\n      } else {\r\n        this.pmStop_initial_timestamp = null;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Init selection slider\r\n   */\r\n  private initSliderControl(context: any) {\r\n\r\n    const noUiSlider = require('nouislider');\r\n\r\n    const self = context;\r\n    const sliderAvailability = document.getElementById(this.sliderid + '_' + self.availability.day) as any;\r\n    const itWasInitializedAlready = sliderAvailability && sliderAvailability.querySelectorAll('.noUi-origin').length > 0;\r\n\r\n    let sliderConfig = {};\r\n    if(this.pmStart_initial_timestamp != null && this.pmStop_initial_timestamp != null){\r\n      sliderConfig = {\r\n        // Create two timestamps to define a range.\r\n        range: {\r\n          min: self.range_min_timestamp,\r\n          max: self.range_max_timestamp\r\n        },\r\n        format: { to: self.toFormat, from: Number },\r\n        connect: [false, true, true, true, false],\r\n        // Steps of one week\r\n        step: 15 * 60 * 1000,\r\n        // Two more timestamps indicate the handle starting positions.\r\n        start: [self.amStart_initial_timestamp, self.amStop_initial_timestamp, self.pmStart_initial_timestamp, self.pmStop_initial_timestamp],\r\n        tooltips: [true, true, true, true]\r\n      };\r\n    } else {\r\n      sliderConfig = {\r\n        // Create two timestamps to define a range.\r\n        range: {\r\n          min: self.range_min_timestamp,\r\n          max: self.range_max_timestamp\r\n        },\r\n        format: { to: self.toFormat, from: Number },\r\n        connect: [false, true, false],\r\n        // Steps of one week\r\n        step: 15 * 60 * 1000,\r\n        // Two more timestamps indicate the handle starting positions.\r\n        start: [self.amStart_initial_timestamp, self.amStop_initial_timestamp],\r\n        tooltips: [true, true]\r\n      };\r\n    }\r\n\r\n\r\n    if (!itWasInitializedAlready) {\r\n      noUiSlider.create(sliderAvailability, sliderConfig );\r\n    } else {\r\n      sliderAvailability.noUiSlider.updateOptions(sliderConfig );\r\n    }\r\n      //// set different collors between intervals\r\n      const connect = sliderAvailability.querySelectorAll('.noUi-origin');\r\n      const classes = ['sliderinfo', 'sliderwarning', 'slidersuccess', '', ''];\r\n      for (let i = 0; i < connect.length; i++) {\r\n        if (classes[i].length > 0)\r\n          connect[i].classList.add(classes[i]);\r\n      }\r\n\r\n      sliderAvailability.noUiSlider.on('update', function (values, handle) {\r\n        self.onSlide(values, handle);\r\n      });\r\n\r\n  }\r\n\r\n  /**\r\n   * update values when slide happen\r\n   * @param values\r\n   * @param handle\r\n   */\r\n  private onSlide(values, handle) {\r\n    const self = this;\r\n    if (self.availability) {\r\n      const selectedDate = values[handle];\r\n      switch (handle) {\r\n        case 0:\r\n          self.availability.amStart = selectedDate;\r\n          break;\r\n        case 1:\r\n          self.availability.amStop = selectedDate;\r\n          break;\r\n        case 2:\r\n          self.availability.pmStart = selectedDate;\r\n          break;\r\n        case 3:\r\n          self.availability.pmStop = selectedDate;\r\n          break;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  timestamp(str) {\r\n    return new Date(str).getTime();\r\n  }\r\n\r\n  toFormat(v) {\r\n    const date = new Date(v);\r\n\r\n    const hours = ('0' + date.getHours()).slice(-2);\r\n    const minutes = ('0' + date.getMinutes()).slice(-2)\r\n\r\n    return hours + (date.getMinutes() > 0 ? (':' + minutes) : '');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/address-availability-slider.component.ts","module.exports = \"An error occured. Click <a routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\">here</a> to go back to main page.\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/error.component.html\n// module id = ../../../../../src/app/shared/common/components/error.component.html\n// module chunks = main","import { Component,  OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, RouterModule, Router, Routes } from '@angular/router';\r\n\r\n@Component(({\r\n    selector: 'error-component',\r\n    templateUrl: './error.component.html'\r\n}) as any)\r\nexport class ErrorComponent  {\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/error.component.ts","module.exports = \"Page not found. Click <a routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\">here</a> to go back to main page.\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/pageNotFound.component.html\n// module id = ../../../../../src/app/shared/common/components/pageNotFound.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'page-not-found',\r\n  templateUrl: \"./pageNotFound.component.html\"\r\n\r\n})\r\nexport class PageNotFoundComponent {}\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/components/pageNotFound.component.ts","export class Constants {\r\n    public static  serverUrl : string = \"\";\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/constants.ts","\r\nexport enum ComponentStateType {\r\n  add = 0,\r\n  edit = 1,\r\n  display = 2\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/helper/component-state-type.ts","export class AvailabilityEntityModel {\r\n    public id: number;\r\n    public entityId: number;\r\n    public day: number;\r\n\r\n    public isClosed: boolean;\r\n\r\n    public amStart: string;\r\n    public amStop: string;\r\n    public pmStart: string;\r\n    public pmStop: string;\r\n\r\n    public userIdCreated: number;\r\n    public dateCreated: Date;\r\n    public userIdModified: number;\r\n    public dateModified: Date;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/models/entity/availability-entity-model.ts","export class FacilityEntityModel {\r\n    public id: number;\r\n    public entityId: number;\r\n    public facilityId: number;\r\n    public active: boolean;\r\n\r\n    public description: string;\r\n    public iconName: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/models/entity/facility-entity-model.ts","export class RequirementEntityModel {\r\n    public id: number;\r\n    public entityId: number;\r\n    public requirementId: number;\r\n    public active: boolean;\r\n\r\n    public description: string;\r\n    public iconName: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/models/entity/requirement-entity-model.ts","export class PackTypeParameterModel {\r\n  public id: number;\r\n  public code: string;\r\n\r\n  public customerId: number;\r\n\r\n  public packLength: number;\r\n  public packHeight: number;\r\n  public packWidth: number;\r\n\r\n  public dictionaryId: number;\r\n\r\n  public description: string;\r\n\r\n  public userIdCreated: number;\r\n  public dateCreated: Date;\r\n  public userIdModified: number;\r\n  public dateModified: Date;\r\n  public userCreated: string;\r\n  public userModified: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/models/parameter/pack-type-parameter-model.ts","export class TruckParameterModel {\r\n    public id: number;\r\n    public code: string;\r\n    public dictionaryId: number;\r\n    public image: number[];\r\n    public iconName: string;\r\n    public userIdCreated: number;\r\n    public dateCreated: Date;\r\n    public userIdModified: number;\r\n    public dateModified: Date;\r\n    public active: boolean;\r\n    public description: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/models/parameter/truck-parameter-model.ts","import { Injectable } from '@angular/core';\r\nimport { Router, RouterModule, Routes } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthenticationObserver } from \"app/authentication/services/authentication.observer\";\r\nimport { AuthenticationService } from \"app/authentication/services/authentication.service\";\r\nimport { NotificationService } from 'app/shared/common/services/notification.service';\r\n\r\n\r\n@Injectable()\r\nexport class GlobalErrorHandler {\r\n  // constructor\r\n  constructor(private router: Router,\r\n    private authenticationObserver: AuthenticationObserver,\r\n    private authenticationService: AuthenticationService,\r\n    private notificationService: NotificationService) {\r\n  }\r\n\r\n  /**\r\n   * Handle error\r\n   * @param error\r\n   * @returns {}\r\n   */\r\n  throwError(error: any): Observable<any> {\r\n    return Observable.throw(error);\r\n  }\r\n\r\n  /**\r\n   * Handle error\r\n   * @param error\r\n   * @returns {}\r\n   */\r\n  handleError(error: any) {\r\n    if (error.status === 401) {\r\n      this.redirectToLogin();\r\n    } else {\r\n      if (error._body && error._body.trim() !== '') {\r\n        const errorObject = JSON.parse(error._body);\r\n        if (errorObject.errorType === 1) {\r\n          this.redirectToLogin();\r\n        } else if (errorObject.errorType === 2) {\r\n          alert(errorObject.message);\r\n        } else {\r\n          this.router.navigate([\"/error\"]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private redirectToLogin() {\r\n    localStorage.removeItem('current_user');\r\n    console.log(\"Your session has expired. please login again\");\r\n    this.authenticationService.logout();\r\n    this.notificationService.show('Session expired. You have to login again.', 'danger', 'center', 'top');\r\n    const self = this;\r\n    setTimeout(function () {\r\n      self.router.navigate([\"/login\"]);\r\n    }, 1500);\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/globalErrorHandler.ts","import { Injectable } from \"@angular/core\";\r\nimport { ComponentStateType } from \"app/shared/common/helper/component-state-type\";\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\ndeclare var $: any;\r\n\r\n@Injectable()\r\nexport class HelperService {\r\n  /**\r\n     * Get component state based on current url\r\n     * @param url\r\n     */\r\n  getComponentStateByUrl(url: string) {\r\n    if (url.indexOf(\"-add\") >= 0) {\r\n      return ComponentStateType.add;\r\n    } else if (url.indexOf(\"-edit\") >= 0) {\r\n      return ComponentStateType.edit;\r\n    } else if (url.indexOf(\"-edit\") >= 0) {\r\n      return ComponentStateType.display;\r\n    }\r\n  }\r\n\r\n  scrollOnTop() {\r\n    const $main_panel = $(\".main-panel\");\r\n    $main_panel.scrollTop(0);\r\n  }\r\n\r\n  scrollOnElement(elementId) {\r\n    const $main_panel = $(\".main-panel\");\r\n    const elementPosition = $('#' + elementId).offset();\r\n    $main_panel.scrollTop(elementPosition);\r\n  }\r\n\r\n  setFocusOnElement(elementId) {\r\n    const element = document.getElementById(elementId);\r\n    if (element) {\r\n      element.focus();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n     * Convert datetime to string\r\n     * @param dateobj\r\n     * @param format available formats: en, nl, fr, de, ro\r\n     * @param include\r\n     * @returns {}\r\n     */\r\n  dateToString(dateobj: any, format: string, includeTime = false) {\r\n    const year = dateobj.getFullYear();\r\n    const month = (\"0\" + (dateobj.getMonth() + 1)).slice(-2);\r\n    const day = (\"0\" + dateobj.getDate()).slice(-2);\r\n    const hours = (\"0\" + dateobj.getHours()).slice(-2);\r\n    const minutes = (\"0\" + dateobj.getMinutes()).slice(-2);\r\n    const seconds = (\"0\" + dateobj.getSeconds()).slice(-2);\r\n    let convertedDate = \"\";\r\n\r\n    switch (format) {\r\n      case \"nl\":\r\n        convertedDate = day + \"/\" + month + \"/\" + year;\r\n        break;\r\n      case \"fr\": // dd-mm-yyyy\r\n        convertedDate = day + \"-\" + month + \"-\" + year;\r\n        break;\r\n      case \"de\": // yyyy-mm-dd\r\n        convertedDate = year + \"-\" + month + \"-\" + day;\r\n        break;\r\n      case \"ro\": // yyyy-mm-dd\r\n        convertedDate = day + \".\" + month + \".\" + year;\r\n        break;\r\n      default:\r\n        convertedDate = day + month + year;\r\n        if (includeTime) {\r\n          convertedDate += hours + minutes + seconds;\r\n        }\r\n        return convertedDate;\r\n    }\r\n\r\n    if (includeTime) {\r\n      convertedDate += \" \" + hours + \":\" + minutes + \":\" + seconds;\r\n    }\r\n\r\n    return convertedDate;\r\n  }\r\n\r\n  convertToDateTime(datestring: string) {\r\n    const dt1 = parseInt(datestring.substring(0, 2));\r\n    const mon1 = parseInt(datestring.substring(2, 4));\r\n    const yr1 = parseInt(datestring.substring(4, 8));\r\n    const date1 = new Date(yr1, mon1 - 1, dt1);\r\n    return date1;\r\n  }\r\n\r\n  /**\r\n     * Receive user language parameter and return datetime format\r\n     * @param language\r\n     * @returns {}\r\n     */\r\n  getLanguageSpecificFormatForDate(\r\n    language: string,\r\n    includeTime = false\r\n  ) {\r\n    let format = \"\";\r\n    switch (language) {\r\n      case \"nl\":\r\n        format = \"dd/MM/yyyy\";\r\n        break;\r\n      case \"fr\": // dd-mm-yyyy\r\n        format = \"dd-MM-yyyy\";\r\n        break;\r\n      case \"de\": // yyyy-mm-dd\r\n        format = \"yyyy-MM-dd\";\r\n        break;\r\n      case \"ro\": // yyyy-mm-dd\r\n        format = \"dd.MM.yyyy\";\r\n        break;\r\n      default:\r\n        format = \"dd/MM/yyyy\";\r\n        break;\r\n    }\r\n    if (includeTime) {\r\n      format += \" hh:mm:ss\";\r\n    }\r\n    return format;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/helperService.ts","import { Injectable } from '@angular/core';\r\nimport { Http, ConnectionBackend, Request, RequestOptions, RequestOptionsArgs, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class HttpService extends Http {\r\n  constructor(backend: ConnectionBackend, defaultOptions: RequestOptions) {\r\n    super(backend, defaultOptions);\r\n  }\r\n\r\n  request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\r\n    return super.request(url, options);\r\n  }\r\n\r\n  get(url: string, options?: RequestOptionsArgs): Observable<Response> {\r\n    options = options || {};\r\n    // options.search = new URLSearchParams();\r\n    // options.search.set('timestamp', (new Date()).getTime().toString());\r\n    return super.get(url, options);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/httpService.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { HttpService } from \"app/shared/common/services/httpService\";\r\nimport { Constants } from \"app/shared/common/constants\";\r\nimport { TranslationResource } from \"app/shared/common/services/localization/translationResource\";\r\n\r\nconst moment = require('moment/moment');\r\n\r\n@Injectable()\r\nexport class TranslateService {\r\n  public currentLanguage: string;\r\n  public modulePrefix: string;\r\n\r\n  /**\r\n   * store translations for an module\r\n   */\r\n  moduleTranslations: any = [];\r\n\r\n  /**\r\n   * Store translation at application level\r\n   */\r\n  applicationTranslations: TranslationResource[];\r\n\r\n  /**\r\n   * Store translation for login page\r\n   */\r\n  anonymousTranslations: TranslationResource[];\r\n\r\n  private errorMessage = '';\r\n  private localizationServiceUrl = Constants.serverUrl + 'api/Localization/';\r\n\r\n  constructor(private http: HttpService) {\r\n    this.setLanguage();\r\n  }\r\n\r\n  public setLanguage(): void {\r\n    // set current language\r\n    const lang = navigator.language;\r\n    if (lang) {\r\n      this.currentLanguage = lang;\r\n      //// set locale for moment js\r\n      moment.locale(lang);\r\n    } else {\r\n      this.currentLanguage = 'en-EN';\r\n      //// set locale for moment js\r\n      moment.locale(lang);\r\n    }\r\n\r\n    console.log(\"The language is: \" + lang);\r\n  }\r\n\r\n  formatToShortLocaleDate(datetime: Date) {\r\n    return moment(datetime).format('L');\r\n  }\r\n\r\n  generateFromNowOnString(date: Date): string {\r\n    if (date)\r\n      return moment(date).fromNow();\r\n    else\r\n      return '';\r\n  }\r\n\r\n  public setModulePrefix(modulePrefix: string): void {\r\n    this.modulePrefix = modulePrefix;\r\n  }\r\n\r\n\r\n  /**\r\n   * getModuleTranslation.\r\n   * @param keyName\r\n   * @returns {}\r\n   */\r\n  getModuleTranslation(keyName: string, params: Array<string> = null): string {\r\n    if (this.moduleTranslations) {\r\n      for (let i = 0; i < this.moduleTranslations.length; i++) {\r\n        const found = this.moduleTranslations[i].translations.filter(item => item.keyString === keyName);\r\n        if (found && found.length > 0) {\r\n          let keyValue = found[0].value;\r\n          // replace params with proper values\r\n          if (keyValue && params && params.length > 0) {\r\n            for (let k = 0; k < params.length; k++) {\r\n              keyValue = keyValue.replace('{' + k + '}', params[k]);\r\n            }\r\n          }\r\n          return keyValue;\r\n        }\r\n      }\r\n    }\r\n    return \"key not found\";\r\n  }\r\n\r\n  /**\r\n   * getApplicationTranslation\r\n   * @param keyName\r\n   * @returns {}\r\n   */\r\n  getApplicationTranslation(keyName: string, params: Array<string> = null): string {\r\n\r\n    if (this.applicationTranslations) {\r\n      const found = this.applicationTranslations.filter(item => item.keyString === keyName);\r\n      if (found && found.length > 0) {\r\n        let keyValue = found[0].value;\r\n        // replace params with proper values\r\n        if (keyValue && params && params.length > 0) {\r\n          for (let k = 0; k < params.length; k++) {\r\n            keyValue = keyValue.replace('{' + k + '}', params[k]);\r\n          }\r\n        }\r\n        return keyValue;\r\n      }\r\n    }\r\n    return \"key not found\";\r\n  }\r\n\r\n  /**\r\n   * getLoginTranslation\r\n   * @param keyName\r\n   * @returns {}\r\n   */\r\n  getAnonymousTranslation(keyName: string): string {\r\n    if (this.anonymousTranslations) {\r\n      const found = this.anonymousTranslations.filter(item => item.keyString === keyName);\r\n      if (found && found.length > 0) {\r\n        return found[0].value;\r\n      }\r\n    }\r\n    return \"key not found\";\r\n  }\r\n\r\n  /**\r\n   * get translation resources for a module, translations, can be re-used in all other submodules.\r\n   * If if modules translations are already loaded\r\n   * @param modulePrefix\r\n   * @param language\r\n   * @returns {}\r\n   */\r\n  getModuleTranslations(language: string, modulePrefix: string): Observable<any> {\r\n    const getModuleTranslationsUrl = this.localizationServiceUrl +\r\n      'getModuleTranslations/' +\r\n      language +\r\n      \"/\" +\r\n      modulePrefix +\r\n      \"/\";\r\n    return this.http.get(getModuleTranslationsUrl)\r\n      .map((res: Response) => res.json());\r\n    // .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n   * Get application translations. Generic translations used in all modules\r\n   * @param language\r\n   * @returns {}\r\n   */\r\n  getApplicationTranslations(language: string): Observable<any> {\r\n    const getGenericTranslationsUrl = this.localizationServiceUrl +\r\n      'getApplicationTranslations/' +\r\n      language +\r\n      \"/\";\r\n    return this.http.get(getGenericTranslationsUrl)\r\n      .map((res: Response) => res.json());\r\n    //  .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n      * Get application translations. Generic translations used in all modules\r\n      * @param language\r\n      * @returns {}\r\n      */\r\n  getAnonymousTranslations(language: string): Observable<any> {\r\n    const getAnonymousTranslationsUrl = this.localizationServiceUrl +\r\n      'getAnonymousTranslations/' +\r\n      language +\r\n      \"/\";\r\n    return this.http.get(getAnonymousTranslationsUrl)\r\n      .map((res: Response) => res.json());\r\n    // .catch(this.errorHandler.throwError);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/localization/translate.service.ts","import { Injectable } from '@angular/core';\r\nimport { ComponentStateType } from \"app/shared/common/helper/component-state-type\";\r\n\r\ndeclare const $: any;\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n\r\n\r\n  /**\r\n   * Show notification\r\n   * @param message  notification message\r\n   * @param notificationType type: allowed types ['', 'info', 'success', 'warning', 'danger', 'rose', 'primary']\r\n   * @param horizontalPosition vertical position, allowed: 'left', 'center','right'\r\n   * @param verticalPosition horizontal position, allowed: 'bottom', 'top'\r\n   */\r\n  show(message: string, notificationType: string, horizontalPosition: any, verticalPosition: any) {\r\n    const type = ['', 'info', 'success', 'warning', 'danger', 'rose', 'primary'];\r\n\r\n    const color = Math.floor((Math.random() * 6) + 1);\r\n\r\n    $.notify({\r\n      icon: 'notifications',\r\n      message: message\r\n    }, {\r\n        type: notificationType,\r\n        timer: 3000,\r\n        placement: {\r\n          from: verticalPosition,\r\n          align: horizontalPosition\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * show loading\r\n   * @param message\r\n   * @param timer  number of seconds to load\r\n   */\r\n  showLoading(timer = 1, message = 'Loading') {\r\n    if (timer <= 1) {\r\n      const notify = $.notify(message, {\r\n        type: 'info',\r\n        allow_dismiss: false,\r\n        showProgressbar: true,\r\n        delay: 100,\r\n        timer: timer * 1000\r\n      });\r\n    } else {\r\n      const notify = $.notify(message, {\r\n        type: 'info',\r\n        allow_dismiss: false,\r\n        showProgressbar: true,\r\n      });\r\n    }\r\n\r\n\r\n    setTimeout(function () {\r\n    }, timer * 1000);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/notification.service.ts","export class PagerService {\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\n        // calculate total pages\n        let totalPages = Math.ceil(totalItems / pageSize);\n\n        let startPage: number, endPage: number;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        let startIndex = (currentPage - 1) * pageSize;\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n       // let pages = _.range(startPage, endPage + 1);\n        let pages = [];\n        for (let i = startPage; i < endPage + 1; i++) {\n            pages.push(i);\n        }\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/pager.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Headers, Http, Response, RequestOptions } from \"@angular/http\";\r\nimport { HttpService } from \"app/shared/common/services/httpService\";\r\nimport { Constants } from \"app/shared/common/constants\";\r\nimport { GlobalErrorHandler } from \"app/shared/common/services/globalErrorHandler\";\r\nimport { FacilityParameterModel } from \"app/shared/common/models/parameter/facility-parameter-model\";\r\nimport { TruckParameterModel } from \"app/shared/common/models/parameter/truck-parameter-model\";\r\nimport { RequirementParameterModel } from \"app/shared/common/models/parameter/requirement-parameter-model\";\r\nimport { FacilityEntityModel } from \"app/shared/common/models/entity/facility-entity-model\";\r\nimport { RequirementEntityModel } from \"app/shared/common/models/entity/requirement-entity-model\";\r\nimport { TruckEntityModel } from \"app/shared/common/models/entity/truck-entity-model\";\r\nimport { PackTypeParameterModel } from \"app/shared/common/models/parameter/pack-type-parameter-model\";\r\n\r\n@Injectable()\r\nexport class ParametersDataService {\r\n  private serviceUrl = Constants.serverUrl + \"api/ParametersData/\";\r\n\r\n  constructor(\r\n    public http: HttpService,\r\n    private errorHandler: GlobalErrorHandler\r\n  ) { }\r\n\r\n  /**\r\n   * getFacilities\r\n   * @param language\r\n   */\r\n  getAddressRequirementsParameters(\r\n    language: string\r\n  ): Observable<FacilityParameterModel[]> {\r\n    return this.http\r\n      .get(\r\n      this.serviceUrl + \"getAddressRequirementsParameters\" + \"/\" + language\r\n      )\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n   * getFacilities\r\n   * @param language\r\n   */\r\n  getFacilities(language: string): Observable<FacilityParameterModel[]> {\r\n    return this.http\r\n      .get(this.serviceUrl + \"getFacilities\" + \"/\" + language)\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n   * getTruks\r\n   * @param language\r\n   */\r\n  getTruks(language: string): Observable<TruckParameterModel[]> {\r\n    return this.http\r\n      .get(this.serviceUrl + \"getTrucks\" + \"/\" + language)\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n   * getRequirements\r\n   * @param language\r\n   */\r\n  getRequirements(language: string): Observable<RequirementParameterModel[]> {\r\n    return this.http\r\n      .get(this.serviceUrl + \"getRequirements\" + \"/\" + language)\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n * getTruks\r\n * @param language\r\n */\r\n  getPackTypes(language: string): Observable<PackTypeParameterModel[]> {\r\n    return this.http\r\n      .get(this.serviceUrl + \"getPackTypes\" + \"/\" + language)\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n * Save pack type\r\n * @param language\r\n */\r\n  savePackType(model: PackTypeParameterModel, language: string) {\r\n    const headers = new Headers({ \"Content-Type\": \"application/json\" });\r\n    const data = JSON.stringify(model);\r\n\r\n    return this.http\r\n      .post(this.serviceUrl + \"savePackType/\" + language, data, { headers })\r\n      .map(response => response.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n\r\n  /**\r\n   * Delete packtypes\r\n   * @param shipmentId\r\n   * @param customerId\r\n   */\r\n  deletePackType(packtypeId: number, customerId: number) {\r\n    return this.http\r\n      .delete(\r\n      this.serviceUrl +\r\n      \"deletePackType/\" +\r\n      packtypeId +\r\n      \"/\" +\r\n      customerId)\r\n      .map(response => response.json());\r\n  }\r\n\r\n\r\n  /**\r\n   * update component model with facilities\r\n   * @param entityId\r\n   * @param parametersList\r\n   * @param updatedEntitiesList\r\n   */\r\n  generateFacilityEntitiesList(\r\n    entityId: number,\r\n    parametersList: FacilityParameterModel[],\r\n    updatedEntitiesList: FacilityEntityModel[]\r\n  ): FacilityEntityModel[] {\r\n    if (updatedEntitiesList == null)\r\n      updatedEntitiesList = new Array<FacilityEntityModel>();\r\n    ///// remove items from updated that are no longer in facility params list\r\n    updatedEntitiesList = updatedEntitiesList.filter(\r\n      item =>\r\n        parametersList.filter(paramitem => paramitem.id === item.facilityId)\r\n          .length > 0\r\n    );\r\n\r\n    for (let i = 0; i < parametersList.length; i++) {\r\n      const paramModel = updatedEntitiesList.find(\r\n        item => item.facilityId === parametersList[i].id\r\n      );\r\n      let modelItem = null;\r\n      if (paramModel) {\r\n        modelItem = paramModel;\r\n        (modelItem.id = entityId < 0 ? -1 : modelItem.id),\r\n          (modelItem.description = parametersList[i].description);\r\n        modelItem.iconName = parametersList[i].iconName;\r\n      } else {\r\n        modelItem = new FacilityEntityModel();\r\n        modelItem.id = -1;\r\n        modelItem.addressId = entityId;\r\n        modelItem.facilityId = parametersList[i].id;\r\n        modelItem.active = entityId < 0 ? true : false;\r\n        modelItem.description = parametersList[i].description;\r\n        modelItem.iconName = parametersList[i].iconName;\r\n        updatedEntitiesList.push(modelItem);\r\n      }\r\n    }\r\n    return updatedEntitiesList;\r\n  }\r\n\r\n  /**\r\n * update component model with requirments\r\n * @param entityId\r\n * @param parametersList\r\n * @param updatedEntitiesList\r\n */\r\n  generateRequirementsEntitiesList(\r\n    entityId: number,\r\n    parametersList: RequirementParameterModel[],\r\n    updatedEntitiesList: RequirementEntityModel[]\r\n  ): RequirementEntityModel[] {\r\n    if (updatedEntitiesList == null)\r\n      updatedEntitiesList = new Array<RequirementEntityModel>();\r\n    ///// remove facilities from entities that are no longer in facility params list\r\n    updatedEntitiesList = updatedEntitiesList.filter(\r\n      item =>\r\n        parametersList.filter(paramitem => paramitem.id === item.requirementId)\r\n          .length > 0\r\n    );\r\n\r\n    // update component model requirements\r\n    for (let i = 0; i < parametersList.length; i++) {\r\n      const paramModel = updatedEntitiesList.find(\r\n        item => item.requirementId === parametersList[i].id\r\n      );\r\n      let modelItem = null;\r\n      if (paramModel) {\r\n        modelItem = paramModel;\r\n        (modelItem.id = entityId < 0 ? -1 : modelItem.id),\r\n          (modelItem.description = parametersList[i].description);\r\n        modelItem.iconName = parametersList[i].iconName;\r\n      } else {\r\n        modelItem = new RequirementEntityModel();\r\n        modelItem.id = -1;\r\n        modelItem.entityId = entityId;\r\n        modelItem.requirementId = parametersList[i].id;\r\n        modelItem.active = false;\r\n        modelItem.description = parametersList[i].description;\r\n        modelItem.iconName = parametersList[i].iconName;\r\n        updatedEntitiesList.push(modelItem);\r\n      }\r\n    }\r\n    return updatedEntitiesList;\r\n  }\r\n\r\n  /**\r\n * update component model with truks\r\n * @param entityId\r\n * @param parametersList\r\n * @param updatedEntitiesList\r\n */\r\n  generateTruksEntitiesList(\r\n    entityId: number,\r\n    parametersList: TruckParameterModel[],\r\n    updatedEntitiesList: TruckEntityModel[]\r\n  ): TruckEntityModel[] {\r\n    if (updatedEntitiesList == null)\r\n      updatedEntitiesList = new Array<TruckEntityModel>();\r\n    ///// remove facilities from entities that are no longer in facility params list\r\n    updatedEntitiesList = updatedEntitiesList.filter(\r\n      item =>\r\n        parametersList.filter(paramitem => paramitem.id === item.truckId)\r\n          .length > 0\r\n    );\r\n    // update component model trucks\r\n    for (let i = 0; i < parametersList.length; i++) {\r\n      const paramModel = updatedEntitiesList.find(\r\n        item => item.truckId === parametersList[i].id\r\n      );\r\n      let modelItem = null;\r\n      if (paramModel) {\r\n        modelItem = paramModel;\r\n        (modelItem.id = entityId < 0 ? -1 : modelItem.id),\r\n          (modelItem.description = parametersList[i].description);\r\n        modelItem.iconName = parametersList[i].iconName;\r\n      } else {\r\n        modelItem = new TruckParameterModel();\r\n        modelItem.id = -1;\r\n        modelItem.addressId = entityId;\r\n        modelItem.truckId = parametersList[i].id;\r\n        modelItem.active = entityId < 0 ? true : false;\r\n        modelItem.description = parametersList[i].description;\r\n        modelItem.iconName = parametersList[i].iconName;\r\n        updatedEntitiesList.push(modelItem);\r\n      }\r\n    }\r\n    return updatedEntitiesList;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/common/services/parameters-data.service.ts","module.exports = \"<footer>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <nav class=\\\"pull-left\\\">\\r\\n            <ul>\\r\\n                <li>\\r\\n                    <a href=\\\"#\\\">\\r\\n                        Home\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"#\\\">\\r\\n                        Company\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"#\\\">\\r\\n                        Portfolio\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"#\\\">\\r\\n                       Blog\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </nav>\\r\\n        <p class=\\\"copyright pull-right\\\">\\r\\n            &copy; {{test | date: 'yyyy'}} <a href=\\\"\\\">TransApp</a>\\r\\n        </p>\\r\\n    </div>\\r\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/footer/footer.component.html\n// module id = ../../../../../src/app/shared/footer/footer.component.html\n// module chunks = main","import { Component, HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'footer-cmp',\r\n    templateUrl: 'footer.component.html'\r\n})\r\n\r\nexport class FooterComponent{\r\n    test : Date = new Date();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/footer/footer.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FooterComponent } from \"app/shared/footer/footer.component\";\r\n\r\n\r\n@NgModule({\r\n    imports: [ RouterModule, CommonModule ],\r\n    declarations: [ FooterComponent ],\r\n    exports: [ FooterComponent ]\r\n})\r\n\r\nexport class FooterModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/footer/footer.module.ts","module.exports = \"\\r\\n  <div class=\\\"content table-responsive\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <tbody>\\r\\n          <tr *ngFor=\\\"let row of data.dataRows\\\">\\r\\n            <!-- <td *ngFor=\\\"let cell of row\\\">{{ cell }}</td> -->\\r\\n            <td>\\r\\n                <div class=\\\"flag\\\">\\r\\n                    <img src=\\\"../../../assets/img/flags/{{row[0]}}.png\\\" alt=\\\"\\\">\\r\\n                </div>\\r\\n            </td>\\r\\n            <td>\\r\\n                {{row[1]}}\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n                {{row[2]}}\\r\\n            </td>\\r\\n            <td class=\\\"text-right\\\">\\r\\n                {{row[3]}}\\r\\n            </td>\\r\\n          </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/md/md-table/md-table.component.html\n// module id = ../../../../../src/app/shared/md/md-table/md-table.component.html\n// module chunks = main","import {Component, Input, ChangeDetectionStrategy} from '@angular/core';\r\n\r\nexport interface TableData {\r\n  headerRow: string[];\r\n  dataRows: string[][];\r\n}\r\n\r\n@Component({\r\n  selector: 'md-table',\r\n  templateUrl: './md-table.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MdTableComponent {\r\n  @Input()\r\n  public title: string;\r\n\r\n  @Input()\r\n  public subtitle: string;\r\n\r\n  @Input()\r\n  public cardClass: string;\r\n\r\n  @Input()\r\n  public data: TableData;\r\n\r\n  constructor() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/md/md-table/md-table.component.ts","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MdTableComponent } from \"app/shared/md/md-table/md-table.component\";\r\n\r\n\r\n\r\nexport interface DropdownLink {\r\n  title: string;\r\n  iconClass?: string;\r\n  routerLink?: string;\r\n}\r\n\r\nexport enum NavItemType {\r\n  Sidebar = 1, // Only ever shown on sidebar\r\n  NavbarLeft = 2, // Left-aligned icon-only link on navbar in desktop mode, shown above sidebar items on collapsed sidebar in mobile mode\r\n  NavbarRight = 3 // Right-aligned link on navbar in desktop mode, shown above sidebar items on collapsed sidebar in mobile mode\r\n}\r\n\r\nexport interface NavItem {\r\n  type: NavItemType;\r\n  title: string;\r\n  routerLink?: string;\r\n  iconClass?: string;\r\n  numNotifications?: number;\r\n  dropdownItems?: (DropdownLink | 'separator')[];\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [\r\n    MdTableComponent\r\n  ],\r\n  exports: [\r\n    MdTableComponent,\r\n  ]\r\n})\r\nexport class MdModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/md/md.module.ts","module.exports = \"<nav class=\\\"navbar navbar-transparent navbar-absolute\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"navbar-minimize\\\">\\r\\n            <button id=\\\"minimizeSidebar\\\" class=\\\"btn btn-round btn-white btn-fill btn-just-icon\\\">\\r\\n                <i class=\\\"material-icons visible-on-sidebar-regular\\\">more_vert</i>\\r\\n                <i class=\\\"material-icons visible-on-sidebar-mini\\\">view_list</i>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" href=\\\"{{getPath()}}\\\"> {{getTitle()}} </a>\\r\\n        </div>\\r\\n        <div class=\\\"collapse navbar-collapse\\\">\\r\\n            <div *ngIf=\\\"isMobileMenu()\\\">\\r\\n                <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                    <li>\\r\\n                        <a href=\\\"#pablo\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                            <i class=\\\"material-icons\\\">dashboard</i>\\r\\n                            <p class=\\\"hidden-lg hidden-md\\\">Dashboard</p>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li class=\\\"dropdown\\\">\\r\\n                        <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                            <i class=\\\"material-icons\\\">notifications</i>\\r\\n                            <span class=\\\"notification\\\">5</span>\\r\\n                            <p class=\\\"hidden-lg hidden-md\\\">\\r\\n                                Notifications\\r\\n                                <b class=\\\"caret\\\"></b>\\r\\n                            </p>\\r\\n                        </a>\\r\\n                        <ul class=\\\"dropdown-menu\\\">\\r\\n                            <li>\\r\\n                                <a href=\\\"#\\\">Mike John responded to your email</a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                                <a href=\\\"#\\\">You have 5 new tasks</a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                                <a href=\\\"#\\\">You're now friend with Andrew</a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                                <a href=\\\"#\\\">Another Notification</a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                                <a href=\\\"#\\\">Another One</a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a href=\\\"#pablo\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                            <i class=\\\"material-icons\\\">person</i>\\r\\n                            <p class=\\\"hidden-lg hidden-md\\\">Profile</p>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li class=\\\"separator hidden-lg hidden-md\\\"></li>\\r\\n                </ul>\\r\\n                <form class=\\\"navbar-form navbar-right\\\" role=\\\"search\\\">\\r\\n                    <div class=\\\"form-group form-search is-empty\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\r\\n                        <span class=\\\"material-input\\\"></span>\\r\\n                    </div>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                        <i class=\\\"material-icons\\\">search</i>\\r\\n                        <div class=\\\"ripple-container\\\"></div>\\r\\n                    </button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/navbar/navbar.component.html\n// module id = ../../../../../src/app/shared/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit, Renderer, ViewChild, ElementRef, Directive } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { ROUTES } from 'app/shared/sidebar/sidebar-routes.config';\r\nconst misc: any = {\r\n    navbar_menu_visible: 0,\r\n    active_collapse: true,\r\n    disabled_collapse_init: 0,\r\n};\r\n\r\ndeclare var $: any;\r\n@Component({\r\n    selector: 'app-navbar-cmp',\r\n    templateUrl: 'navbar.component.html'\r\n})\r\n\r\nexport class NavbarComponent implements OnInit {\r\n    private listTitles: any[];\r\n    location: Location;\r\n    private nativeElement: Node;\r\n    private toggleButton: any;\r\n    private sidebarVisible: boolean;\r\n\r\n    @ViewChild('app-navbar-cmp') button: any;\r\n\r\n    constructor(location: Location, private renderer: Renderer, private element: ElementRef) {\r\n        this.location = location;\r\n        this.nativeElement = element.nativeElement;\r\n        this.sidebarVisible = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.listTitles = ROUTES.filter(listTitle => listTitle);\r\n\r\n        const navbar: HTMLElement = this.element.nativeElement;\r\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\r\n        if ($('body').hasClass('sidebar-mini')) {\r\n            misc.sidebar_mini_active = true;\r\n        }\r\n        if ($('body').hasClass('hide-sidebar')) {\r\n            misc.hide_sidebar_active = true;\r\n        }\r\n        $('#minimizeSidebar').click(function() {\r\n            if (misc.sidebar_mini_active === true) {\r\n                $('body').removeClass('sidebar-mini');\r\n                misc.sidebar_mini_active = false;\r\n\r\n            } else {\r\n                setTimeout(function() {\r\n                    $('body').addClass('sidebar-mini');\r\n\r\n                    misc.sidebar_mini_active = true;\r\n                }, 300);\r\n            }\r\n\r\n            // we simulate the window Resize so the charts will get updated in realtime.\r\n            const simulateWindowResize = setInterval(function() {\r\n                window.dispatchEvent(new Event('resize'));\r\n            }, 180);\r\n\r\n            // we stop the simulation of Window Resize after the animations are completed\r\n            setTimeout(function() {\r\n                clearInterval(simulateWindowResize);\r\n            }, 1000);\r\n        });\r\n        $('#hideSidebar').click(function() {\r\n            if (misc.hide_sidebar_active === true) {\r\n                setTimeout(function() {\r\n                    $('body').removeClass('hide-sidebar');\r\n                    misc.hide_sidebar_active = false;\r\n                }, 300);\r\n                setTimeout(function () {\r\n                    $('.sidebar').removeClass('animation');\r\n                }, 600);\r\n                $('.sidebar').addClass('animation');\r\n\r\n            } else {\r\n                setTimeout(function() {\r\n                    $('body').addClass('hide-sidebar');\r\n                    // $('.sidebar').addClass('animation');\r\n                    misc.hide_sidebar_active = true;\r\n                }, 300);\r\n            }\r\n\r\n            // we simulate the window Resize so the charts will get updated in realtime.\r\n            const simulateWindowResize = setInterval(function() {\r\n                window.dispatchEvent(new Event('resize'));\r\n            }, 180);\r\n\r\n            // we stop the simulation of Window Resize after the animations are completed\r\n            setTimeout(function() {\r\n                clearInterval(simulateWindowResize);\r\n            }, 1000);\r\n        });\r\n    }\r\n    isMobileMenu() {\r\n        if ($(window).width() < 991) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    sidebarOpen() {\r\n        const toggleButton = this.toggleButton;\r\n        const body = document.getElementsByTagName('body')[0];\r\n        setTimeout(function(){\r\n            toggleButton.classList.add('toggled');\r\n        }, 500);\r\n        body.classList.add('nav-open');\r\n\r\n        this.sidebarVisible = true;\r\n    };\r\n    sidebarClose() {\r\n        const body = document.getElementsByTagName('body')[0];\r\n        this.toggleButton.classList.remove('toggled');\r\n        this.sidebarVisible = false;\r\n        body.classList.remove('nav-open');\r\n    };\r\n    sidebarToggle() {\r\n        // const toggleButton = this.toggleButton;\r\n        // const body = document.getElementsByTagName('body')[0];\r\n        if (this.sidebarVisible === false) {\r\n            this.sidebarOpen();\r\n        } else {\r\n            this.sidebarClose();\r\n        }\r\n    };\r\n\r\n    getTitle() {\r\n        let titlee: any = this.location.prepareExternalUrl(this.location.path());\r\n        for (let i = 0; i < this.listTitles.length; i++) {\r\n            if (this.listTitles[i].type === \"link\" && this.listTitles[i].path === titlee) {\r\n                return this.listTitles[i].title;\r\n            } else if (this.listTitles[i].type === \"sub\") {\r\n                for (let j = 0; j < this.listTitles[i].children.length; j++) {\r\n                    let subtitle = this.listTitles[i].path + '/' + this.listTitles[i].children[j].path;\r\n                    if (subtitle === titlee) {\r\n                        return this.listTitles[i].children[j].title;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return 'Dashboard';\r\n    }\r\n    getPath() {\r\n        return this.location.prepareExternalUrl(this.location.path());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/navbar/navbar.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NavbarComponent } from \"app/shared/navbar/navbar.component\";\r\n\r\n\r\n@NgModule({\r\n    imports: [ RouterModule, CommonModule ],\r\n    declarations: [ NavbarComponent ],\r\n    exports: [ NavbarComponent ]\r\n})\r\n\r\nexport class NavbarModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/navbar/navbar.module.ts","\r\n\r\nimport { RouteInfo } from \"app/shared/sidebar/sidebar.metadata\";\r\n\r\n//Menu Items\r\nexport const ROUTES: RouteInfo[] = [\r\n  { path: '/address-add', title: 'Create Address', type: 'link', icontype: 'add_location' },\r\n  { path: '/address-overview', title: 'Overview Address', type: 'link', icontype: 'add_location' },\r\n  { path: '/shipment-add', title: 'Create Shipment', type: 'link', icontype: 'local_shipping' },\r\n  { path: '/shipment-overview', title: 'Overview Shipment', type: 'link', icontype: 'local_shipping' }\r\n  /*\r\n  {\r\n  path: '/components',\r\n  title: 'Components',\r\n  type: 'sub',\r\n  icontype: 'apps',\r\n  collapse: 'components',\r\n  children: [\r\n    { path: 'buttons', title: 'Buttons', ab: 'B' },\r\n    { path: 'grid', title: 'Grid System', ab: 'GS' },\r\n    { path: 'panels', title: 'Panels', ab: 'P' },\r\n    { path: 'sweet-alert', title: 'Sweet Alert', ab: 'SA' },\r\n    { path: 'notifications', title: 'Notifications', ab: 'N' },\r\n    { path: 'icons', title: 'Icons', ab: 'I' },\r\n    { path: 'typography', title: 'Typography', ab: 'T' }\r\n  ]\r\n}, {\r\n  path: '/forms',\r\n  title: 'Forms',\r\n  type: 'sub',\r\n  icontype: 'content_paste',\r\n  collapse: 'forms',\r\n  children: [\r\n    { path: 'regular', title: 'Regular Forms', ab: 'RF' },\r\n    { path: 'extended', title: 'Extended Forms', ab: 'EF' },\r\n    { path: 'validation', title: 'Validation Forms', ab: 'VF' },\r\n    { path: 'wizard', title: 'Wizard', ab: 'W' }\r\n  ]\r\n}, {\r\n  path: '/tables',\r\n  title: 'Tables',\r\n  type: 'sub',\r\n  icontype: 'grid_on',\r\n  collapse: 'tables',\r\n  children: [\r\n    { path: 'regular', title: 'Regular Tables', ab: 'RT' },\r\n    { path: 'extended', title: 'Extended Tables', ab: 'ET' },\r\n    { path: 'datatables.net', title: 'Datatables.net', ab: 'DT' }\r\n  ]\r\n}, {\r\n  path: '/maps',\r\n  title: 'Maps',\r\n  type: 'sub',\r\n  icontype: 'place',\r\n  collapse: 'maps',\r\n  children: [\r\n    { path: 'google', title: 'Google Maps', ab: 'GM' },\r\n    { path: 'fullscreen', title: 'Full Screen Map', ab: 'FSM' },\r\n    { path: 'vector', title: 'Vector Map', ab: 'VM' }\r\n  ]\r\n}, {\r\n  path: '/widgets',\r\n  title: 'Widgets',\r\n  type: 'link',\r\n  icontype: 'widgets'\r\n\r\n}, {\r\n  path: '/charts',\r\n  title: 'Charts',\r\n  type: 'link',\r\n  icontype: 'timeline'\r\n\r\n}, {\r\n  path: '/calendar',\r\n  title: 'Calendar',\r\n  type: 'link',\r\n  icontype: 'date_range'\r\n}, {\r\n  path: '/pages',\r\n  title: 'Pages',\r\n  type: 'sub',\r\n  icontype: 'image',\r\n  collapse: 'pages',\r\n  children: [\r\n    { path: 'pricing', title: 'Pricing', ab: 'P' },\r\n    { path: 'timeline', title: 'Timeline Page', ab: 'TP' },\r\n    { path: 'login', title: 'Login Page', ab: 'LP' },\r\n    { path: 'register', title: 'Register Page', ab: 'RP' },\r\n    { path: 'lock', title: 'Lock Screen Page', ab: 'LSP' },\r\n    { path: 'user', title: 'User Page', ab: 'UP' }\r\n  ]\r\n} */\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/sidebar/sidebar-routes.config.ts","module.exports = \"<div class=\\\"logo\\\">\\r\\n    <div class=\\\"logo-normal\\\">\\r\\n        <a href=\\\"#\\\" class=\\\"simple-text\\\">\\r\\n                   Transapp\\r\\n                </a>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"logo-img\\\">\\r\\n        <img src=\\\"/assets/img/angular2-logo-white.png\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"sidebar-wrapper\\\">\\r\\n    <div class=\\\"user\\\">\\r\\n        <div class=\\\"photo\\\">\\r\\n            <img src=\\\"../assets/img/faces/marc.jpg\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"info\\\">\\r\\n            <a data-toggle=\\\"collapse\\\" href=\\\"#collapseExample\\\" class=\\\"collapsed\\\">\\r\\n                <span>\\r\\n                           {{currentUser.login}}\\r\\n                            <b class=\\\"caret\\\"></b>\\r\\n                        </span>\\r\\n            </a>\\r\\n            <div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\r\\n                <ul class=\\\"nav\\\">\\r\\n                    <li>\\r\\n                        <a href=\\\"javascript:void(0)\\\">\\r\\n                            <span class=\\\"sidebar-mini\\\">MP</span>\\r\\n                            <span class=\\\"sidebar-normal\\\">My Profile</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a href=\\\"javascript:void(0)\\\">\\r\\n                            <span class=\\\"sidebar-mini\\\">EP</span>\\r\\n                            <span class=\\\"sidebar-normal\\\">Edit Profile</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a href=\\\"javascript:void(0)\\\">\\r\\n                            <span class=\\\"sidebar-mini\\\">S</span>\\r\\n                            <span class=\\\"sidebar-normal\\\">Settings</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a href=\\\"javascript:void(0)\\\">\\r\\n                            <span class=\\\"sidebar-mini\\\">S</span>\\r\\n                            <span class=\\\"sidebar-normal\\\" (click)=\\\"onClickSignOut()\\\">Sign out</span>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"isMobileMenu()\\\">\\r\\n        <form class=\\\"navbar-form navbar-right\\\" role=\\\"search\\\">\\r\\n            <div class=\\\"form-group form-search is-empty\\\">\\r\\n                <input class=\\\"form-control\\\" placeholder=\\\"Search\\\" type=\\\"text\\\">\\r\\n                <span class=\\\"material-input\\\"></span>\\r\\n                <span class=\\\"material-input\\\"></span>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-white btn-round btn-just-icon\\\" type=\\\"submit\\\">\\r\\n                <i class=\\\"material-icons\\\">search</i>\\r\\n                <div class=\\\"ripple-container\\\"></div>\\r\\n            </button>\\r\\n        </form>\\r\\n        <ul class=\\\"nav nav-mobile-menu\\\">\\r\\n            <li class=\\\"\\\">\\r\\n                <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#pablo\\\" aria-expanded=\\\"false\\\">\\r\\n                    <i class=\\\"material-icons\\\">dashboard</i>\\r\\n                    <p class=\\\"hidden-lg hidden-md\\\">Dashboard</p>\\r\\n                    <div class=\\\"ripple-container\\\"></div>\\r\\n                </a>\\r\\n            </li>\\r\\n            <li class=\\\"dropdown\\\">\\r\\n                <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" aria-expanded=\\\"false\\\">\\r\\n                    <i class=\\\"material-icons\\\">notifications</i>\\r\\n                    <span class=\\\"notification\\\">5</span>\\r\\n                    <p class=\\\"hidden-lg hidden-md\\\">\\r\\n                        Notifications\\r\\n                        <b class=\\\"caret\\\"></b>\\r\\n                    </p>\\r\\n                    <div class=\\\"ripple-container\\\"></div>\\r\\n                </a>\\r\\n                <ul class=\\\"dropdown-menu\\\">\\r\\n                    <li>\\r\\n                        <a href=\\\"#\\\">Mike John responded to your email</a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a href=\\\"#\\\">You have 5 new tasks</a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a href=\\\"#\\\">You're now friend with Andrew</a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a href=\\\"#\\\">Another Notification</a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a href=\\\"#\\\">Another One</a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </li>\\r\\n            <li class=\\\"\\\">\\r\\n                <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#pablo\\\" aria-expanded=\\\"false\\\">\\r\\n                    <i class=\\\"material-icons\\\">person</i>\\r\\n                    <p class=\\\"hidden-lg hidden-md\\\">Profile</p>\\r\\n                    <div class=\\\"ripple-container\\\"></div>\\r\\n                </a>\\r\\n            </li>\\r\\n            <li class=\\\"separator hidden-lg hidden-md\\\"></li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\\\"nav-container\\\">\\r\\n        <ul class=\\\"nav\\\">\\r\\n            <li routerLinkActive=\\\"active\\\" *ngFor=\\\"let menuitem of menuItems\\\">\\r\\n                <!--If is a single link-->\\r\\n                <a [routerLink]=\\\"[menuitem.path]\\\" *ngIf=\\\"menuitem.type === 'link'\\\" (click)=\\\"scroll()\\\">\\r\\n                    <i class=\\\"material-icons\\\">{{menuitem.icontype}}</i>\\r\\n                    <p>{{menuitem.title}}</p>\\r\\n                </a>\\r\\n                <!--If it have a submenu-->\\r\\n                <a data-toggle=\\\"collapse\\\" href=\\\"#{{menuitem.collapse}}\\\" *ngIf=\\\"menuitem.type === 'sub'\\\" (click)=\\\"updatePS()\\\">\\r\\n                    <i class=\\\"material-icons\\\">{{menuitem.icontype}}</i>\\r\\n                    <p>{{menuitem.title}}<b class=\\\"caret\\\"></b></p>\\r\\n                </a>\\r\\n\\r\\n                <!--Display the submenu items-->\\r\\n                <div id=\\\"{{menuitem.collapse}}\\\" class=\\\"collapse\\\" *ngIf=\\\"menuitem.type === 'sub'\\\">\\r\\n                    <ul class=\\\"nav\\\">\\r\\n                        <li routerLinkActive=\\\"active\\\" *ngFor=\\\"let childitem of menuitem.children\\\">\\r\\n                            <a [routerLink]=\\\"[menuitem.path, childitem.path]\\\">\\r\\n                                <span class=\\\"sidebar-mini\\\">{{childitem.ab}}</span>\\r\\n                                <span class=\\\"sidebar-normal\\\">{{childitem.title}}</span>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </li>\\r\\n\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/sidebar/sidebar.component.html\n// module id = ../../../../../src/app/shared/sidebar/sidebar.component.html\n// module chunks = main","import { Component, OnInit, AfterViewInit, AfterViewChecked, AfterContentInit } from '@angular/core';\r\nimport { AuthenticationService } from \"app/authentication/services/authentication.service\";\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApplicationUser } from 'app/authentication/viewmodels/application-user';\r\nimport { HelperService } from 'app/shared/common/services/helperService';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport { ROUTES } from 'app/shared/sidebar/sidebar-routes.config';\r\n\r\ndeclare var $: any;\r\nvar sidebarTimer;\r\n\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'sidebar-cmp',\r\n  templateUrl: 'sidebar.component.html',\r\n})\r\n\r\n\r\nexport class SidebarComponent implements OnInit {\r\n  public menuItems: any[];\r\n\r\n  currentUser: ApplicationUser;\r\n\r\n  constructor(private authenticationService: AuthenticationService, private router: Router, private helperService: HelperService) {\r\n\r\n  }\r\n  isNotMobileMenu() {\r\n    if ($(window).width() > 991) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isMobileMenu() {\r\n    if ($(window).width() > 991) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  scroll() {\r\n    this.helperService.scrollOnTop();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.authenticationService.getCurrentUser();\r\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\r\n  }\r\n  updatePS(): void {\r\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n      const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\r\n      let ps = new PerfectScrollbar(elemSidebar, { wheelSpeed: 2, suppressScrollX: true });\r\n    }\r\n  }\r\n  isMac(): boolean {\r\n    let bool = false;\r\n    if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n      bool = true;\r\n    }\r\n    return bool;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/sidebar/sidebar.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SidebarComponent } from \"app/shared/sidebar/sidebar.component\";\r\n\r\n\r\n@NgModule({\r\n    imports: [ RouterModule, CommonModule ],\r\n    declarations: [ SidebarComponent ],\r\n    exports: [ SidebarComponent ]\r\n})\r\n\r\nexport class SidebarModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shared/sidebar/sidebar.module.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"rose\\\">\\r\\n                <i class=\\\"material-icons\\\">mail_outline</i>\\r\\n            </div>\\r\\n            <div class=\\\"card-content\\\">\\r\\n                <h4 class=\\\"card-title\\\">Add new pack type</h4>\\r\\n                <form #formPackType=\\\"ngForm\\\" novalidate class=\\\"form-horizontal\\\" novalidate (ngSubmit)=\\\"save(formPackType.value, formPackType.valid)\\\">\\r\\n                    <div [ngClass]=\\\" 'form-group label-floating ' + ((!dialogModel.description|| dialogModel.description.length <=0 ) && formPackType.submitted ? ' has-error' : '') \\\">\\r\\n                        <label class=\\\"control-label\\\">Name</label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"dialogModel.description\\\" name=\\\"packtypelength\\\" required>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group label-floating\\\">\\r\\n                        <label class=\\\"control-label\\\">Length</label>\\r\\n                        <input class=\\\"form-control \\\" type=\\\"number\\\" min=\\\"1\\\" [(ngModel)]=\\\"dialogModel.packLength\\\" name=\\\"packtypelength\\\" number=\\\"true\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group label-floating\\\">\\r\\n                        <label class=\\\"control-label\\\">Width</label>\\r\\n                        <input class=\\\"form-control \\\" type=\\\"number\\\" min=\\\"1\\\" [(ngModel)]=\\\"dialogModel.packWidth \\\" name=\\\"packtypewidth\\\" number=\\\"true\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group label-floating\\\">\\r\\n                        <label class=\\\"control-label\\\">Height</label>\\r\\n                        <input class=\\\"form-control \\\" type=\\\"number\\\" min=\\\"1\\\" [(ngModel)]=\\\"dialogModel.packHeight \\\" name=\\\"packtypeheight\\\" number=\\\"true \\\">\\r\\n                    </div>\\r\\n\\r\\n                    <button mat-button class=\\\"btn btn-fill btn-rose\\\" type=\\\"submit\\\" tabindex=\\\"2\\\">Add</button>\\r\\n                    <button mat-button class=\\\"btn btn-fill btn-rose\\\" (click)=\\\"onCancelClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/packtype-save.component.html\n// module id = ../../../../../src/app/shipment/components/packtype-save.component.html\n// module chunks = main","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material\";\r\nimport { PackTypeParameterModel } from \"app/shared/common/models/parameter/pack-type-parameter-model\";\r\nimport { ParametersDataService } from \"app/shared/common/services/parameters-data.service\";\r\nimport { TranslateService } from \"app/shared/common/services/localization/translate.service\";\r\nimport { GlobalErrorHandler } from \"app/shared/common/services/globalErrorHandler\";\r\nimport { NotificationService } from \"app/shared/common/services/notification.service\";\r\nimport { AuthenticationService } from \"app/authentication/services/authentication.service\";\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'app-packtype-save.component',\r\n  templateUrl: './packtype-save.component.html'\r\n})\r\nexport class PackTypeSaveDialog implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<PackTypeSaveDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public dialogModel: PackTypeParameterModel,\r\n    private parametersDataService: ParametersDataService,\r\n    private authenticationService: AuthenticationService,\r\n    private translateService: TranslateService,\r\n    private errorHandler: GlobalErrorHandler,\r\n    private notificationService: NotificationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dialogModel = new PackTypeParameterModel();\r\n    this.dialogModel.id = -1;\r\n    this.dialogModel.customerId = this.authenticationService.getCurrentUser().customerId;\r\n  }\r\n\r\n  onCancelClick(): void {\r\n    this.dialogRef.close(null);\r\n  }\r\n\r\n  save(model: PackTypeParameterModel, isValid: boolean) {\r\n    debugger;\r\n    if (isValid) {\r\n      this.parametersDataService.savePackType(this.dialogModel, this.translateService.currentLanguage).subscribe(packtypeid => {\r\n        if (packtypeid > 0) {\r\n          this.dialogModel.id = packtypeid;\r\n\r\n          this.notificationService.show('Packtype created', 'success', 'center', 'top');\r\n\r\n          this.dialogRef.close(this.dialogModel);\r\n        }\r\n      }, error => {\r\n        this.errorHandler.handleError(error);\r\n      });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/packtype-save.component.ts","module.exports = \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div *ngFor=\\\"let shipmentFilter of shipmentFilters; let rowindex = index\\\" (click)=\\\"onFilterClick(shipmentFilter)\\\" [ngClass]=\\\"'col-lg-3 col-md-6 col-sm-6  filterpanels ' + (shipmentFilter.statusType == selectedShipmentFilter.statusType ? 'active':'')\\\">\\r\\n                <div class=\\\"card card-stats\\\">\\r\\n                    <div class=\\\"card-header\\\" [attr.data-background-color]=\\\"getFilterColor(shipmentFilter.statusType)\\\">\\r\\n                        <i class=\\\"material-icons\\\">{{getFilterIcon(shipmentFilter.statusType)}}</i>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-content\\\">\\r\\n                        <p class=\\\"category\\\">{{shipmentFilter.description}}</p>\\r\\n                        <h3 class=\\\"card-title\\\">{{shipmentFilter.statusType == 2 ? (shipmentFilter.inPending ? shipmentFilter.pending: shipmentFilter.declined) : shipmentFilter.amount}}</h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-footer\\\">\\r\\n                        <div class=\\\"stats\\\">\\r\\n                            <i class=\\\"material-icons\\\">date_range</i> Last updated {{translateService.generateFromNowOnString(shipmentFilter.lastDateTime)}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div style=\\\"padding-left:25px\\\" *ngIf=\\\"selectedShipmentFilter && selectedShipmentFilter.statusType === 2 && shipmentFilter.statusType === 2\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"onAssignedSubfilterClick(true, shipmentFilter)\\\">\\r\\n                        <span *ngIf=\\\"selectedShipmentFilter.inPending\\\" class=\\\"btn-label\\\">\\r\\n                            <i class=\\\"material-icons\\\">check</i>\\r\\n                        </span>\\r\\n                        Pending</button>\\r\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"onAssignedSubfilterClick(false, shipmentFilter)\\\">\\r\\n                      <span *ngIf=\\\"!selectedShipmentFilter.inPending\\\" class=\\\"btn-label\\\">\\r\\n                        <i class=\\\"material-icons\\\">check</i>\\r\\n                    </span>Declined</button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <button *ngIf=\\\"selectedShipmentFilter && selectedShipmentFilter.statusType === 0\\\" class=\\\"btn btn-info\\\" [routerLink]=\\\"['/shipment-add']\\\">(+) Create new shipment</button>\\r\\n\\r\\n        <div *ngIf=\\\"showLoader\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-5\\\"></div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n                <br>\\r\\n                <mat-spinner></mat-spinner>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-5\\\"></div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"!showLoader\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div *ngIf=\\\"componentModel && componentModel.length > 0\\\" class=\\\"card-content table-full-width\\\">\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <table class=\\\"table table-hover\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th style=\\\"width: 10%;\\\" *ngIf=\\\"selectedShipmentFilter.isPickupDateColVisible\\\">Pickup date</th>\\r\\n                                        <th style=\\\"width: 10%;\\\" *ngIf=\\\"selectedShipmentFilter.isDeliveryDateColVisible\\\">Delivery date</th>\\r\\n                                        <th *ngIf=\\\"selectedShipmentFilter.isFromColVisible\\\">From</th>\\r\\n                                        <th *ngIf=\\\"selectedShipmentFilter.isDestinationColVisible\\\">Destination</th>\\r\\n                                        <th style=\\\"width: 15%;\\\" *ngIf=\\\"selectedShipmentFilter.isQuatityColVisible\\\">Quantity</th>\\r\\n                                        <th style=\\\"width: 10%;\\\" *ngIf=\\\"selectedShipmentFilter.isTransporterColVisible\\\">Transporter</th>\\r\\n                                        <th style=\\\"width: 10%;\\\" *ngIf=\\\"selectedShipmentFilter.isPriceColVisible\\\">Price</th>\\r\\n                                        <th style=\\\"width: 10%;\\\" *ngIf=\\\"selectedShipmentFilter.isOfferCountColVisible\\\">Offer count</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n\\r\\n                                    <ng-container *ngFor=\\\"let shipmentRow of componentModel; let rowindex = index\\\">\\r\\n                                        <tr id=\\\"shipment_row_{{rowindex}}\\\" (click)=\\\"onClickShowActions(shipmentRow, rowindex)\\\" [ngClass]=\\\"(shipmentRow.viewActions ||shipmentRow.viewEdit   ? 'danger' : (rowindex%2==0?'info':''))\\\">\\r\\n                                            <td *ngIf=\\\"selectedShipmentFilter.isPickupDateColVisible\\\">{{translateService.formatToShortLocaleDate(shipmentRow.shipment.pickUpDate)}}</td>\\r\\n                                            <td *ngIf=\\\"selectedShipmentFilter.isDeliveryDateColVisible\\\">{{translateService.formatToShortLocaleDate(shipmentRow.shipment.deliveryDate)}}</td>\\r\\n                                            <td *ngIf=\\\"selectedShipmentFilter.isFromColVisible\\\">{{shipmentRow.shipment.addressFrom}}</td>\\r\\n                                            <td *ngIf=\\\"selectedShipmentFilter.isDestinationColVisible\\\">{{shipmentRow.shipment.addressTo}}</td>\\r\\n                                            <td *ngIf=\\\"selectedShipmentFilter.isQuatityColVisible\\\">{{shipmentRow.shipment.totalQuatity + ' items, ' + shipmentRow.shipment.totalVolume + ' &#13221;, ' + shipmentRow.shipment.totalWeight + ' kg'}}</td>\\r\\n                                            <td *ngIf=\\\"selectedShipmentFilter.isTransporterColVisible\\\">{{shipmentRow.shipment.transporterId}}</td>\\r\\n                                            <td *ngIf=\\\"selectedShipmentFilter.isPriceColVisible\\\">{{shipmentRow.shipment.totalPrice}}</td>\\r\\n                                            <td *ngIf=\\\"selectedShipmentFilter.isOfferCountColVisible\\\">{{shipmentRow.shipment.offerCount}}</td>\\r\\n                                        </tr>\\r\\n\\r\\n                                        <tr id=\\\"actionsRow\\\" *ngIf=\\\"shipmentRow.viewActions\\\">\\r\\n                                            <td id=\\\"actionsRowContent\\\" colspan=\\\"7\\\" align=\\\"center\\\">\\r\\n\\r\\n                                                <button *ngIf=\\\"selectedShipmentFilter && selectedShipmentFilter.editActionVisible\\\" class=\\\"btn btn-warning\\\" (click)=\\\"onClickEditShipment(shipmentRow)\\\">\\r\\n                                                            <span class=\\\"btn-label\\\">\\r\\n                                                                <i class=\\\"material-icons\\\">border_color</i>\\r\\n                                                            </span>\\r\\n                                                            Edit shipment\\r\\n                                                        </button>\\r\\n                                                <button *ngIf=\\\"selectedShipmentFilter && selectedShipmentFilter.deleteActionVisible\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClickDeleteShipment(shipmentRow.shipment.id)\\\">\\r\\n                                                            <span class=\\\"btn-label \\\">\\r\\n                                                                <i class=\\\"material-icons\\\">delete_forever</i>\\r\\n                                                            </span>\\r\\n                                                            Delete shipment\\r\\n                                                        </button>\\r\\n                                                <button *ngIf=\\\"selectedShipmentFilter && selectedShipmentFilter.moveToOpenMarketActionVisible\\\" class=\\\"btn btn-info\\\" (click)=\\\"assignToOpenMarket(shipmentRow.shipment.id)\\\">\\r\\n                                                            <span class=\\\"btn-label\\\">\\r\\n                                                                <i class=\\\"material-icons\\\">assignment_returned</i>\\r\\n                                                            </span>\\r\\n                                                            Assign to open market\\r\\n                                                        </button>\\r\\n                                                <button *ngIf=\\\"selectedShipmentFilter && selectedShipmentFilter.moveToUnassingedActionVisible\\\" (click)=\\\"moveToUnassigned(shipmentRow.shipment.id)\\\" class=\\\"btn btn-info\\\">\\r\\n                                                          <span class=\\\"btn-label\\\">\\r\\n                                                              <i class=\\\"material-icons\\\">assignment_turned_in</i>\\r\\n                                                          </span>\\r\\n                                                          Move to unassigned\\r\\n                                                      </button>\\r\\n                                                <button *ngIf=\\\"selectedShipmentFilter && selectedShipmentFilter.assignTransporterActionVisible\\\" class=\\\"btn btn-info\\\">\\r\\n                                                            <span class=\\\"btn-label\\\">\\r\\n                                                                <i class=\\\"material-icons\\\">assignment_turned_in</i>\\r\\n                                                            </span>\\r\\n                                                            Assign to haulier\\r\\n                                                        </button>\\r\\n\\r\\n                                                <button *ngIf=\\\"false\\\" class=\\\"btn btn-info\\\">\\r\\n                                                          <span class=\\\"btn-label\\\">\\r\\n                                                              <i class=\\\"material-icons\\\">assignment_turned_in</i>\\r\\n                                                          </span>\\r\\n                                                         Unassign and publish to open market\\r\\n                                                 </button>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n\\r\\n                                        <tr id=\\\"editShipmentRowProgress\\\" *ngIf=\\\"shipmentRow.showViewLoader\\\">\\r\\n                                            <td colspan=\\\"7\\\">\\r\\n                                                <div>\\r\\n                                                    <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n                                                </div>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        <tr id=\\\"editShipmentRow\\\" *ngIf=\\\"shipmentRow.viewEdit\\\">\\r\\n                                            <td colspan=\\\"7\\\">\\r\\n                                                <router-outlet></router-outlet>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </ng-container>\\r\\n\\r\\n\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n\\r\\n                        <ul *ngIf=\\\"pagesCollection && pagesCollection.length > 0\\\" class=\\\"pagination pagination-info\\\">\\r\\n                            <li>\\r\\n                                <a href=\\\"javascript:void(0);\\\" (click)=\\\"paginate((currentPage -1 < 0 ? 0 : currentPage -1))\\\"> prev</a>\\r\\n                            </li>\\r\\n                            <li *ngFor=\\\"let page of pagesCollection;  let idx = index\\\" [ngClass]=\\\"currentPage == page ? 'active' : ''\\\">\\r\\n                                <a href=\\\"javascript:void(0);\\\" (click)=\\\"paginate(page)\\\"> {{page + 1}}</a>\\r\\n                            </li>\\r\\n                            <li>\\r\\n                                <a href=\\\"javascript:void(0);\\\" (click)=\\\"paginate((currentPage +1 > pagesCollection.length -1 ? pagesCollection.length -1 : currentPage +1))\\\"> next</a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n\\r\\n                    </div>\\r\\n                    <h4 *ngIf=\\\"componentModel && componentModel.length <= 0\\\">\\r\\n                        &nbsp;&nbsp;&nbsp;&nbsp;There are no shipments for selected filter.\\r\\n                    </h4>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/shipment-overview.component.html\n// module id = ../../../../../src/app/shipment/components/shipment-overview.component.html\n// module chunks = main","import { Component, OnInit, AfterViewInit, OnDestroy } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { TableData } from \"app/shared/md/md-table/md-table.component\";\r\nimport { ShipmentModel } from \"app/shipment/models/shipment-model\";\r\nimport { ApplicationUser } from \"app/authentication/viewmodels/application-user\";\r\nimport { ShipmentService } from \"app/shipment/services/shipment.service\";\r\nimport { NotificationService } from \"app/shared/common/services/notification.service\";\r\nimport { AuthenticationService } from \"app/authentication/services/authentication.service\";\r\nimport { ShipmentTransporterStatus } from \"app/shipment/models/shipment-transporter-status\";\r\nimport { GlobalErrorHandler } from \"app/shared/common/services/globalErrorHandler\";\r\nimport { TranslateService } from \"app/shared/common/services/localization/translate.service\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { HelperService } from \"app/shared/common/services/helperService\";\r\nimport { ShipmentTransporterFilterModel } from \"app/shipment/models/shipment-transporter-filter-model\";\r\nimport { ShipmentRowViewModel } from \"app/shipment/models/shipment-row-viewmodel\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nconst moment = require(\"moment/moment\");\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n  selector: \"app-shipment-overview\",\r\n  templateUrl: \"./shipment-overview.component.html\"\r\n})\r\nexport class ShipmentOverviewComponent\r\n  implements OnInit, OnDestroy, AfterViewInit {\r\n  // constructor(private navbarTitleService: NavbarTitleService, private notificationService: NotificationService) { }\r\n  componentModel: ShipmentRowViewModel[];\r\n  shipmentFilters: ShipmentTransporterFilterModel[];\r\n  currentUser: ApplicationUser;\r\n  // search term\r\n  currentAddressId = -1;\r\n  currentPage = 0;\r\n  pagesCollection: Array<number>;\r\n  pageSize = 20;\r\n\r\n  showLoader = false;\r\n\r\n  selectedShipmentFilter: ShipmentTransporterFilterModel;\r\n\r\n  private subscriptionReceiveUpdatedShipment: Subscription;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private shipmentService: ShipmentService,\r\n    private notificationService: NotificationService,\r\n    private authenticationService: AuthenticationService,\r\n    public translateService: TranslateService,\r\n    private helperService: HelperService,\r\n    private errorHandler: GlobalErrorHandler,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n  // constructor(private navbarTitleService: NavbarTitleService) { }\r\n  public ngOnInit() {\r\n    this.currentUser = this.authenticationService.getCurrentUser();\r\n\r\n    this.getShipmentFilters().subscribe(\r\n      filtersLoaded => {\r\n        this.showLoader = true;\r\n\r\n        this.selectedShipmentFilter = this.shipmentFilters[0];\r\n        this.setActionsVisibility();\r\n\r\n        this.getNumberOfShipments(false);\r\n\r\n        this.getShipments();\r\n      },\r\n      error => {\r\n        this.notificationService.show(\r\n          \"Filter not loaded\",\r\n          \"danger\",\r\n          \"center\",\r\n          \"top\"\r\n        );\r\n        this.showLoader = false;\r\n        this.errorHandler.handleError(error);\r\n      }\r\n    );\r\n\r\n    this.register_updateSavedModel_handler();\r\n  }\r\n\r\n  onFilterClick(shipmentFilter: ShipmentTransporterFilterModel): void {\r\n    this.showLoader = true;\r\n    this.selectedShipmentFilter = shipmentFilter;\r\n\r\n    this.setActionsVisibility();\r\n\r\n    this.getNumberOfShipments(false);\r\n\r\n    this.getShipments();\r\n  }\r\n\r\n  onAssignedSubfilterClick(\r\n    inPending: boolean,\r\n    shipmentFilter: ShipmentTransporterFilterModel\r\n  ): void {\r\n    shipmentFilter.inPending = inPending;\r\n\r\n    this.selectedShipmentFilter = shipmentFilter;\r\n\r\n    this.getNumberOfShipments(false);\r\n\r\n    this.getShipments();\r\n  }\r\n\r\n  /**\r\n   * Get addresses\r\n   */\r\n  private getShipments() {\r\n    if (this.currentUser && this.currentUser.customerId) {\r\n      this.shipmentService\r\n        .getAll(\r\n        this.currentUser.customerId,\r\n        this.selectedShipmentFilter.statusType,\r\n        this.selectedShipmentFilter.inPending,\r\n        this.pageSize * this.currentPage + 1,\r\n        this.pageSize,\r\n        this.translateService.currentLanguage\r\n        )\r\n        .subscribe(\r\n        result => {\r\n          this.componentModel = [];\r\n          if (result && result.length > 0) {\r\n            if (this.route.firstChild) {\r\n              this.currentAddressId = +this.route.firstChild.snapshot.params[\r\n                \"id\"\r\n              ];\r\n            }\r\n            for (let i = 0; i < result.length; i++) {\r\n              const shipmentRow = new ShipmentRowViewModel();\r\n              shipmentRow.shipment = result[i];\r\n              // if url contains edit then open it by default\r\n              debugger;\r\n              shipmentRow.viewActions =\r\n                result[i].id === this.currentAddressId;\r\n              this.componentModel.push(shipmentRow);\r\n            }\r\n\r\n            this.helperService.scrollOnTop();\r\n          }\r\n          this.showLoader = false;\r\n        },\r\n        error => {\r\n          this.errorHandler.handleError(error);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get addresses count for current filters\r\n   */\r\n  private getNumberOfShipments(ignoreQueryString: boolean) {\r\n    this.pagesCollection = null;\r\n    if (this.currentUser && this.currentUser.customerId) {\r\n      this.shipmentService\r\n        .getCount(\r\n        this.currentUser.customerId,\r\n        this.selectedShipmentFilter.statusType,\r\n        this.translateService.currentLanguage\r\n        )\r\n        .subscribe(\r\n        result => {\r\n          this.pagesCollection = [];\r\n          let numberOfPages = Math.ceil(result / this.pageSize);\r\n          numberOfPages = numberOfPages < 0 ? 1 : numberOfPages;\r\n          const self = this;\r\n          setTimeout(function () {\r\n            for (let i = 0; i < numberOfPages; i++) {\r\n              self.pagesCollection.push(i);\r\n            }\r\n          }, 100);\r\n        },\r\n        error => {\r\n          this.errorHandler.handleError(error);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get shipment filter\r\n   */\r\n  private getShipmentFilters(): Observable<boolean> {\r\n    return Observable.create(observer => {\r\n      if (this.currentUser && this.currentUser.customerId) {\r\n        this.shipmentService\r\n          .getShipmentFilters(\r\n          this.currentUser.customerId,\r\n          this.translateService.currentLanguage\r\n          )\r\n          .subscribe(\r\n          result => {\r\n            this.shipmentFilters = result;\r\n            observer.next(true);\r\n          },\r\n          error => {\r\n            this.errorHandler.handleError(error);\r\n            observer.next(false);\r\n          }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  private register_updateSavedModel_handler() {\r\n    this.subscriptionReceiveUpdatedShipment = this.shipmentService.shipmentModelReceivedHandler$.subscribe(\r\n      result => {\r\n        if (result != null) {\r\n          debugger;\r\n          if (this.componentModel) {\r\n            const rowToUpdate = this.componentModel.filter(\r\n              item => item.shipment.id === result.shipment.id)[0];\r\n            if (result.operation == 'loaded') {\r\n              rowToUpdate.showViewLoader = false;\r\n            } else if (result.operation == 'saved') {\r\n              rowToUpdate.shipment.pickUpDate = result.shipment.pickUpDate;\r\n              rowToUpdate.shipment.deliveryDate = result.shipment.deliveryDate;\r\n              rowToUpdate.shipment.addressFrom = result.shipment.addressFrom;\r\n              rowToUpdate.shipment.addressTo = result.shipment.addressTo;\r\n              rowToUpdate.shipment.totalQuatity = result.shipment.totalQuatity;\r\n              rowToUpdate.shipment.transporterId = result.shipment.transporterId;\r\n              rowToUpdate.shipment.totalPrice = result.shipment.totalPrice;\r\n              rowToUpdate.shipment.offerCount = result.shipment.offerCount;\r\n              this.helperService.scrollOnTop();\r\n              this.shipmentService.resetSendShipmentModelHandler();\r\n            }\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.errorHandler.handleError(error);\r\n      }\r\n    );\r\n  }\r\n  /**\r\n   * Show row available actions on click\r\n   * */\r\n  onClickShowActions(shipmentRow: ShipmentRowViewModel, index: number) {\r\n    for (let i = 0; i < this.componentModel.length; i++) {\r\n      if (i !== index) this.componentModel[i].viewActions = false;\r\n      this.componentModel[i].viewEdit = false;\r\n    }\r\n    shipmentRow.viewActions = !shipmentRow.viewActions;\r\n    if (shipmentRow.viewActions) {\r\n      shipmentRow.viewEdit = false;\r\n      this.router.navigate([\"/shipment-overview\"]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show edit\r\n   * */\r\n  onClickEditShipment(shipmentRow: ShipmentRowViewModel) {\r\n    shipmentRow.showViewLoader = true;\r\n\r\n    shipmentRow.viewActions = false;\r\n\r\n    this.router.navigate([\"./shipment-edit/\" + shipmentRow.shipment.id], {\r\n      relativeTo: this.route\r\n    });\r\n\r\n    shipmentRow.viewEdit = !shipmentRow.viewEdit;\r\n  }\r\n\r\n  /**\r\n * assignToOpenMarket\r\n * */\r\n  assignToOpenMarket(shipmentId: number) {\r\n    const self = this;\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, move it to open market!\"\r\n    })\r\n      // delete confirmed\r\n      .then(\r\n      function () {\r\n        self.shipmentService\r\n          .assignToOpenMarket(\r\n          shipmentId,\r\n          self.currentUser.customerId,\r\n          self.translateService.currentLanguage\r\n          )\r\n          .subscribe(\r\n          moved => {\r\n            if (moved) {\r\n              self.componentModel = self.componentModel.filter(\r\n                item => item.shipment.id !== shipmentId\r\n              );\r\n\r\n              const currentFilter = self.shipmentFilters.find(\r\n                item =>\r\n                  item.statusType === self.selectedShipmentFilter.statusType\r\n              );\r\n              if (currentFilter) {\r\n                currentFilter.amount = currentFilter.amount - 1;\r\n              }\r\n\r\n              const openMarketFilter = self.shipmentFilters.find(\r\n                item =>\r\n                  item.statusType === ShipmentTransporterStatus.openMarket\r\n              );\r\n              if (openMarketFilter) {\r\n                openMarketFilter.amount = openMarketFilter.amount + 1;\r\n                openMarketFilter.lastDateTime = new Date();\r\n              }\r\n\r\n              swal(\r\n                \"Moved!\",\r\n                \"Your shipment has been moved to open market.\",\r\n                \"success\"\r\n              );\r\n              // update model\r\n              self.componentModel = self.componentModel.filter(\r\n                item => item.shipment.id !== shipmentId\r\n              );\r\n            } else {\r\n              swal(\r\n                \"Not moved!\",\r\n                \"An error occured. Your shipment has not been moved to open market.  Please contact an administrator.\",\r\n                \"error\"\r\n              );\r\n            }\r\n          },\r\n          error => {\r\n            swal(\r\n              \"Not moved!\",\r\n              \"An error occured. Your shipment has not been moved to open market.  Please contact an administrator.\",\r\n              \"error\"\r\n            );\r\n            self.errorHandler.handleError(error);\r\n          }\r\n          );\r\n      },\r\n      function (dismiss) {\r\n        if (dismiss === \"cancel\") {\r\n          swal(\"Cancelled\", \"Your shipment is safe\", \"error\");\r\n        }\r\n      }\r\n      );\r\n  }\r\n\r\n  /**\r\n * moveToUnassigned\r\n * */\r\n  moveToUnassigned(shipmentId: number) {\r\n    const self = this;\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, move it to unassigned!\"\r\n    })\r\n      // move confirmed\r\n      .then(\r\n      function () {\r\n        self.shipmentService\r\n          .moveToUnassigned(\r\n          shipmentId,\r\n          self.currentUser.customerId,\r\n          self.translateService.currentLanguage\r\n          )\r\n          .subscribe(\r\n          moved => {\r\n            if (moved) {\r\n              self.componentModel = self.componentModel.filter(\r\n                item => item.shipment.id !== shipmentId\r\n              );\r\n\r\n              const currentFilter = self.shipmentFilters.find(\r\n                item =>\r\n                  item.statusType === self.selectedShipmentFilter.statusType\r\n              );\r\n              if (currentFilter) {\r\n                currentFilter.amount = currentFilter.amount - 1;\r\n              }\r\n\r\n              const unassignedFilter = self.shipmentFilters.find(\r\n                item =>\r\n                  item.statusType === ShipmentTransporterStatus.unassigned\r\n              );\r\n              if (unassignedFilter) {\r\n                unassignedFilter.amount = unassignedFilter.amount + 1;\r\n                unassignedFilter.lastDateTime = new Date();\r\n              }\r\n\r\n              swal(\r\n                \"Moved!\",\r\n                \"Your shipment has been moved to unassigned.\",\r\n                \"success\"\r\n              );\r\n              // update model\r\n              self.componentModel = self.componentModel.filter(\r\n                item => item.shipment.id !== shipmentId\r\n              );\r\n            } else {\r\n              swal(\r\n                \"Not moved!\",\r\n                \"An error occured. Your shipment has not been moved to unassigned. Please contact an administrator.\",\r\n                \"error\"\r\n              );\r\n            }\r\n          },\r\n          error => {\r\n            swal(\r\n              \"Not moved!\",\r\n              \"An error occured. Your shipment has not been moved to unassigned. Please contact an administrator.\",\r\n              \"error\"\r\n            );\r\n            self.errorHandler.handleError(error);\r\n          }\r\n          );\r\n      },\r\n      function (dismiss) {\r\n        if (dismiss === \"cancel\") {\r\n          swal(\"Cancelled\", \"Your shipment is safe\", \"error\");\r\n        }\r\n      }\r\n      );\r\n  }\r\n\r\n  onClickDeleteShipment(shipmentId: number) {\r\n    const self = this;\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\"\r\n    })\r\n      // delete confirmed\r\n      .then(\r\n      function () {\r\n        self.shipmentService\r\n          .delete(\r\n          shipmentId,\r\n          self.currentUser.customerId,\r\n          self.translateService.currentLanguage\r\n          )\r\n          .subscribe(\r\n          result => {\r\n            if (result) {\r\n              swal(\r\n                \"Deleted!\",\r\n                \"Your shipment has been deleted.\",\r\n                \"success\"\r\n              );\r\n              // update model\r\n              self.componentModel = self.componentModel.filter(\r\n                item => item.shipment.id !== shipmentId\r\n              );\r\n\r\n              const currentFilter = self.shipmentFilters.find(\r\n                item =>\r\n                  item.statusType === self.selectedShipmentFilter.statusType\r\n              );\r\n              if (currentFilter) {\r\n                currentFilter.amount = currentFilter.amount - 1;\r\n                currentFilter.lastDateTime = new Date();\r\n              }\r\n            } else {\r\n              swal(\r\n                \"Not Deleted!\",\r\n                \"An error occured. Your shipment has not been deleted.  Please contact an administrator.\",\r\n                \"error\"\r\n              );\r\n            }\r\n          },\r\n          error => {\r\n            swal(\r\n              \"Not Deleted!\",\r\n              \"An error occured. Your shipment has not been deleted.  Please contact an administrator.\",\r\n              \"error\"\r\n            );\r\n            self.errorHandler.handleError(error);\r\n          }\r\n          );\r\n      },\r\n      // delete canceled\r\n      function (dismiss) {\r\n        // dismiss can be 'cancel', 'overlay',\r\n        // 'close', and 'timer'\r\n        if (dismiss === \"cancel\") {\r\n          swal(\"Cancelled\", \"Your shipment is safe\", \"error\");\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n * Move to next/previous page\r\n * @param page\r\n */\r\n  paginate(page: number) {\r\n    this.showLoader = true;\r\n    this.currentPage = page;\r\n    this.getShipments();\r\n\r\n    this.helperService.scrollOnTop();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const breakCards = true;\r\n    if (breakCards === true) {\r\n      // We break the cards headers if there is too much stress on them :-)\r\n      $('[data-header-animation=\"true\"]').each(function () {\r\n        const $fix_button = $(this);\r\n        const $card = $(this).parent(\".card\");\r\n        $card.find(\".fix-broken-card\").click(function () {\r\n          console.log(this);\r\n          const $header = $(this)\r\n            .parent()\r\n            .parent()\r\n            .siblings(\".card-header, .card-image\");\r\n          $header.removeClass(\"hinge\").addClass(\"fadeInDown\");\r\n\r\n          $card.attr(\"data-count\", 0);\r\n\r\n          setTimeout(function () {\r\n            $header.removeClass(\"fadeInDown animate\");\r\n          }, 480);\r\n        });\r\n\r\n        $card.mouseenter(function () {\r\n          const $this = $(this);\r\n          const hover_count = parseInt($this.attr(\"data-count\"), 10) + 1 || 0;\r\n          $this.attr(\"data-count\", hover_count);\r\n          if (hover_count >= 20) {\r\n            $(this)\r\n              .children(\".card-header, .card-image\")\r\n              .addClass(\"hinge animated\");\r\n          }\r\n        });\r\n      });\r\n    }\r\n    //  Activate the tooltips\r\n    $('[rel=\"tooltip\"]').tooltip();\r\n  }\r\n\r\n  getFilterColor(status: ShipmentTransporterStatus): string {\r\n    switch (status) {\r\n      case ShipmentTransporterStatus.unassigned:\r\n        return \"red\";\r\n      case ShipmentTransporterStatus.openMarket:\r\n        return \"blue\";\r\n      case ShipmentTransporterStatus.assigned:\r\n        return \"orange\";\r\n      case ShipmentTransporterStatus.completed:\r\n        return \"green\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  getFilterIcon(status: ShipmentTransporterStatus): string {\r\n    switch (status) {\r\n      case ShipmentTransporterStatus.unassigned:\r\n        return \"assignment\";\r\n      case ShipmentTransporterStatus.openMarket:\r\n        return \"shopping_cart\";\r\n      case ShipmentTransporterStatus.assigned:\r\n        return \"done\";\r\n      case ShipmentTransporterStatus.completed:\r\n        return \"done_all\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  setActionsVisibility() {\r\n    const status = this.selectedShipmentFilter.statusType;\r\n\r\n    // set default columns visibility\r\n    this.selectedShipmentFilter.isPickupDateColVisible = true;\r\n    this.selectedShipmentFilter.isDeliveryDateColVisible = true;\r\n    this.selectedShipmentFilter.isFromColVisible = true;\r\n    this.selectedShipmentFilter.isDestinationColVisible = true;\r\n    this.selectedShipmentFilter.isQuatityColVisible = true;\r\n    this.selectedShipmentFilter.isTransporterColVisible = false;\r\n    this.selectedShipmentFilter.isPriceColVisible = false;\r\n    this.selectedShipmentFilter.isOfferCountColVisible = false;\r\n\r\n\r\n    switch (status) {\r\n      case ShipmentTransporterStatus.unassigned: {\r\n        this.selectedShipmentFilter.deleteActionVisible = true;\r\n        this.selectedShipmentFilter.editActionVisible = true;\r\n        this.selectedShipmentFilter.moveToOpenMarketActionVisible = true;\r\n        this.selectedShipmentFilter.moveToUnassingedActionVisible = false;\r\n        this.selectedShipmentFilter.assignTransporterActionVisible = true;\r\n        break;\r\n      }\r\n      case ShipmentTransporterStatus.openMarket: {\r\n        // columns\r\n        this.selectedShipmentFilter.isOfferCountColVisible = true;\r\n        // actions\r\n        this.selectedShipmentFilter.deleteActionVisible = true;\r\n        this.selectedShipmentFilter.editActionVisible = true;\r\n        this.selectedShipmentFilter.moveToOpenMarketActionVisible = false;\r\n        this.selectedShipmentFilter.moveToUnassingedActionVisible = true;\r\n        this.selectedShipmentFilter.assignTransporterActionVisible = true;\r\n        break;\r\n      }\r\n      case ShipmentTransporterStatus.assigned: {\r\n        // columns\r\n        this.selectedShipmentFilter.isTransporterColVisible = true;\r\n        this.selectedShipmentFilter.isPriceColVisible = true;\r\n        // actions\r\n        this.selectedShipmentFilter.deleteActionVisible = true;\r\n        this.selectedShipmentFilter.editActionVisible = true;\r\n        this.selectedShipmentFilter.moveToOpenMarketActionVisible = false;\r\n        if (this.selectedShipmentFilter.inPending) {\r\n          this.selectedShipmentFilter.moveToUnassingedActionVisible = true;\r\n          this.selectedShipmentFilter.assignTransporterActionVisible = true;\r\n        } else {\r\n          this.selectedShipmentFilter.moveToUnassingedActionVisible = false;\r\n          this.selectedShipmentFilter.assignTransporterActionVisible = false;\r\n        }\r\n        break;\r\n      }\r\n      case ShipmentTransporterStatus.completed: {\r\n        this.selectedShipmentFilter.deleteActionVisible = true;\r\n        this.selectedShipmentFilter.editActionVisible = true;\r\n        this.selectedShipmentFilter.moveToOpenMarketActionVisible = false;\r\n        this.selectedShipmentFilter.moveToUnassingedActionVisible = false;\r\n        this.selectedShipmentFilter.assignTransporterActionVisible = false;\r\n        break;\r\n      }\r\n      default: {\r\n        this.selectedShipmentFilter.deleteActionVisible = true;\r\n        this.selectedShipmentFilter.editActionVisible = true;\r\n        this.selectedShipmentFilter.moveToOpenMarketActionVisible = false;\r\n        this.selectedShipmentFilter.moveToUnassingedActionVisible = false;\r\n        this.selectedShipmentFilter.assignTransporterActionVisible = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscriptionReceiveUpdatedShipment) {\r\n      this.subscriptionReceiveUpdatedShipment.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/shipment-overview.component.ts","module.exports = \"<div class=\\\"main-content\\\" *ngIf=\\\"componentModel\\\" [style.margin-top]=\\\"componentState > 0 ? '0px':'inherit;'\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <form #formShipment=\\\"ngForm\\\" novalidate class=\\\"form-horizontal\\\" novalidate (ngSubmit)=\\\"save(formShipment.value, formShipment.valid)\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 col-md-offset-3\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"rose\\\">\\r\\n                            <i class=\\\"material-icons\\\">local_shipping</i>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-content\\\">\\r\\n                            <h4 class=\\\"card-title\\\">{{componentState > 0 ? 'Edit shipment' : 'Create new shipment'}}</h4>\\r\\n\\r\\n                            <div *ngIf=\\\"componentState > 0\\\" [ngClass]=\\\"'form-group label-floating ' + (componentModel.reference  && componentModel.reference.length > 0 ? '' : 'is-empty ' + ((!componentModel.reference ) && formShipment.submitted ? ' has-error' : '')) \\\">\\r\\n                                <label for=\\\"\\\" [ngClass]=\\\"componentState == 0 ? 'control-label': ''\\\"> Transapp shipment reference\\r\\n                                <span class=\\\"star\\\">*</span>\\r\\n                                </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"componentModel.reference\\\" id=\\\"reference\\\" disabled=\\\"\\\" name=\\\"reference\\\" required>\\r\\n                            </div>\\r\\n\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + (componentModel.poNumber  && componentModel.poNumber.length > 0 ? '' : 'is-empty ') \\\">\\r\\n                                <label for=\\\"\\\" [ngClass]=\\\"componentState == 0 ? 'control-label' : ''\\\">\\r\\n                                    PO Number\\r\\n                                </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"componentModel.poNumber\\\" id=\\\"poNumber\\\" name=\\\"poNumber\\\">\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"rose\\\">\\r\\n                            <i class=\\\"material-icons\\\">send</i>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-content\\\">\\r\\n                            <h4 class=\\\"card-title\\\">Sender</h4>\\r\\n\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + ((!senderSelectedAddress ) && formShipment.submitted ? ' has-error' : '')\\\">\\r\\n                                <label for=\\\"receiverSearchAddress\\\">\\r\\n                                    Type here to search for a sender\\r\\n                                    <span class=\\\"star\\\">*</span>\\r\\n                                </label>\\r\\n\\r\\n                                <mat-form-field class=\\\"autocomplete-address\\\">\\r\\n                                    <input matInput type=\\\"text\\\" id=\\\"senderSearchAddress\\\" name=\\\"senderSearchAddress\\\" [formControl]=\\\"senderSearchAddressControl\\\" md-min-length=\\\"0\\\" [matAutocomplete]=\\\"senderAutocomplete\\\" aria-label=\\\"Select sender\\\">\\r\\n                                    <mat-autocomplete #senderAutocomplete=\\\"matAutocomplete\\\">\\r\\n                                        <mat-option *ngFor=\\\"let address of senderFoundAddresses\\\" [value]=\\\"address.name\\\" (onSelectionChange)=\\\"onSenderAddressSelected($event, address)\\\">\\r\\n                                            {{ address.name }}\\r\\n                                        </mat-option>\\r\\n                                        <mat-option *ngIf='!senderFoundAddresses || senderFoundAddresses.length <=0' [value]=\\\"-1\\\" (onSelectionChange)=\\\"onSenderAddressSelected($event, null)\\\">\\r\\n                                            No results found. Click here to create a new address\\r\\n                                        </mat-option>\\r\\n                                    </mat-autocomplete>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- Adress info -->\\r\\n                            <h3>Address info</h3>\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + ((componentModel.pickUpDate ) ? '' : 'is-empty') + (!componentModel.pickUpDate  && formShipment.submitted ? ' has-error' : '') \\\">\\r\\n\\r\\n                                <label for=\\\"pickupDatePicker\\\">\\r\\n                                  Pickup date\\r\\n                                    <span class=\\\"star\\\">*</span>\\r\\n                                </label> <br>\\r\\n                                <mat-datepicker-toggle mdSuffix [for]=\\\"pickupDatePicker\\\">\\r\\n                                </mat-datepicker-toggle>\\r\\n                                <mat-input-container>\\r\\n                                    <input matInput [matDatepicker]=\\\"pickupDatePicker\\\" [(ngModel)]=\\\"componentModel.pickUpDate\\\" id=\\\"pickUpDate\\\" name=\\\"pickUpDate\\\" (dateChange)=\\\"onPickupDateSelected($event)\\\" required>\\r\\n                                </mat-input-container>\\r\\n                                <mat-datepicker #pickupDatePicker [touchUi]=\\\"touch\\\" [startView]=\\\"'month'\\\">\\r\\n                                </mat-datepicker>\\r\\n                            </div>\\r\\n\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + ((componentModel.senderAddressInfo  && componentModel.senderAddressInfo.length > 0) ? '' : 'is-empty') + (!componentModel.senderAddressInfo  && formShipment.submitted ? ' has-error' : '') \\\">\\r\\n                                <label for=\\\"\\\" [ngClass]=\\\"componentState == 0 ? 'control-label' : ''\\\">\\r\\n                                    Pickup adress\\r\\n                                    <span class=\\\"star\\\">*</span>\\r\\n                                </label>\\r\\n                                <textarea class=\\\"form-control\\\" name=\\\"senderAddress\\\" [(ngModel)]=\\\"componentModel.senderAddressInfo\\\" rows=\\\"2\\\" disabled></textarea>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- Opening hours -->\\r\\n                            <mat-expansion-panel [expanded]=\\\"true\\\" *ngIf=\\\"senderSelectedAddress && componentModel.pickUpDate\\\">\\r\\n                                <mat-expansion-panel-header>\\r\\n                                    <mat-panel-title>\\r\\n                                        <h3>Opening hours</h3>\\r\\n                                    </mat-panel-title>\\r\\n                                </mat-expansion-panel-header>\\r\\n\\r\\n                                <div [ngClass]=\\\" 'form-group label-floating ' + (!componentModel.senderAvailabilities || (componentModel.senderAvailabilities && componentModel.senderAvailabilities.length == 1 && componentModel.senderAvailabilities[0].isClosed) && formShipment.submitted ? ' has-error' : '')\\\">\\r\\n                                    <address-availability-slider *ngIf=\\\"componentModel.senderAvailabilities && componentModel.senderAvailabilities.length == 1\\\" [sliderid]=\\\"'slider_sender'\\\" [availability]=\\\"componentModel.senderAvailabilities[0]\\\"></address-availability-slider>\\r\\n                                    <small *ngIf=\\\"(!componentModel.senderAvailabilities || (componentModel.senderAvailabilities && componentModel.senderAvailabilities.length == 1 && componentModel.senderAvailabilities[0].isClosed)) && formShipment.submitted\\\" class=\\\"text-danger\\\">\\r\\n                                      Selected pickup address is not open on this day. Please select another pickup date.\\r\\n                                   </small>\\r\\n                                </div>\\r\\n                            </mat-expansion-panel>\\r\\n\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + (componentModel.senderContactPerson  && componentModel.senderContactPerson.length > 0 ? '' : 'is-empty ' + ((!componentModel.senderContactPerson  || componentModel.senderContactPerson.length <= 0  ) && formShipment.submitted ? ' has-error' : '')) \\\">\\r\\n                                <label for=\\\"\\\" [ngClass]=\\\"componentState == 0 ? 'control-label' : ''\\\">\\r\\n                                    Contactperson\\r\\n                                    <span class=\\\"star\\\">*</span>\\r\\n                                </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"componentModel.senderContactPerson\\\" id=\\\"senderContactPerson\\\" name=\\\"senderContactPerson\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group label-floating\\\" [ngClass]=\\\"'form-group label-floating ' + (componentModel.senderPhone  && componentModel.senderPhone.length > 0 ? '' : 'is-empty' + (((!componentModel.senderPhone || componentModel.senderPhone.length <= 0 ) && formShipment.submitted ) ? ' has-error' : '')) \\\">\\r\\n                                <label for=\\\"\\\" [ngClass]=\\\"componentState == 0 ? 'control-label' : ''\\\">\\r\\n                                    Phone\\r\\n                                    <span class=\\\"star\\\">*</span>\\r\\n                                </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"componentModel.senderPhone\\\" id=\\\"senderPhone\\\" name=\\\"senderPhone\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + ((componentModel.senderRemark  && componentModel.senderRemark.length > 0) ? '' : 'is-empty') \\\">\\r\\n                                <label for=\\\"\\\" [ngClass]=\\\"componentState == 0 ? 'control-label' : ''\\\">\\r\\n                                    Info\\r\\n                                </label>\\r\\n                                <textarea class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"componentModel.senderRemark\\\" id=\\\"senderRemark\\\" name=\\\"senderRemark\\\"></textarea>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- Sender Facilities -->\\r\\n                            <mat-expansion-panel>\\r\\n                                <mat-expansion-panel-header>\\r\\n                                    <mat-panel-title>\\r\\n                                        <h3>Facilities</h3>\\r\\n                                    </mat-panel-title>\\r\\n                                </mat-expansion-panel-header>\\r\\n\\r\\n                                <div class=\\\"input-group\\\" *ngFor=\\\"let facility of componentModel.senderFacilities\\\">\\r\\n                                    <span class=\\\"input-group-addon\\\">\\r\\n                                        <i class=\\\"material-icons\\\">{{facility.iconName}}</i>\\r\\n                                    </span>\\r\\n                                    <div class=\\\"form-group label-floating\\\">\\r\\n                                        <div class=\\\"togglebutton\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"facility.active\\\" [checked]=\\\"facility.active\\\" name=\\\"facilityactive_{{facility.facilityId}}\\\"> {{facility.description}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </mat-expansion-panel>\\r\\n\\r\\n                            <!-- Sender Truck -->\\r\\n                            <mat-expansion-panel>\\r\\n                                <mat-expansion-panel-header>\\r\\n                                    <mat-panel-title>\\r\\n                                        <h3>Truck</h3>\\r\\n                                    </mat-panel-title>\\r\\n                                </mat-expansion-panel-header>\\r\\n\\r\\n                                <div class=\\\"input-group\\\" *ngFor=\\\"let truck of componentModel.senderTrucks\\\">\\r\\n                                    <span class=\\\"input-group-addon\\\">\\r\\n                                        <i class=\\\"material-icons\\\">{{truck.iconName}}</i>\\r\\n                                    </span>\\r\\n                                    <div class=\\\"form-group label-floating\\\">\\r\\n                                        <div class=\\\"togglebutton\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"truck.active\\\" [checked]=\\\"truck.active==true\\\" name=\\\"truckactive_{{truck.truckId}}\\\"> {{truck.description}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </mat-expansion-panel>\\r\\n\\r\\n                            <!-- Sender Transport requirments -->\\r\\n                            <mat-expansion-panel>\\r\\n                                <mat-expansion-panel-header>\\r\\n                                    <mat-panel-title>\\r\\n                                        <h3>Transport requirements</h3>\\r\\n                                    </mat-panel-title>\\r\\n                                </mat-expansion-panel-header>\\r\\n\\r\\n                                <div class=\\\"input-group\\\" *ngFor=\\\"let requirement of componentModel.senderRequirements\\\">\\r\\n                                    <span class=\\\"input-group-addon\\\">\\r\\n                                        <i class=\\\"material-icons\\\">{{requirement.iconName}}</i>\\r\\n                                    </span>\\r\\n                                    <div class=\\\"form-group label-floating\\\">\\r\\n                                        <div class=\\\"togglebutton\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"requirement.active\\\" [checked]=\\\"requirement.active\\\" name=\\\"requirementactive_{{requirement.requirementId}}\\\"> {{requirement.description}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </mat-expansion-panel>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!--  ***************** Receiver *************** -->\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"rose\\\">\\r\\n                            <i class=\\\"material-icons\\\">call_received</i>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-content\\\">\\r\\n                            <h4 class=\\\"card-title\\\">Receiver</h4>\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + ((!receiverSelectedAddress  ) && formShipment.submitted ? ' has-error' : '')\\\">\\r\\n                                <label for=\\\"receiverSearchAddress\\\">\\r\\n                                    Type here to search for a receiver\\r\\n                                    <span class=\\\"star\\\">*</span>\\r\\n                                </label>\\r\\n                                <mat-form-field class=\\\"autocomplete-address\\\">\\r\\n                                    <input type=\\\"text\\\" matInput id=\\\"receiverSearchAddress\\\" name=\\\"receiverSearchAddress\\\" [formControl]=\\\"receiverSearchAddressControl\\\" [matAutocomplete]=\\\"receiverAutocomplete\\\" aria-label=\\\"Select receiver\\\">\\r\\n                                    <mat-autocomplete #receiverAutocomplete=\\\"matAutocomplete\\\">\\r\\n                                        <mat-option *ngFor=\\\"let address of receiverFoundAddresses\\\" [value]=\\\"address.name\\\" (onSelectionChange)=\\\"onReceiverAddressSelected($event, address)\\\">\\r\\n                                            {{ address.name }}\\r\\n                                        </mat-option>\\r\\n                                        <mat-option *ngIf='!receiverFoundAddresses || receiverFoundAddresses.length <=0' [value]=\\\"-1\\\" (onSelectionChange)=\\\"onReceiverAddressSelected($event, null)\\\">\\r\\n                                            No results found. Click here to create a new address\\r\\n                                        </mat-option>\\r\\n                                    </mat-autocomplete>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- Adress info -->\\r\\n                            <h3>Address info</h3>\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + ((componentModel.deliveryDate ) ? '' : 'is-empty') + (!componentModel.deliveryDate  && formShipment.submitted ? ' has-error' : '')\\\">\\r\\n                                <label for=\\\"\\\">\\r\\n                                    Delivery date\\r\\n                                    <span class=\\\"star\\\">*</span>\\r\\n                                </label><br>\\r\\n\\r\\n                                <mat-datepicker-toggle mdSuffix [for]=\\\" deliveryDatePicker \\\">\\r\\n                                </mat-datepicker-toggle>\\r\\n                                <mat-input-container>\\r\\n                                    <input matInput [matDatepicker]=\\\"deliveryDatePicker \\\" [(ngModel)]=\\\"componentModel.deliveryDate \\\" id=\\\"deliveryDate\\\" name=\\\"deliveryDate\\\" (dateChange)=\\\"onDeliveryDateSelected($event) \\\" required>\\r\\n                                </mat-input-container>\\r\\n                                <mat-datepicker #deliveryDatePicker [touchUi]=\\\"touch \\\" [startView]=\\\" 'month' \\\">\\r\\n                                </mat-datepicker>\\r\\n                            </div>\\r\\n\\r\\n                            <div [ngClass]=\\\" 'form-group label-floating ' + ((componentModel.receiverAddressInfo && componentModel.receiverAddressInfo.length> 0) ? '' : 'is-empty') + (!componentModel.receiverAddressInfo && formShipment.submitted ? ' has-error' : '')\\\">\\r\\n                                <label for=\\\"\\\" [ngClass]=\\\"componentState == 0 ? 'control-label' : ''\\\">\\r\\n                                    Delivery adress\\r\\n                                    <span class=\\\"star\\\">*</span>\\r\\n                                </label>\\r\\n                                <textarea class=\\\"form-control\\\" name=\\\"receiverAddressInfo\\\" [ngModel]=\\\"componentModel.receiverAddressInfo\\\" rows=\\\"2\\\" disabled></textarea>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- Opening hours -->\\r\\n                            <mat-expansion-panel [expanded]=\\\"true\\\" *ngIf=\\\"receiverSelectedAddress && componentModel.deliveryDate\\\">\\r\\n                                <mat-expansion-panel-header>\\r\\n                                    <mat-panel-title>\\r\\n                                        <h3>Opening hours</h3>\\r\\n                                    </mat-panel-title>\\r\\n                                </mat-expansion-panel-header>\\r\\n\\r\\n                                <div [ngClass]=\\\" 'form-group label-floating ' + (!componentModel.receiverAvailabilities || (componentModel.receiverAvailabilities && componentModel.receiverAvailabilities.length == 1 && componentModel.receiverAvailabilities[0].isClosed) && formShipment.submitted ? ' has-error' : '')\\\">\\r\\n                                    <address-availability-slider *ngIf=\\\"componentModel.receiverAvailabilities && componentModel.receiverAvailabilities.length == 1\\\" [sliderid]=\\\"'slider_receiver'\\\" [availability]=\\\"componentModel.receiverAvailabilities[0]\\\"></address-availability-slider>\\r\\n                                    <small *ngIf=\\\"(!componentModel.receiverAvailabilities || (componentModel.receiverAvailabilities && componentModel.receiverAvailabilities.length == 1 && componentModel.receiverAvailabilities[0].isClosed)) && formShipment.submitted\\\" class=\\\"text-danger\\\">\\r\\n                                     Selected delivery address is not open on this day. Please select another dalivery date.\\r\\n                                  </small>\\r\\n                                </div>\\r\\n                            </mat-expansion-panel>\\r\\n\\r\\n\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + (componentModel.receiverContactPerson  && componentModel.receiverContactPerson.length > 0 ? '' : 'is-empty ' + ((!componentModel.receiverContactPerson || componentModel.receiverContactPerson.length <= 0) && formShipment.submitted ? ' has-error' : '')) \\\">\\r\\n                                <label for=\\\"\\\" [ngClass]=\\\"componentState == 0 ? 'control-label' : ''\\\">\\r\\n                                    Contactperson\\r\\n                                    <span class=\\\"star\\\">*</span>\\r\\n                                </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"componentModel.receiverContactPerson\\\" id=\\\"receiverContactPerson\\\" name=\\\"receiverContactPerson\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group label-floating\\\" [ngClass]=\\\"'form-group label-floating ' + (componentModel.receiverPhone  && componentModel.receiverPhone.length > 0 ? '' : 'is-empty' + (((!componentModel.receiverPhone || componentModel.receiverPhone.length <= 0) && formShipment.submitted ) ? ' has-error' : '')) \\\">\\r\\n                                <label for=\\\"\\\" [ngClass]=\\\"componentState == 0 ? 'control-label' : ''\\\">\\r\\n                                    Phone\\r\\n                                    <span class=\\\"star\\\">*</span>\\r\\n                                </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"componentModel.receiverPhone\\\" id=\\\"receiverPhone\\\" name=\\\"receiverPhone\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <div [ngClass]=\\\"'form-group label-floating ' + ((componentModel.receiverRemark  && componentModel.receiverRemark.length > 0) ? '' : 'is-empty') \\\">\\r\\n                                <label for=\\\"\\\" [ngClass]=\\\"componentState == 0 ? 'control-label' : ''\\\">\\r\\n                                    Info\\r\\n                                </label>\\r\\n                                <textarea class=\\\"form-control\\\" rows=\\\"5\\\" [(ngModel)]=\\\"componentModel.receiverRemark\\\" id=\\\"receiverRemark\\\" name=\\\"receiverRemark\\\"></textarea>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- Sender Facilities -->\\r\\n                            <mat-expansion-panel>\\r\\n                                <mat-expansion-panel-header>\\r\\n                                    <mat-panel-title>\\r\\n                                        <h3>Facilities</h3>\\r\\n                                    </mat-panel-title>\\r\\n                                </mat-expansion-panel-header>\\r\\n\\r\\n                                <div class=\\\"input-group\\\" *ngFor=\\\"let facility of componentModel.receiverFacilities\\\">\\r\\n                                    <span class=\\\"input-group-addon\\\">\\r\\n                                        <i class=\\\"material-icons\\\">{{facility.iconName}}</i>\\r\\n                                    </span>\\r\\n                                    <div class=\\\"form-group label-floating\\\">\\r\\n                                        <div class=\\\"togglebutton\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"facility.active\\\" [checked]=\\\"facility.active\\\" name=\\\"receiver_facilityactive_{{facility.facilityId}}\\\"> {{facility.description}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </mat-expansion-panel>\\r\\n\\r\\n                            <!-- Sender Truck -->\\r\\n                            <mat-expansion-panel>\\r\\n                                <mat-expansion-panel-header>\\r\\n                                    <mat-panel-title>\\r\\n                                        <h3>Truck</h3>\\r\\n                                    </mat-panel-title>\\r\\n                                </mat-expansion-panel-header>\\r\\n\\r\\n                                <div class=\\\"input-group\\\" *ngFor=\\\"let truck of componentModel.receiverTrucks\\\">\\r\\n                                    <span class=\\\"input-group-addon\\\">\\r\\n                                        <i class=\\\"material-icons\\\">{{truck.iconName}}</i>\\r\\n                                    </span>\\r\\n                                    <div class=\\\"form-group label-floating\\\">\\r\\n                                        <div class=\\\"togglebutton\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"truck.active\\\" [checked]=\\\"truck.active==true\\\" name=\\\"receiver_truckactive_{{truck.truckId}}\\\"> {{truck.description}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </mat-expansion-panel>\\r\\n\\r\\n                            <!-- Sender Transport requirments -->\\r\\n                            <mat-expansion-panel>\\r\\n                                <mat-expansion-panel-header>\\r\\n                                    <mat-panel-title>\\r\\n                                        <h3>Transport requirements</h3>\\r\\n                                    </mat-panel-title>\\r\\n                                </mat-expansion-panel-header>\\r\\n\\r\\n                                <div class=\\\"input-group\\\" *ngFor=\\\"let requirement of componentModel.receiverRequirements\\\">\\r\\n                                    <span class=\\\"input-group-addon\\\">\\r\\n                                        <i class=\\\"material-icons\\\">{{requirement.iconName}}</i>\\r\\n                                    </span>\\r\\n                                    <div class=\\\"form-group label-floating\\\">\\r\\n                                        <div class=\\\"togglebutton\\\">\\r\\n                                            <label>\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"requirement.active\\\" [checked]=\\\"requirement.active\\\" name=\\\"receiver_requirementactive_{{requirement.requirementId}}\\\"> {{requirement.description}}\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </mat-expansion-panel>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Goods -->\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"rose\\\">\\r\\n                            <i class=\\\"material-icons\\\">add_shopping_cart</i>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-content\\\">\\r\\n                            <h4 class=\\\"card-title\\\">Goods</h4>\\r\\n                            <input type=\\\"hidden\\\" id=\\\"hiddenGoodsGrid\\\" />\\r\\n                            <div *ngIf=\\\"componentModel.shipmentDetails && getDetailsCount() >0\\\" class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-5\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-4\\\">\\r\\n                                    <h4 class=\\\"card-title\\\">Detail Goods</h4>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div [ngClass]=\\\"'row '\\\" *ngFor=\\\"let detailRow of componentModel.shipmentDetails; let detailRowIndex = index\\\">\\r\\n                                <ng-container *ngIf=\\\"!detailRow.toRemove\\\">\\r\\n                                    <div class=\\\"col-sm-6\\\">\\r\\n                                        <div [ngClass]=\\\"'row '\\\">\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div [ngClass]=\\\" 'form-group label-floating ' + ((!detailRow.quantity || detailRow.quantity <=0 ) && formShipment.submitted ? ' has-error' : '') \\\">\\r\\n                                                    <label [ngClass]=\\\"componentState >= 0 ? 'control-label' : ''\\\">Quantity <span class=\\\"star \\\">*</span></label>\\r\\n                                                    <input class=\\\"form-control \\\" type=\\\"number\\\" min=\\\"1 \\\" max=\\\"9999 \\\" step=\\\"1 \\\" (input)=\\\"computeTotals() \\\" [(ngModel)]=\\\"detailRow.quantity \\\" id=\\\"shipmentDetail_quantity_{{detailRowIndex}}\\\" name=\\\"shipmentDetail_quantity_{{detailRowIndex}}\\\" class=\\\"form-control\\\"\\r\\n                                                        number=\\\"true \\\" required>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-sm-3\\\">\\r\\n                                                <div [ngClass]=\\\" 'form-group label-floating ' + ((detailRow.packTypeId || detailRow.packTypeId >= 0 )  ? ' is-focused  ' : '') + ((!detailRow.packTypeId || detailRow.packTypeId <=0 ) && formShipment.submitted ? ' has-error' : '') \\\">\\r\\n\\r\\n                                                    <mat-form-field style=\\\"min-width:120px;top: -7px;\\\">\\r\\n                                                        <mat-select placeholder=\\\"PackType\\\" [(ngModel)]=\\\"detailRow.packTypeId\\\" (change)=\\\"onMasterPackTypeChange(detailRow) \\\" name=\\\"shipmentDetail_packtype_{{detailRowIndex}}\\\" required>\\r\\n                                                            <mat-option *ngFor=\\\"let packtype of packTypes\\\" [value]=\\\"packtype.id\\\">\\r\\n                                                                <div class=\\\"row\\\">\\r\\n                                                                    <div class=\\\"col-sm-9\\\" style=\\\"min-width:200px;\\\">\\r\\n                                                                        {{ packtype.description }}\\r\\n                                                                    </div>\\r\\n                                                                    <div *ngIf=\\\"detailRow.packTypeId != packtype.id && packtype.customerId\\\" class=\\\"col-sm-3\\\">\\r\\n                                                                        <button class=\\\"btn btn-simple \\\" (click)=\\\"onClickDeletePackType(detailRow, packtype, $event)\\\" data-placement=\\\"left \\\" rel=\\\"tooltip \\\" title=\\\"Remove item \\\" type=\\\"button \\\">\\r\\n                                                                      <i class=\\\"material-icons \\\" style=\\\"top: -7px;font-size: 20px;\\\">close</i>\\r\\n                                                                     </button>\\r\\n                                                                    </div>\\r\\n                                                                </div>\\r\\n\\r\\n                                                            </mat-option>\\r\\n                                                            <mat-option [value]=\\\"-1\\\">\\r\\n                                                                <i> Add new pack type...</i>\\r\\n                                                            </mat-option>\\r\\n                                                        </mat-select>\\r\\n                                                    </mat-form-field>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-sm-2 \\\">\\r\\n                                                <div [ngClass]=\\\" 'form-group label-floating ' + ((detailRow.length || detailRow.length >= 0 )  ? ' is-focused  ' : '') + ((!detailRow.length || detailRow.length <=0 ) && formShipment.submitted ? ' has-error' : '') \\\">\\r\\n                                                    <label [ngClass]=\\\"componentState >= 0  ? 'control-label' : ''\\\">Length(cm)<span class=\\\"star \\\">*</span></label>\\r\\n                                                    <input class=\\\"form-control \\\" type=\\\"number\\\" min=\\\"1\\\" (input)=\\\"computeTotals()\\\" [(ngModel)]=\\\"detailRow.length\\\" name=\\\"shipmentDetail_length_{{detailRowIndex}} \\\" number=\\\"true\\\" required>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-sm-2 \\\">\\r\\n                                                <div [ngClass]=\\\" 'form-group label-floating ' + ((detailRow.width || detailRow.width >= 0 )  ? ' is-focused  ' : '') + ((!detailRow.width || detailRow.width <=0 ) && formShipment.submitted ? ' has-error' : '') \\\">\\r\\n                                                    <label [ngClass]=\\\"componentState >= 0  ? 'control-label' : ''\\\">Width(cm)<span class=\\\"star \\\">*</span></label>\\r\\n                                                    <input class=\\\"form-control \\\" type=\\\"number\\\" min=\\\"1\\\" (input)=\\\"computeTotals() \\\" [(ngModel)]=\\\"detailRow.width\\\" name=\\\"shipmentDetail_width_{{detailRowIndex}} \\\" number=\\\"true\\\" required>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-sm-2\\\">\\r\\n                                                <div [ngClass]=\\\" 'form-group label-floating ' + ((detailRow.height || detailRow.height >= 0 )  ? ' is-focused  ' : '') + ((!detailRow.height || detailRow.height <=0 ) && formShipment.submitted ? ' has-error' : '') \\\">\\r\\n                                                    <label [ngClass]=\\\"componentState >= 0 ? 'control-label' : ''\\\">Height(cm)<span class=\\\"star \\\">*</span></label>\\r\\n                                                    <input class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"1\\\" (input)=\\\"computeTotals() \\\" [(ngModel)]=\\\"detailRow.height \\\" name=\\\"shipmentDetail_height_{{detailRowIndex}} \\\" number=\\\"true\\\" required>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-2\\\">\\r\\n                                        <div class=\\\"row \\\">\\r\\n                                            <div class=\\\"col-sm-3 \\\">\\r\\n                                                <i class=\\\"material-icons \\\" style=\\\"font-size: 48px \\\">arrow_forward</i>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-sm-6 \\\">\\r\\n                                                <div [ngClass]=\\\" 'form-group label-floating ' + ((!detailRow.weight || detailRow.weight <=0 ) && formShipment.submitted ? ' has-error' : '') \\\">\\r\\n                                                    <label [ngClass]=\\\"componentState  >= 0  ? 'control-label' : ''\\\">Weight(kg)<span class=\\\"star \\\">*</span></label>\\r\\n                                                    <input class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"1 \\\" (input)=\\\"computeTotals() \\\" [(ngModel)]=\\\"detailRow.weight\\\" name=\\\"shipmentDetail_weigth_{{detailRowIndex}} \\\" number=\\\"true \\\" required>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-sm-3 \\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"col-sm-4 \\\">\\r\\n                                        <div class=\\\"row \\\">\\r\\n                                            <div class=\\\"col-sm-3 \\\">\\r\\n                                                <div [ngClass]=\\\" 'form-group label-floating '  + ((detailRow.packTypeDetailId && detailRow.packTypeDetailId>= 0) && (!detailRow.quantityDetail || detailRow.quantityDetail <=0 ) && formShipment.submitted ? ' has-error' : '') \\\">\\r\\n                                                    <label for=\\\" \\\" [ngClass]=\\\"componentState >= 0  ? 'control-label' : ''\\\">\\r\\n                                                        Quantity\\r\\n                                                    </label>\\r\\n                                                    <input class=\\\"form-control \\\" type=\\\"number\\\" min=\\\"1 \\\" max=\\\"9999 \\\" step=\\\"1 \\\" (input)=\\\"computeTotals() \\\" [(ngModel)]=\\\"detailRow.quantityDetail \\\" name=\\\"shipmentDetail_quantityDetail_{{detailRowIndex}}\\\" class=\\\"form-control \\\" number=\\\"true \\\">\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-sm-6 \\\">\\r\\n                                                <div [ngClass]=\\\" 'form-group label-floating '  + ((detailRow.quantityDetail && detailRow.quantityDetail>= 0) && (!detailRow.packTypeDetailId || detailRow.packTypeDetailId <=0 ) && formShipment.submitted ? ' has-error' : '') \\\">\\r\\n\\r\\n\\r\\n                                                    <mat-form-field style=\\\"top: -7px; min-width:120px;\\\">\\r\\n                                                        <mat-select placeholder=\\\"PackType\\\" [(ngModel)]=\\\"detailRow.packTypeDetailId\\\" name=\\\"shipmentDetail_packtypeDetail_{{detailRowIndex}}\\\">\\r\\n                                                            <mat-option *ngFor=\\\"let packtype of packTypes\\\" [value]=\\\"packtype.id\\\">\\r\\n                                                                {{ packtype.description }}\\r\\n                                                            </mat-option>\\r\\n                                                        </mat-select>\\r\\n                                                    </mat-form-field>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-xs-3 \\\">\\r\\n                                                <button class=\\\"btn btn-simple \\\" (click)=\\\"onShipmentDetailsMasterRemove(detailRow, detailRowIndex) \\\" data-placement=\\\"left \\\" rel=\\\"tooltip \\\" title=\\\"Remove item \\\" type=\\\"button \\\">\\r\\n                                        <i class=\\\"material-icons \\\">close</i>\\r\\n                                        </button>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n\\r\\n                            <div>\\r\\n                                <div>\\r\\n                                    <small *ngIf=\\\"(!componentModel.shipmentDetails ||  getDetailsCount() <=0 ) && formShipment.submitted \\\" class=\\\"text-danger \\\">\\r\\n                                  Good are required. You have to add at least one row in goods grid.\\r\\n                               </small></div>\\r\\n                                <div>\\r\\n                                    <button type=\\\"submit \\\" class=\\\"btn btn-fill btn-rose \\\" (click)=\\\"onAddPackageClick() \\\">+ Add more packages</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Total -->\\r\\n            <div class=\\\"row \\\">\\r\\n                <div class=\\\"col-sm-4 \\\">\\r\\n                    <div class=\\\"card \\\">\\r\\n                        <div class=\\\"card-content text-center \\\">\\r\\n                            <span class=\\\"input-group-addon \\\">\\r\\n                                <i class=\\\"fa fa-list fa-2x \\\" aria-hidden=\\\"true \\\"></i>\\r\\n                            </span>\\r\\n                            <div class=\\\"form-group label-floating \\\">\\r\\n                                <h4>Total quantity: {{componentModel.totalQuatity? formatNumber(componentModel.totalQuatity) + ' items': ''}} </h4>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-4 \\\">\\r\\n                    <div class=\\\"card \\\">\\r\\n                        <div class=\\\"card-content text-center \\\">\\r\\n                            <span class=\\\"input-group-addon \\\">\\r\\n                                <i class=\\\"fa fa-cube fa-2x \\\" aria-hidden=\\\"true \\\"></i>\\r\\n                            </span>\\r\\n                            <div class=\\\"form-group label-floating \\\">\\r\\n                                <h4>Total volume: {{componentModel.totalVolume? formatNumber(componentModel.totalVolume) + ' &#13221;': ''}} </h4>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-4 \\\">\\r\\n                    <div class=\\\"card \\\">\\r\\n                        <div class=\\\"card-content text-center \\\">\\r\\n                            <span class=\\\"input-group-addon \\\">\\r\\n                                <i class=\\\"fa fa-balance-scale fa-2x \\\" aria-hidden=\\\"true \\\"></i>\\r\\n                            </span>\\r\\n                            <div class=\\\"form-group label-floating \\\">\\r\\n                                <h4>Total weight: {{componentModel.totalWeight ? formatNumber(componentModel.totalWeight) + ' kg': ''}} </h4>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer text-center \\\">\\r\\n                <button type=\\\"submit \\\" class=\\\"btn btn-rose btn-fill \\\">Save</button>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/shipment-save.component.html\n// module id = ../../../../../src/app/shipment/components/shipment-save.component.html\n// module chunks = main","import { Component, OnInit, AfterViewInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl,\r\n  FormsModule,\r\n  ReactiveFormsModule\r\n} from \"@angular/forms\";\r\nimport { DateAdapter, NativeDateAdapter } from \"@angular/material\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/startWith\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\r\nimport { AuthenticationService } from \"app/authentication/services/authentication.service\";\r\nimport { HelperService } from \"app/shared/common/services/helperService\";\r\nimport { AddressService } from \"app/address/services/address.service\";\r\nimport { ParametersDataService } from \"app/shared/common/services/parameters-data.service\";\r\nimport { TranslateService } from \"app/shared/common/services/localization/translate.service\";\r\nimport { GlobalErrorHandler } from \"app/shared/common/services/globalErrorHandler\";\r\nimport { NotificationService } from \"app/shared/common/services/notification.service\";\r\nimport { ApplicationUser } from \"app/authentication/viewmodels/application-user\";\r\nimport { AddressModel } from \"app/address/models/address-model\";\r\nimport { MatOptionSelectionChange, MatDialog } from \"@angular/material\";\r\nimport { ComponentStateType } from \"app/shared/common/helper/component-state-type\";\r\nimport { ShipmentModel } from \"app/shipment/models/shipment-model\";\r\nimport { TruckParameterModel } from \"app/shared/common/models/parameter/truck-parameter-model\";\r\nimport { RequirementEntityModel } from \"app/shared/common/models/entity/requirement-entity-model\";\r\nimport { RequirementParameterModel } from \"app/shared/common/models/parameter/requirement-parameter-model\";\r\nimport { FacilityParameterModel } from \"app/shared/common/models/parameter/facility-parameter-model\";\r\nimport { FacilityEntityModel } from \"app/shared/common/models/entity/facility-entity-model\";\r\nimport { AvailabilityEntityModel } from \"app/shared/common/models/entity/availability-entity-model\";\r\nimport { TruckEntityModel } from \"app/shared/common/models/entity/truck-entity-model\";\r\nimport { ShipmentDetailModel } from \"app/shipment/models/shipment-detail-model\";\r\nimport { ShipmentTransporterModel } from \"app/shipment/models/shipment-transporter-model\";\r\nimport { ShipmentService } from \"app/shipment/services/shipment.service\";\r\nimport { PackTypeParameterModel } from \"app/shared/common/models/parameter/pack-type-parameter-model\";\r\nimport { PackTypeSaveDialog } from \"app/shipment/components/packtype-save.component\";\r\n\r\ndeclare var google: any;\r\ndeclare var $: any;\r\ndeclare var swal: any;\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: \"app-shipment-save-component\",\r\n  templateUrl: \"./shipment-save.component.html\"\r\n})\r\nexport class ShipmentSaveComponent implements OnInit, AfterViewInit {\r\n\r\n\r\n  currentUser: ApplicationUser;\r\n  /** main component model */\r\n  componentModel: ShipmentModel;\r\n  /** component state : display, add or edit */\r\n  componentState: ComponentStateType;\r\n  /** search controls */\r\n  senderSearchAddressControl = new FormControl(\"\");\r\n  receiverSearchAddressControl = new FormControl(\"\");\r\n\r\n  senderSelectedAddress: AddressModel;\r\n  receiverSelectedAddress: AddressModel;\r\n  senderFoundAddresses: AddressModel[];\r\n  receiverFoundAddresses: AddressModel[];\r\n\r\n  facilitiesData: any;\r\n  requirementsData: any;\r\n  trucksData: any;\r\n  packTypes: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private authenticationService: AuthenticationService,\r\n    private helperService: HelperService,\r\n    private addressService: AddressService,\r\n    private shipmentService: ShipmentService,\r\n    private parametersDataService: ParametersDataService,\r\n    private translateService: TranslateService,\r\n    private errorHandler: GlobalErrorHandler,\r\n    private notificationService: NotificationService,\r\n    private dateAdapter: DateAdapter<NativeDateAdapter>,\r\n    public dialog: MatDialog\r\n  ) {\r\n    // set datepickerlocale\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.authenticationService.getCurrentUser();\r\n\r\n    // get component state\r\n    this.componentState = this.helperService.getComponentStateByUrl(\r\n      this.router.url\r\n    ) as ComponentStateType;\r\n\r\n    // create search FormControl\r\n    this.senderSearchAddressControl = new FormControl();\r\n    this.receiverSearchAddressControl = new FormControl();\r\n    this.senderFoundAddresses = new Array<AddressModel>();\r\n    this.receiverFoundAddresses = new Array<AddressModel>();\r\n\r\n    // get component state\r\n    this.componentState = this.helperService.getComponentStateByUrl(\r\n      this.router.url\r\n    ) as ComponentStateType;\r\n    // load required data\r\n    this.loadComponentModel(this.componentState).subscribe(modelLoaded => {\r\n      if (modelLoaded) {\r\n        this.loadParamsData().subscribe(paramsDataLoaded => {\r\n          if (this.componentState > 0) {\r\n            this.shipmentService.sendShipmentModel({\r\n              operation: 'loaded',\r\n              shipment: this.componentModel\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.initSenderSearchAddresses();\r\n    this.initReceiverSearchAddresses();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const self = this;\r\n    setTimeout(function () {\r\n      self.setCursorToFirstElement();\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * On save click\r\n   * @param model\r\n   * @param isValid\r\n   */\r\n  save(model: ShipmentModel, isValid: boolean) {\r\n    console.log(model);\r\n    console.log(model, isValid);\r\n    console.log(this.componentModel);\r\n    if (this.isModelValid() && isValid) {\r\n      this.shipmentService.save(this.componentModel, this.translateService.currentLanguage)\r\n        .subscribe(shipmentId => {\r\n          if (this.componentState === ComponentStateType.add) {\r\n            this.router.navigate([\r\n              \"/shipment-overview/shipment-edit/\" + shipmentId\r\n            ]);\r\n            this.notificationService.show(\"Shipment created.\", \"success\", \"center\", \"top\");\r\n          } else {\r\n            //// send data to addreess coponent to be updated\r\n            // this.addressService.sendAddressModel(this.componentModel);\r\n            this.notificationService.show(\"Shipment saved. \", \"success\", \"center\", \"top\");\r\n\r\n            this.shipmentService.sendShipmentModel({\r\n              operation: 'saved',\r\n              shipment: this.componentModel\r\n            });\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load component model, or create a new one if component state is = Add\r\n   * @param componentState\r\n   */\r\n  private loadComponentModel(componentState: ComponentStateType): Observable<boolean> {\r\n    return Observable.create(observer => {\r\n      if (componentState === ComponentStateType.add) {\r\n        this.componentModel = new ShipmentModel();\r\n        this.componentModel.id = -1;\r\n        this.componentModel.customerId = this.currentUser.customerId;\r\n\r\n        this.componentModel.senderAddressInfo = \"\";\r\n        this.componentModel.senderFacilities = new Array<FacilityEntityModel>();\r\n        this.componentModel.senderRequirements = new Array<\r\n          RequirementEntityModel>\r\n          ();\r\n        this.componentModel.senderTrucks = new Array<TruckEntityModel>();\r\n        // receiver region\r\n        this.componentModel.receiverAddressInfo = \"\";\r\n        this.componentModel.receiverFacilities = new Array<\r\n          FacilityEntityModel>\r\n          ();\r\n        this.componentModel.receiverRequirements = new Array<RequirementEntityModel>();\r\n        this.componentModel.receiverTrucks = new Array<TruckEntityModel>();\r\n\r\n        this.componentModel.shipmentDetails = new Array<ShipmentDetailModel>();\r\n        this.componentModel.shipmentTransporters = new Array<ShipmentTransporterModel>();\r\n\r\n        observer.next(true);\r\n      } else {\r\n        let shipmentId = 0;\r\n        this.route.params.forEach((params: Params) => {\r\n          shipmentId = params[\"id\"];\r\n        });\r\n        this.shipmentService.get(shipmentId, this.currentUser.customerId, this.translateService.currentLanguage)\r\n          .subscribe(result => {\r\n            result.pickUpDate = new Date(result.pickUpDate);\r\n            result.deliveryDate = new Date(result.deliveryDate);\r\n            this.componentModel = result as ShipmentModel;\r\n\r\n            //// load sender address\r\n            this.addressService.get(this.componentModel.senderAddressId, this.currentUser.customerId, this.translateService.currentLanguage)\r\n              .subscribe(\r\n              senderAddress => {\r\n                if (result) {\r\n                  this.senderSelectedAddress = senderAddress as AddressModel;\r\n                  this.senderSearchAddressControl = new FormControl(\r\n                    this.senderSelectedAddress.name\r\n                  );\r\n                  this.initSenderSearchAddresses();\r\n                  this.componentModel.senderAddressInfo =\r\n                    this.senderSelectedAddress.location.street +\r\n                    \", \" +\r\n                    this.senderSelectedAddress.location.streetNumber +\r\n                    \", \" +\r\n                    this.senderSelectedAddress.location.zipCode +\r\n                    \", \" +\r\n                    this.senderSelectedAddress.location.city;\r\n                }\r\n              },\r\n              error => {\r\n                this.errorHandler.handleError(\r\n                  \"Error on retrieving sender address for this shipment. Please contact and administrator!\"\r\n                );\r\n              }\r\n              );\r\n\r\n            //// load receiver address\r\n            this.addressService.get(this.componentModel.receiverAddressId, this.currentUser.customerId, this.translateService.currentLanguage)\r\n              .subscribe(\r\n              receiverAddress => {\r\n                if (result) {\r\n                  this.receiverSelectedAddress = receiverAddress as AddressModel;\r\n                  this.receiverSearchAddressControl = new FormControl(\r\n                    this.receiverSelectedAddress.name\r\n                  );\r\n                  this.initReceiverSearchAddresses();\r\n\r\n                  this.componentModel.receiverAddressInfo =\r\n                    this.receiverSelectedAddress.location.street +\r\n                    \", \" +\r\n                    this.receiverSelectedAddress.location.streetNumber +\r\n                    \", \" +\r\n                    this.receiverSelectedAddress.location.zipCode +\r\n                    \", \" +\r\n                    this.receiverSelectedAddress.location.city;\r\n                }\r\n              },\r\n              error => {\r\n                this.errorHandler.handleError(\r\n                  \"Error on retrieving receiver address for this shipment. Please contact and administrator!\"\r\n                );\r\n              }\r\n              );\r\n            console.log(this.componentModel);\r\n            const self = this;\r\n            observer.next(true);\r\n          },\r\n          error => {\r\n            this.errorHandler.handleError(error);\r\n            observer.next(false);\r\n          }\r\n          );\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Load required data used to render form\r\n   */\r\n  private loadParamsData(): Observable<boolean> {\r\n    return Observable.create(observer => {\r\n      // return new Promise((resolve, reject) => {\r\n      Observable.forkJoin([\r\n        this.parametersDataService.getAddressRequirementsParameters(\r\n          this.translateService.currentLanguage\r\n        ),\r\n        this.parametersDataService.getPackTypes(\r\n          this.translateService.currentLanguage\r\n        )\r\n      ]).subscribe(\r\n        data => {\r\n          this.facilitiesData = data[0][\"facilities\"] as any;\r\n          this.requirementsData = data[0][\"requirements\"] as any;\r\n          this.trucksData = data[0][\"trucks\"] as any;\r\n          this.packTypes = data[1] as any;\r\n          this.componentModel.senderFacilities = this.parametersDataService.generateFacilityEntitiesList(\r\n            this.componentModel.id,\r\n            this.facilitiesData,\r\n            this.componentModel.senderFacilities\r\n          );\r\n          this.componentModel.senderRequirements = this.parametersDataService.generateRequirementsEntitiesList(\r\n            this.componentModel.id,\r\n            this.requirementsData,\r\n            this.componentModel.senderRequirements\r\n          );\r\n          this.componentModel.senderTrucks = this.parametersDataService.generateTruksEntitiesList(\r\n            this.componentModel.id,\r\n            this.trucksData,\r\n            this.componentModel.senderTrucks\r\n          );\r\n\r\n          this.componentModel.receiverFacilities = this.parametersDataService.generateFacilityEntitiesList(\r\n            this.componentModel.id,\r\n            this.facilitiesData,\r\n            this.componentModel.receiverFacilities\r\n          );\r\n          this.componentModel.receiverRequirements = this.parametersDataService.generateRequirementsEntitiesList(\r\n            this.componentModel.id,\r\n            this.requirementsData,\r\n            this.componentModel.receiverRequirements\r\n          );\r\n          this.componentModel.receiverTrucks = this.parametersDataService.generateTruksEntitiesList(\r\n            this.componentModel.id,\r\n            this.trucksData,\r\n            this.componentModel.receiverTrucks\r\n          );\r\n          observer.next(true);\r\n          //   resolve(true);\r\n        },\r\n        error => {\r\n          this.errorHandler.handleError(error);\r\n          observer.next(false);\r\n        }\r\n        );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On sender address selected\r\n   * @param event\r\n   * @param address\r\n   */\r\n  onSenderAddressSelected(event: MatOptionSelectionChange, address: AddressModel) {\r\n    if (address == null) {\r\n      this.router.navigate(['/address-add']);\r\n      return;\r\n    }\r\n    this.senderSelectedAddress = address as AddressModel;\r\n    this.addressService\r\n      .get(\r\n      address.id,\r\n      this.currentUser.customerId,\r\n      this.translateService.currentLanguage\r\n      )\r\n      .subscribe(\r\n      result => {\r\n        if (result) {\r\n          this.senderSelectedAddress = result as AddressModel;\r\n\r\n          this.componentModel.senderAddressId = address.id;\r\n          this.componentModel.senderAddressInfo =\r\n            this.senderSelectedAddress.location.street +\r\n            \", \" +\r\n            this.senderSelectedAddress.location.streetNumber +\r\n            \", \" +\r\n            this.senderSelectedAddress.location.zipCode +\r\n            \", \" +\r\n            this.senderSelectedAddress.location.city;\r\n          this.componentModel.senderContactPerson = this.senderSelectedAddress.contactPerson;\r\n          this.componentModel.senderPhone = this.senderSelectedAddress.phone;\r\n          this.componentModel.senderRemark = this.senderSelectedAddress.remark;\r\n          this.componentModel.senderFacilities = this.senderSelectedAddress.facilities;\r\n          this.componentModel.senderRequirements = this.senderSelectedAddress.requirements;\r\n          this.componentModel.senderTrucks = this.senderSelectedAddress.trucks;\r\n\r\n          this.componentModel.senderFacilities = this.parametersDataService.generateFacilityEntitiesList(this.componentModel.id, this.facilitiesData, this.senderSelectedAddress.facilities);\r\n          this.componentModel.senderRequirements = this.parametersDataService.generateRequirementsEntitiesList(this.componentModel.id, this.requirementsData, this.senderSelectedAddress.requirements);\r\n          this.componentModel.senderTrucks = this.parametersDataService.generateTruksEntitiesList(this.componentModel.id, this.trucksData, this.senderSelectedAddress.trucks);\r\n\r\n          if (this.componentModel.pickUpDate && this.senderSelectedAddress.availabilities) {\r\n            this.componentModel.senderAvailabilities = [];\r\n            if (this.componentModel.pickUpDate && this.senderSelectedAddress.availabilities) {\r\n              this.componentModel.senderAvailabilities.push(\r\n                this.getAvailability(\r\n                  this.componentModel.pickUpDate,\r\n                  this.senderSelectedAddress.availabilities\r\n                ));\r\n            }\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.errorHandler.handleError(error);\r\n      }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * On pickupdate selected\r\n   * @param event\r\n   */\r\n  onPickupDateSelected(event: any) {\r\n    if (\r\n      this.componentModel.pickUpDate &&\r\n      this.senderSelectedAddress &&\r\n      this.senderSelectedAddress.availabilities\r\n    ) {\r\n      this.componentModel.senderAvailabilities = [];\r\n      if (this.componentModel.pickUpDate) {\r\n        this.componentModel.senderAvailabilities.push(\r\n          this.getAvailability(\r\n            this.componentModel.pickUpDate,\r\n            this.senderSelectedAddress.availabilities\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On sender address selected\r\n   * @param event\r\n   * @param address\r\n   */\r\n  onReceiverAddressSelected(event: MatOptionSelectionChange, address: AddressModel) {\r\n    if (address == null) {\r\n      this.router.navigate(['/address-add']);\r\n      return;\r\n    }\r\n    this.receiverSelectedAddress = address as AddressModel;\r\n    this.addressService.get(address.id, this.currentUser.customerId, this.translateService.currentLanguage)\r\n      .subscribe(result => {\r\n        if (result) {\r\n          this.receiverSelectedAddress = result as AddressModel;\r\n          console.log(result);\r\n\r\n          this.componentModel.receiverAddressId = address.id;\r\n          this.componentModel.receiverAddressInfo =\r\n            this.receiverSelectedAddress.location.street +\r\n            \", \" +\r\n            this.receiverSelectedAddress.location.streetNumber +\r\n            \", \" +\r\n            this.receiverSelectedAddress.location.zipCode +\r\n            \", \" +\r\n            this.receiverSelectedAddress.location.city;\r\n          this.componentModel.receiverContactPerson = this.receiverSelectedAddress.contactPerson;\r\n          this.componentModel.receiverPhone = this.receiverSelectedAddress.phone;\r\n          this.componentModel.receiverRemark = this.receiverSelectedAddress.remark;\r\n          this.componentModel.receiverFacilities = this.receiverSelectedAddress.facilities;\r\n          this.componentModel.receiverRequirements = this.receiverSelectedAddress.requirements;\r\n          this.componentModel.receiverTrucks = this.receiverSelectedAddress.trucks;\r\n\r\n          this.componentModel.receiverFacilities = this.parametersDataService.generateFacilityEntitiesList(\r\n            this.componentModel.id,\r\n            this.facilitiesData,\r\n            this.receiverSelectedAddress.facilities\r\n          );\r\n          this.componentModel.receiverRequirements = this.parametersDataService.generateRequirementsEntitiesList(\r\n            this.componentModel.id,\r\n            this.requirementsData,\r\n            this.receiverSelectedAddress.requirements\r\n          );\r\n          this.componentModel.receiverTrucks = this.parametersDataService.generateTruksEntitiesList(\r\n            this.componentModel.id,\r\n            this.trucksData,\r\n            this.receiverSelectedAddress.trucks\r\n          );\r\n\r\n          this.componentModel.receiverAvailabilities = [];\r\n          if (\r\n            this.componentModel.deliveryDate &&\r\n            this.receiverSelectedAddress.availabilities\r\n          ) {\r\n            this.componentModel.receiverAvailabilities.push(\r\n              this.getAvailability(\r\n                this.componentModel.deliveryDate,\r\n                this.receiverSelectedAddress.availabilities\r\n              )\r\n            );\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this.errorHandler.handleError(error);\r\n      }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * On pickupdate selected\r\n   * @param event\r\n   */\r\n  onDeliveryDateSelected(event: any) {\r\n    if (this.componentModel.deliveryDate && this.receiverSelectedAddress && this.receiverSelectedAddress.availabilities) {\r\n      this.componentModel.receiverAvailabilities = [];\r\n      if (this.componentModel.deliveryDate && this.receiverSelectedAddress.availabilities) {\r\n        this.componentModel.receiverAvailabilities.push(\r\n          this.getAvailability(this.componentModel.deliveryDate, this.receiverSelectedAddress.availabilities)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private getAvailability(selectedData: Date, availabilities: AvailabilityEntityModel[]) {\r\n    let pickupDateDay = selectedData.getDay();\r\n    pickupDateDay = pickupDateDay === 0 ? 7 : pickupDateDay;\r\n\r\n    let availability = null;\r\n    if (availabilities.length === 1 && availabilities[0].day === 0) {\r\n      availability = availabilities[0];\r\n    } else {\r\n      availability = availabilities.find(item => item.day === pickupDateDay);\r\n    }\r\n    availability.id = -1;\r\n    return availability;\r\n  }\r\n\r\n  private initSenderSearchAddresses() {\r\n    this.senderSearchAddressControl.valueChanges\r\n      .startWith(null)\r\n      .debounceTime(600)\r\n      .subscribe(term => {\r\n        const searchTerm = term && term.length > 0 ? term : \"\";\r\n        this.searchSenderAddresses(searchTerm);\r\n      });\r\n  }\r\n\r\n  private initReceiverSearchAddresses() {\r\n    this.receiverSearchAddressControl.valueChanges\r\n      .startWith(null)\r\n      .debounceTime(600)\r\n      .subscribe(term => {\r\n        const searchTerm = term && term.length > 0 ? term : \"\";\r\n        this.searchReceiverAddresses(searchTerm);\r\n      });\r\n  }\r\n\r\n  private searchSenderAddresses(searchTerm: string) {\r\n    if (this.currentUser && this.currentUser.customerId) {\r\n      this.addressService.getAll(this.currentUser.customerId, searchTerm, 0, 1000, this.translateService.currentLanguage).subscribe(result => {\r\n        this.senderFoundAddresses = result;\r\n      },\r\n        error => {\r\n          this.errorHandler.handleError(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private searchReceiverAddresses(searchTerm: string) {\r\n    if (this.currentUser && this.currentUser.customerId) {\r\n      this.addressService.getAll(this.currentUser.customerId, searchTerm, 0, 1000, this.translateService.currentLanguage).subscribe(result => {\r\n        this.receiverFoundAddresses = result;\r\n      },\r\n        error => {\r\n          this.errorHandler.handleError(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add package row when add package is clicked\r\n   */\r\n  onAddPackageClick(): boolean {\r\n    if (!this.componentModel.shipmentDetails) {\r\n      this.componentModel.shipmentDetails = [];\r\n    }\r\n    const shipmentpackage = new ShipmentDetailModel();\r\n    shipmentpackage.id = -1;\r\n\r\n    this.componentModel.shipmentDetails.push(shipmentpackage);\r\n\r\n    const latestIndex = this.componentModel.shipmentDetails.filter(item => !item.toRemove).length - 1;\r\n    // set focus on latest index first control\r\n    setTimeout(function () {\r\n      const element = document.getElementById('shipmentDetail_quantity_' + latestIndex.toString());\r\n      if (element) {\r\n        element.focus();\r\n      }\r\n    }, 500);\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Add extra row when master pack is selected\r\n   * @param currentShipmentRow\r\n   */\r\n  onMasterPackTypeChange(currentDetailsRow: ShipmentDetailModel): void {\r\n    debugger;\r\n    //// add new item option has id -1\r\n    if (currentDetailsRow.packTypeId <= 0) {\r\n      // open dialog\r\n      const dialogRef = this.dialog.open(PackTypeSaveDialog, {\r\n        width: '350px',\r\n        data: new PackTypeParameterModel(),\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          const packtype = result as PackTypeParameterModel;\r\n          this.packTypes.push(result);\r\n          currentDetailsRow.packTypeId = result.id;\r\n\r\n          currentDetailsRow.length = packtype.packLength;\r\n          currentDetailsRow.height = packtype.packHeight;\r\n          currentDetailsRow.width = packtype.packWidth;\r\n\r\n          this.computeTotals();\r\n        }\r\n      });\r\n    } else {\r\n      const selectedPacktype = this.packTypes.find(item => item.id === currentDetailsRow.packTypeId);\r\n      if (selectedPacktype) {\r\n        currentDetailsRow.length = selectedPacktype.packLength;\r\n        currentDetailsRow.height = selectedPacktype.packHeight;\r\n        currentDetailsRow.width = selectedPacktype.packWidth;\r\n\r\n        this.computeTotals();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On click delete packtype\r\n   * @param packtype\r\n   * @param event\r\n   */\r\n  onClickDeletePackType(currentDetailsRow: ShipmentDetailModel, packtype: PackTypeParameterModel, event): boolean {\r\n    // stop selecting item\r\n    event.stopPropagation();\r\n\r\n    const self = this;\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\"\r\n    })\r\n      // delete confirmed\r\n      .then(\r\n      function () {\r\n        self.parametersDataService.deletePackType(packtype.id, self.currentUser.customerId)\r\n          .subscribe(\r\n          result => {\r\n            if (result) {\r\n              swal(\"Deleted!\", \"Packtype has been deleted.\", \"success\");\r\n              // update model\r\n              self.packTypes = self.packTypes.filter(\r\n                item => item.id !== packtype.id\r\n              );\r\n              currentDetailsRow.packTypeId = null;\r\n            } else {\r\n              swal(\r\n                \"Not Deleted!\",\r\n                \"An error occured. Packtype has not been deleted.  Please contact an administrator.\",\r\n                \"error\"\r\n              );\r\n            }\r\n          },\r\n          error => {\r\n            swal(\r\n              \"Not Deleted!\",\r\n              \"An error occured. Packtype has not been deleted.  Please contact an administrator.\",\r\n              \"error\"\r\n            );\r\n            self.errorHandler.handleError(error);\r\n          }\r\n          );\r\n      },\r\n      // delete canceled\r\n      function (dismiss) {\r\n        // dismiss can be 'cancel', 'overlay',\r\n        // 'close', and 'timer'\r\n        if (dismiss === \"cancel\") {\r\n          swal(\"Cancelled\", \"Packtype is safe :)\", \"error\");\r\n        }\r\n      }\r\n      );\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n * Add extra row when master pack is selected\r\n * @param currentShipmentRow\r\n */\r\n  onClickAddPackType(currentDetailsRow: ShipmentDetailModel): boolean {\r\n    let packType = new PackTypeParameterModel();\r\n    packType.code = currentDetailsRow.addedPackType;\r\n    packType.description = currentDetailsRow.addedPackType;\r\n\r\n    this.parametersDataService.savePackType(packType, this.translateService.currentLanguage).subscribe(packtypeid => {\r\n      if (packtypeid > 0) {\r\n        packType.id = packtypeid;\r\n\r\n        this.notificationService.show('Packtype created', 'success', 'center', 'top');\r\n        this.packTypes.push(packType);\r\n        currentDetailsRow.packTypeId = packtypeid;\r\n      }\r\n    }, error => {\r\n      this.errorHandler.handleError(error);\r\n    })\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * Add extra row when master pack is selected\r\n   * @param currentShipmentRow\r\n   */\r\n  onShipmentDetailsMasterRemove(currentShipmentRow: ShipmentDetailModel, index: number\r\n  ): void {\r\n    if (currentShipmentRow.id > 0) {\r\n      currentShipmentRow.toRemove = true;\r\n    } else {\r\n      this.componentModel.shipmentDetails.splice(index, 1);\r\n    }\r\n\r\n    this.computeTotals();\r\n  }\r\n\r\n\r\n  /**\r\n   * Compute totals\r\n   */\r\n  computeTotals() {\r\n    let totalQuantity = 0;\r\n    let totalVolume = 0;\r\n    let totalWeight = 0;\r\n    if (this.componentModel && this.componentModel.shipmentDetails && this.componentModel.shipmentDetails.filter(item => !item.toRemove)\r\n      .length > 0\r\n    ) {\r\n      const rows = this.componentModel.shipmentDetails.filter(\r\n        item => !item.toRemove\r\n      );\r\n      for (let i = 0; i < rows.length; i++) {\r\n        const shipmentDetail = rows[i];\r\n        if (shipmentDetail.quantity)\r\n          totalQuantity += +shipmentDetail.quantity;\r\n        if (shipmentDetail.quantity && shipmentDetail.weight)\r\n          totalWeight += +shipmentDetail.weight;\r\n        if (shipmentDetail.quantity && shipmentDetail.length && shipmentDetail.width && shipmentDetail.height)\r\n          totalVolume += +shipmentDetail.quantity * (+shipmentDetail.length / 100 * (+shipmentDetail.width / 100) * (+shipmentDetail.height / 100));\r\n      }\r\n    }\r\n\r\n    this.componentModel.totalQuatity = totalQuantity;\r\n    this.componentModel.totalWeight = totalWeight;\r\n    this.componentModel.totalVolume = totalVolume;\r\n  }\r\n\r\n  private isModelValid(): boolean {\r\n\r\n    if (!this.senderSelectedAddress) {\r\n      this.helperService.scrollOnElement('senderSearchAddress');\r\n      this.helperService.setFocusOnElement('senderSearchAddress');\r\n      return false;\r\n    }\r\n\r\n    if (!this.componentModel.pickUpDate ||\r\n      (!this.componentModel.senderAvailabilities || (this.componentModel.senderAvailabilities && this.componentModel.senderAvailabilities.length === 1 && this.componentModel.senderAvailabilities[0].isClosed))) {\r\n      this.helperService.scrollOnElement('pickUpDate');\r\n      this.helperService.setFocusOnElement('pickUpDate');\r\n      return false;\r\n    }\r\n\r\n    if (!this.componentModel.senderContactPerson || this.componentModel.senderContactPerson.length <= 0) {\r\n      this.helperService.scrollOnElement('senderContactPerson');\r\n      this.helperService.setFocusOnElement('senderContactPerson');\r\n      return false;\r\n    }\r\n\r\n\r\n    if (!this.componentModel.senderPhone || this.componentModel.senderPhone.length <= 0) {\r\n      this.helperService.scrollOnElement('senderPhone');\r\n      this.helperService.setFocusOnElement('senderPhone');\r\n      return false;\r\n    }\r\n\r\n\r\n    if (!this.receiverSelectedAddress) {\r\n      this.helperService.scrollOnElement('receiverSearchAddress');\r\n      this.helperService.setFocusOnElement('receiverSearchAddress');\r\n      return false;\r\n    }\r\n\r\n    if (!this.componentModel.deliveryDate ||\r\n      (!this.componentModel.receiverAvailabilities || (this.componentModel.receiverAvailabilities && this.componentModel.receiverAvailabilities.length === 1 &&\r\n        this.componentModel.receiverAvailabilities[0].isClosed))) {\r\n      this.helperService.scrollOnElement('deliveryDate');\r\n      this.helperService.setFocusOnElement('deliveryDate');\r\n      return false;\r\n    }\r\n\r\n\r\n    if (!this.componentModel.receiverContactPerson || this.componentModel.receiverContactPerson.length <= 0) {\r\n      this.helperService.scrollOnElement('receiverContactPerson');\r\n      this.helperService.setFocusOnElement('receiverContactPerson');\r\n      return false;\r\n    }\r\n\r\n\r\n    if (!this.componentModel.receiverPhone || this.componentModel.receiverPhone.length <= 0) {\r\n      this.helperService.scrollOnElement('receiverPhone');\r\n      this.helperService.setFocusOnElement('receiverPhone');\r\n      return false;\r\n    }\r\n\r\n\r\n    if ((!this.componentModel.shipmentDetails || this.componentModel.shipmentDetails.filter(item => !item.toRemove).length <= 0)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private setCursorToFirstElement() {\r\n    if (this.componentState === ComponentStateType.add) {\r\n      const element = document.getElementById(\"reference\");\r\n      if (element) {\r\n        element.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  formatNumber(number: number) {\r\n    const str = number.toFixed(3).replace(/\\.000$/, \"\");\r\n    return str;\r\n  }\r\n\r\n  getDetailsCount(): number {\r\n    return this.componentModel.shipmentDetails.filter(item => !item.toRemove).length;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/components/shipment-save.component.ts","export class ShipmentDetailModel {\r\n  public id: number;\r\n  public shipmentId: number;\r\n  public quantity: number;\r\n  public packTypeId: number;\r\n  public length: number;\r\n  public width: number;\r\n  public height: number;\r\n  public weight: number;\r\n  public toRemove: boolean;\r\n\r\n  public quantityDetail: number;\r\n  public packTypeDetailId: number;\r\n\r\n  // property used to store value of new created packtype\r\n  public addedPackType: string;\r\n\r\n  public userIdCreated: number;\r\n  public dateCreated: Date;\r\n  public userIdModified: number;\r\n  public dateModified: Date;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/models/shipment-detail-model.ts","import { AvailabilityEntityModel } from 'app/shared/common/models/entity/availability-entity-model';\r\nimport { ShipmentTransporterModel } from 'app/shipment/models/shipment-transporter-model';\r\nimport { ShipmentDetailModel } from 'app/shipment/models/shipment-detail-model';\r\nimport { FacilityEntityModel } from 'app/shared/common/models/entity/facility-entity-model';\r\nimport { TruckEntityModel } from 'app/shared/common/models/entity/truck-entity-model';\r\nimport { RequirementEntityModel } from 'app/shared/common/models/entity/requirement-entity-model';\r\n\r\nexport class ShipmentModel {\r\n  public id: number;\r\n  public reference: string;\r\n  public poNumber: string;\r\n  public pickUpDate: Date;\r\n  public deliveryDate: Date;\r\n  public customerId: number;\r\n  // sender region\r\n  public senderAddressId: number;\r\n  public senderAddressInfo: string;\r\n  public addressFrom: string;\r\n  public senderAddressName: string;\r\n  public senderContactPerson: string;\r\n  public senderPhone: string;\r\n  public senderRemark: string;\r\n  public senderAvailabilities: AvailabilityEntityModel[];\r\n  public senderFacilities: Array<FacilityEntityModel>;\r\n  public senderRequirements: Array<RequirementEntityModel>;\r\n  public senderTrucks: Array<TruckEntityModel>;\r\n  // receiver region\r\n  public receiverAddressId: number;\r\n  public receiverAddressName: string;\r\n  public receiverAddressInfo: string;\r\n  public addressTo: string;\r\n  public receiverContactPerson: string;\r\n  public receiverPhone: string;\r\n  public receiverRemark: string;\r\n  public receiverAvailabilities: AvailabilityEntityModel[];\r\n  public receiverFacilities: Array<FacilityEntityModel>;\r\n  public receiverRequirements: Array<RequirementEntityModel>;\r\n  public receiverTrucks: Array<TruckEntityModel>;\r\n\r\n  // open market\r\n  public offerCount: number;\r\n\r\n  public totalPrice: number;\r\n  public totalVolume: number;\r\n  public totalQuatity: number;\r\n  public totalWeight: number;\r\n  public shipmentStatus: string;\r\n  public transporterId: number;\r\n  public shipmentDetails: Array<ShipmentDetailModel>;\r\n  public shipmentTransporters: Array<ShipmentTransporterModel>;\r\n\r\n  public userIdCreated: number;\r\n  public dateCreated: Date;\r\n  public userIdModified: number;\r\n  public userModified: string;\r\n  public userCreated: string;\r\n  public dateModified: Date;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/models/shipment-model.ts","import { ShipmentModel } from 'app/shipment/models/shipment-model';\r\n\r\nexport class ShipmentRowViewModel {\r\n  public viewActions: boolean;\r\n  public viewEdit: boolean;\r\n  public showViewLoader: boolean;\r\n  public shipment: ShipmentModel;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/models/shipment-row-viewmodel.ts","export enum ShipmentTransporterStatus {\r\n  unassigned = 0,\r\n  openMarket = 1,\r\n  assigned = 2,\r\n  completed = 3\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/models/shipment-transporter-status.ts","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Headers, Http, Response, RequestOptions } from \"@angular/http\";\r\nimport { HttpService } from \"app/shared/common/services/httpService\";\r\nimport { Constants } from \"app/shared/common/constants\";\r\nimport { GlobalErrorHandler } from \"app/shared/common/services/globalErrorHandler\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { ShipmentModel } from \"app/shipment/models/shipment-model\";\r\nimport { ShipmentTransporterFilterModel } from \"app/shipment/models/shipment-transporter-filter-model\";\r\n\r\n@Injectable()\r\nexport class ShipmentService {\r\n  private serviceUrl = Constants.serverUrl + \"api/Shipments/\";\r\n  private shipmentModel = new BehaviorSubject<any>(null);\r\n  shipmentModelReceivedHandler$ = this.shipmentModel.asObservable();\r\n  sendShipmentModel(value) {\r\n    this.shipmentModel.next(value);\r\n  }\r\n  // don't forget to reset handler\r\n  resetSendShipmentModelHandler() {\r\n    this.shipmentModel.next(null);\r\n  }\r\n\r\n  constructor(\r\n    public http: HttpService,\r\n    private errorHandler: GlobalErrorHandler\r\n  ) { }\r\n\r\n  /**\r\n   * get biometrics\r\n   * @param employeeEncryptedData\r\n   * @param language\r\n   */\r\n  get(\r\n    id: number,\r\n    customerId: number,\r\n    language: string\r\n  ): Observable<ShipmentModel> {\r\n    return this.http\r\n      .get(\r\n      this.serviceUrl + \"get\" + \"/\" + id + \"/\" + customerId + \"/\" + language\r\n      )\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n   * Get all shipments\r\n   * @param customerId\r\n   * @param startItem\r\n   * @param numberOfRetrievedItems\r\n   * @param language\r\n   */\r\n  getAll(\r\n    customerId: number,\r\n    shipmentStatus: number,\r\n    getPending: boolean,\r\n    startItem: number,\r\n    numberOfRetrievedItems: number,\r\n    language: string\r\n  ): Observable<ShipmentModel[]> {\r\n    return this.http\r\n      .get(\r\n      this.serviceUrl +\r\n      \"getAll\" +\r\n      \"/\" +\r\n      customerId +\r\n      \"/\" +\r\n      shipmentStatus +\r\n      \"/\" +\r\n      getPending +\r\n      \"/\" +\r\n      startItem +\r\n      \"/\" +\r\n      numberOfRetrievedItems +\r\n      \"/\" +\r\n      language\r\n      )\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n* Get number of shipments, used for paging\r\n* @param customerId\r\n* @param startItem\r\n* @param numberOfRetrievedItems\r\n* @param language\r\n*/\r\n  getCount(\r\n    customerId: number,\r\n    shipmentStatus: number,\r\n    language: string\r\n  ): Observable<number> {\r\n    return this.http\r\n      .get(\r\n      this.serviceUrl +\r\n      \"getCount\" +\r\n      \"/\" +\r\n      customerId +\r\n      \"/\" +\r\n      shipmentStatus +\r\n      \"/\" +\r\n      language\r\n      )\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n   * Save shipment\r\n   * @param medicalEncryptedData\r\n   * @param componentName\r\n   * @param language\r\n   */\r\n  save(model: ShipmentModel, language: string) {\r\n    const headers = new Headers({ \"Content-Type\": \"application/json\" });\r\n    const data = JSON.stringify(model);\r\n\r\n    return this.http\r\n      .post(this.serviceUrl + \"save/\" + language, data, { headers })\r\n      .map(response => response.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n * assignToOpenMarket shipment\r\n * @param medicalEncryptedData\r\n * @param componentName\r\n * @param language\r\n */\r\n  assignToOpenMarket(shipmentId: number, customerId: number, language: string) {\r\n    const headers = new Headers({ \"Content-Type\": \"application/json\" });\r\n    const data = JSON.stringify({});\r\n\r\n    return this.http\r\n      .post(\r\n      this.serviceUrl +\r\n      \"assignToOpenMarket/\" +\r\n      shipmentId +\r\n      \"/\" +\r\n      customerId +\r\n      \"/\" +\r\n      language,\r\n      data,\r\n      { headers }\r\n      )\r\n      .map(response => response.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n * moveToUnassigned shipment\r\n * @param medicalEncryptedData\r\n * @param componentName\r\n * @param language\r\n */\r\n  moveToUnassigned(shipmentId: number, customerId: number, language: string) {\r\n    const headers = new Headers({ \"Content-Type\": \"application/json\" });\r\n    const data = JSON.stringify({});\r\n\r\n    return this.http\r\n      .post(\r\n      this.serviceUrl +\r\n      \"moveToUnassigned/\" +\r\n      shipmentId +\r\n      \"/\" +\r\n      customerId +\r\n      \"/\" +\r\n      language,\r\n      data,\r\n      { headers }\r\n      )\r\n      .map(response => response.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n\r\n  /**\r\n  * Delete shipment\r\n  * @param medicalEncryptedData\r\n  * @param componentName\r\n  * @param language\r\n  */\r\n  delete(shipmentId: number, customerId: number, language: string) {\r\n    return this.http\r\n      .delete(\r\n      this.serviceUrl +\r\n      \"delete/\" +\r\n      shipmentId +\r\n      \"/\" +\r\n      customerId +\r\n      \"/\" +\r\n      language\r\n      )\r\n      .map(response => response.json());\r\n  }\r\n\r\n  /**\r\n * Get all shipments\r\n * @param customerId\r\n * @param startItem\r\n * @param numberOfRetrievedItems\r\n * @param language\r\n */\r\n  getShipmentFilters(\r\n    customerId: number,\r\n    language: string\r\n  ): Observable<ShipmentTransporterFilterModel[]> {\r\n    return this.http\r\n      .get(\r\n      this.serviceUrl +\r\n      \"getShipmentFilters\" +\r\n      \"/\" +\r\n      customerId +\r\n      \"/\" +\r\n      language\r\n      )\r\n      .map((res: Response) => res.json())\r\n      .catch(this.errorHandler.throwError);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/services/shipment.service.ts","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpModule } from \"@angular/http\";\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { MdModule } from \"app/shared/md/md.module\";\r\nimport { ShipmentOverviewComponent } from \"app/shipment/components/shipment-overview.component\";\r\nimport { ShipmentSaveComponent } from \"app/shipment/components/shipment-save.component\";\r\nimport { CommonAppModule } from 'app/shared/common/common-app.module';\r\nimport { ShipmentService } from 'app/shipment/services/shipment.service';\r\nimport { PackTypeSaveDialog } from 'app/shipment/components/packtype-save.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    MdModule,\r\n    RouterModule,\r\n    CommonAppModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyChUim14iXhf6riJ73R3qxNxnMls2SGZDA'\r\n    }),\r\n  ],\r\n  exports: [\r\n  ],\r\n  declarations: [\r\n    ShipmentOverviewComponent,\r\n    ShipmentSaveComponent,\r\n    PackTypeSaveDialog\r\n\r\n  ],\r\n  entryComponents: [PackTypeSaveDialog],\r\n  providers: [\r\n    ShipmentService\r\n  ]\r\n})\r\nexport class ShipmentModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/app/shipment/shipment.module.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/environments/environment.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/src/main.ts","var map = {\n\t\"./af\": \"../../../../moment/locale/af.js\",\n\t\"./af.js\": \"../../../../moment/locale/af.js\",\n\t\"./ar\": \"../../../../moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../../../moment/locale/ar.js\",\n\t\"./az\": \"../../../../moment/locale/az.js\",\n\t\"./az.js\": \"../../../../moment/locale/az.js\",\n\t\"./be\": \"../../../../moment/locale/be.js\",\n\t\"./be.js\": \"../../../../moment/locale/be.js\",\n\t\"./bg\": \"../../../../moment/locale/bg.js\",\n\t\"./bg.js\": \"../../../../moment/locale/bg.js\",\n\t\"./bn\": \"../../../../moment/locale/bn.js\",\n\t\"./bn.js\": \"../../../../moment/locale/bn.js\",\n\t\"./bo\": \"../../../../moment/locale/bo.js\",\n\t\"./bo.js\": \"../../../../moment/locale/bo.js\",\n\t\"./br\": \"../../../../moment/locale/br.js\",\n\t\"./br.js\": \"../../../../moment/locale/br.js\",\n\t\"./bs\": \"../../../../moment/locale/bs.js\",\n\t\"./bs.js\": \"../../../../moment/locale/bs.js\",\n\t\"./ca\": \"../../../../moment/locale/ca.js\",\n\t\"./ca.js\": \"../../../../moment/locale/ca.js\",\n\t\"./cs\": \"../../../../moment/locale/cs.js\",\n\t\"./cs.js\": \"../../../../moment/locale/cs.js\",\n\t\"./cv\": \"../../../../moment/locale/cv.js\",\n\t\"./cv.js\": \"../../../../moment/locale/cv.js\",\n\t\"./cy\": \"../../../../moment/locale/cy.js\",\n\t\"./cy.js\": \"../../../../moment/locale/cy.js\",\n\t\"./da\": \"../../../../moment/locale/da.js\",\n\t\"./da.js\": \"../../../../moment/locale/da.js\",\n\t\"./de\": \"../../../../moment/locale/de.js\",\n\t\"./de-at\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../../../moment/locale/de.js\",\n\t\"./dv\": \"../../../../moment/locale/dv.js\",\n\t\"./dv.js\": \"../../../../moment/locale/dv.js\",\n\t\"./el\": \"../../../../moment/locale/el.js\",\n\t\"./el.js\": \"../../../../moment/locale/el.js\",\n\t\"./en-au\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-nz\": \"../../../../moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../../../moment/locale/en-nz.js\",\n\t\"./eo\": \"../../../../moment/locale/eo.js\",\n\t\"./eo.js\": \"../../../../moment/locale/eo.js\",\n\t\"./es\": \"../../../../moment/locale/es.js\",\n\t\"./es-do\": \"../../../../moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../../../moment/locale/es-do.js\",\n\t\"./es.js\": \"../../../../moment/locale/es.js\",\n\t\"./et\": \"../../../../moment/locale/et.js\",\n\t\"./et.js\": \"../../../../moment/locale/et.js\",\n\t\"./eu\": \"../../../../moment/locale/eu.js\",\n\t\"./eu.js\": \"../../../../moment/locale/eu.js\",\n\t\"./fa\": \"../../../../moment/locale/fa.js\",\n\t\"./fa.js\": \"../../../../moment/locale/fa.js\",\n\t\"./fi\": \"../../../../moment/locale/fi.js\",\n\t\"./fi.js\": \"../../../../moment/locale/fi.js\",\n\t\"./fo\": \"../../../../moment/locale/fo.js\",\n\t\"./fo.js\": \"../../../../moment/locale/fo.js\",\n\t\"./fr\": \"../../../../moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../../../moment/locale/fr.js\",\n\t\"./fy\": \"../../../../moment/locale/fy.js\",\n\t\"./fy.js\": \"../../../../moment/locale/fy.js\",\n\t\"./gd\": \"../../../../moment/locale/gd.js\",\n\t\"./gd.js\": \"../../../../moment/locale/gd.js\",\n\t\"./gl\": \"../../../../moment/locale/gl.js\",\n\t\"./gl.js\": \"../../../../moment/locale/gl.js\",\n\t\"./gom-latn\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./he\": \"../../../../moment/locale/he.js\",\n\t\"./he.js\": \"../../../../moment/locale/he.js\",\n\t\"./hi\": \"../../../../moment/locale/hi.js\",\n\t\"./hi.js\": \"../../../../moment/locale/hi.js\",\n\t\"./hr\": \"../../../../moment/locale/hr.js\",\n\t\"./hr.js\": \"../../../../moment/locale/hr.js\",\n\t\"./hu\": \"../../../../moment/locale/hu.js\",\n\t\"./hu.js\": \"../../../../moment/locale/hu.js\",\n\t\"./hy-am\": \"../../../../moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../../../moment/locale/hy-am.js\",\n\t\"./id\": \"../../../../moment/locale/id.js\",\n\t\"./id.js\": \"../../../../moment/locale/id.js\",\n\t\"./is\": \"../../../../moment/locale/is.js\",\n\t\"./is.js\": \"../../../../moment/locale/is.js\",\n\t\"./it\": \"../../../../moment/locale/it.js\",\n\t\"./it.js\": \"../../../../moment/locale/it.js\",\n\t\"./ja\": \"../../../../moment/locale/ja.js\",\n\t\"./ja.js\": \"../../../../moment/locale/ja.js\",\n\t\"./jv\": \"../../../../moment/locale/jv.js\",\n\t\"./jv.js\": \"../../../../moment/locale/jv.js\",\n\t\"./ka\": \"../../../../moment/locale/ka.js\",\n\t\"./ka.js\": \"../../../../moment/locale/ka.js\",\n\t\"./kk\": \"../../../../moment/locale/kk.js\",\n\t\"./kk.js\": \"../../../../moment/locale/kk.js\",\n\t\"./km\": \"../../../../moment/locale/km.js\",\n\t\"./km.js\": \"../../../../moment/locale/km.js\",\n\t\"./kn\": \"../../../../moment/locale/kn.js\",\n\t\"./kn.js\": \"../../../../moment/locale/kn.js\",\n\t\"./ko\": \"../../../../moment/locale/ko.js\",\n\t\"./ko.js\": \"../../../../moment/locale/ko.js\",\n\t\"./ky\": \"../../../../moment/locale/ky.js\",\n\t\"./ky.js\": \"../../../../moment/locale/ky.js\",\n\t\"./lb\": \"../../../../moment/locale/lb.js\",\n\t\"./lb.js\": \"../../../../moment/locale/lb.js\",\n\t\"./lo\": \"../../../../moment/locale/lo.js\",\n\t\"./lo.js\": \"../../../../moment/locale/lo.js\",\n\t\"./lt\": \"../../../../moment/locale/lt.js\",\n\t\"./lt.js\": \"../../../../moment/locale/lt.js\",\n\t\"./lv\": \"../../../../moment/locale/lv.js\",\n\t\"./lv.js\": \"../../../../moment/locale/lv.js\",\n\t\"./me\": \"../../../../moment/locale/me.js\",\n\t\"./me.js\": \"../../../../moment/locale/me.js\",\n\t\"./mi\": \"../../../../moment/locale/mi.js\",\n\t\"./mi.js\": \"../../../../moment/locale/mi.js\",\n\t\"./mk\": \"../../../../moment/locale/mk.js\",\n\t\"./mk.js\": \"../../../../moment/locale/mk.js\",\n\t\"./ml\": \"../../../../moment/locale/ml.js\",\n\t\"./ml.js\": \"../../../../moment/locale/ml.js\",\n\t\"./mr\": \"../../../../moment/locale/mr.js\",\n\t\"./mr.js\": \"../../../../moment/locale/mr.js\",\n\t\"./ms\": \"../../../../moment/locale/ms.js\",\n\t\"./ms-my\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../../../moment/locale/ms.js\",\n\t\"./my\": \"../../../../moment/locale/my.js\",\n\t\"./my.js\": \"../../../../moment/locale/my.js\",\n\t\"./nb\": \"../../../../moment/locale/nb.js\",\n\t\"./nb.js\": \"../../../../moment/locale/nb.js\",\n\t\"./ne\": \"../../../../moment/locale/ne.js\",\n\t\"./ne.js\": \"../../../../moment/locale/ne.js\",\n\t\"./nl\": \"../../../../moment/locale/nl.js\",\n\t\"./nl-be\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../../../moment/locale/nl.js\",\n\t\"./nn\": \"../../../../moment/locale/nn.js\",\n\t\"./nn.js\": \"../../../../moment/locale/nn.js\",\n\t\"./pa-in\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pl\": \"../../../../moment/locale/pl.js\",\n\t\"./pl.js\": \"../../../../moment/locale/pl.js\",\n\t\"./pt\": \"../../../../moment/locale/pt.js\",\n\t\"./pt-br\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../../../moment/locale/pt.js\",\n\t\"./ro\": \"../../../../moment/locale/ro.js\",\n\t\"./ro.js\": \"../../../../moment/locale/ro.js\",\n\t\"./ru\": \"../../../../moment/locale/ru.js\",\n\t\"./ru.js\": \"../../../../moment/locale/ru.js\",\n\t\"./sd\": \"../../../../moment/locale/sd.js\",\n\t\"./sd.js\": \"../../../../moment/locale/sd.js\",\n\t\"./se\": \"../../../../moment/locale/se.js\",\n\t\"./se.js\": \"../../../../moment/locale/se.js\",\n\t\"./si\": \"../../../../moment/locale/si.js\",\n\t\"./si.js\": \"../../../../moment/locale/si.js\",\n\t\"./sk\": \"../../../../moment/locale/sk.js\",\n\t\"./sk.js\": \"../../../../moment/locale/sk.js\",\n\t\"./sl\": \"../../../../moment/locale/sl.js\",\n\t\"./sl.js\": \"../../../../moment/locale/sl.js\",\n\t\"./sq\": \"../../../../moment/locale/sq.js\",\n\t\"./sq.js\": \"../../../../moment/locale/sq.js\",\n\t\"./sr\": \"../../../../moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../../../moment/locale/sr.js\",\n\t\"./ss\": \"../../../../moment/locale/ss.js\",\n\t\"./ss.js\": \"../../../../moment/locale/ss.js\",\n\t\"./sv\": \"../../../../moment/locale/sv.js\",\n\t\"./sv.js\": \"../../../../moment/locale/sv.js\",\n\t\"./sw\": \"../../../../moment/locale/sw.js\",\n\t\"./sw.js\": \"../../../../moment/locale/sw.js\",\n\t\"./ta\": \"../../../../moment/locale/ta.js\",\n\t\"./ta.js\": \"../../../../moment/locale/ta.js\",\n\t\"./te\": \"../../../../moment/locale/te.js\",\n\t\"./te.js\": \"../../../../moment/locale/te.js\",\n\t\"./tet\": \"../../../../moment/locale/tet.js\",\n\t\"./tet.js\": \"../../../../moment/locale/tet.js\",\n\t\"./th\": \"../../../../moment/locale/th.js\",\n\t\"./th.js\": \"../../../../moment/locale/th.js\",\n\t\"./tl-ph\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../../../moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../../../moment/locale/tlh.js\",\n\t\"./tr\": \"../../../../moment/locale/tr.js\",\n\t\"./tr.js\": \"../../../../moment/locale/tr.js\",\n\t\"./tzl\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzm\": \"../../../../moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../../../moment/locale/tzm.js\",\n\t\"./uk\": \"../../../../moment/locale/uk.js\",\n\t\"./uk.js\": \"../../../../moment/locale/uk.js\",\n\t\"./ur\": \"../../../../moment/locale/ur.js\",\n\t\"./ur.js\": \"../../../../moment/locale/ur.js\",\n\t\"./uz\": \"../../../../moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../../../moment/locale/uz.js\",\n\t\"./vi\": \"../../../../moment/locale/vi.js\",\n\t\"./vi.js\": \"../../../../moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../../../moment/locale/yo.js\",\n\t\"./yo.js\": \"../../../../moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"../../../../moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../../../moment/locale/zh-tw.js\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../../../moment/locale recursive ^\\\\.\\\\/.*$\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/fasavei/Source/Repos/TransApp2/Site/Presentation/TransApp.Site.FrontEnd/node_modules/moment/locale ^\\.\\/.*$\n// module id = ../../../../moment/locale recursive ^\\.\\/.*$\n// module chunks = main"],"sourceRoot":"webpack:///"}